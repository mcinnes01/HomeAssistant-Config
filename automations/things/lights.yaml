- alias: Turn On Lights
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.basement_stairs_motion
    - binary_sensor.basement_hall_motion
    - binary_sensor.snug_motion
    - binary_sensor.dining_room_motion
    - binary_sensor.utility_room_motion
    - binary_sensor.toilet_motion
    - binary_sensor.hall_motion
 #   - binary_sensor.lounge_motion
    - binary_sensor.drawing_room_motion
    - binary_sensor.kitchen_motion
    - binary_sensor.landing_motion
    - binary_sensor.studio_motion
    - binary_sensor.bathroom_motion
    - binary_sensor.bedroom_motion
    - binary_sensor.guest_room_motion
    - binary_sensor.dressing_room_motion
    to: 'on'
  mode: parallel
  action:
  - choose:
    - conditions:
        condition: template
        value_template: '{% set room = trigger.to_state.object_id[:-7] %} {{ room == ''basement_stairs'' }}'
      sequence:
      - service: light.turn_on
        data_template:
          entity_id: light.basement_hall
    - conditions:
      - condition: template
        value_template: '{{ is_state(''input_select.ambience'', ''Ambient'') }}

          '
      sequence:
      - service: light.turn_on
        data_template:
          entity_id: '{% set room = trigger.to_state.object_id[:-7] %} {% set rooms
            = [''lounge'', ''hallway'', ''kitchen'', ''bedroom'', ''snug'', ''drawing_room'']
            %} light.{{ room }}{% if room in rooms %}_lamp{% endif %}

            '
    - conditions:
        condition: template
        value_template: '{{ states(''input_select.ambience'') in [''Bright'', ''Evening'']
          }}

          '
      sequence:
      - service: light.turn_on
        data_template:
          entity_id: light.{{ trigger.to_state.object_id[:-7] }}
    - conditions:
        condition: template
        value_template: '{% set room = trigger.to_state.object_id[:-7] %} {% set rooms
          = [''basement_hall'', ''snug'', ''dining_room'', ''utility_room'', ''toilet'']
          %} {{ is_state(''input_select.ambience'', ''Day'') and room in rooms }}

          '
      sequence:
      - service: light.turn_on
        data_template:
          entity_id: light.{{ trigger.to_state.object_id[:-7] }}
    - conditions:
        condition: template
        value_template: '{% set room = trigger.to_state.object_id[:-7] %} {% set rooms
          = [''landing'', ''bathroom'', ''toilet'', ''patio''] %} {{ is_state(''input_select.ambience'',
          ''Night'') and room in rooms }}

          '
      sequence:
      - service: light.turn_on
        data_template:
          entity_id: '{% set room = trigger.to_state.object_id[:-7] %}  light.{% if
            room == ''bathroom'' %}mirror{% else %}{{ room }}{% endif %}

            '
  - service: timer.start
    data_template:
      duration: 00:02:00
      entity_id: '{% set room = trigger.to_state.object_id[:-7] %} timer.{% if room
        == ''basement_stairs'' %}basement_hall{% else %}{{ room }}{% endif %}

        '
  id: 8943aecffe7545f1a65cf7746791165b
- alias: Turn off lights
  trigger:
  - platform: event
    event_type: timer.finished
  mode: parallel
  condition:
  - condition: not
    conditions:
    - condition: template
      value_template: '{{ trigger.to_state.object_id[:-7] == ''patio'' }}'
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ is_state(''input_select.ambience'', ''Ambient'') }}

          '
      sequence:
      - service: light.turn_off
        data_template:
          entity_id: '{% set room = trigger.event.data.entity_id.split(''.'', 1)[1]
            %} {% set rooms = [''lounge'', ''hallway'', ''kitchen'', ''bedroom'',
            ''snug'', ''drawing_room''] %} light.{{ room }}{% if room in rooms %}_lamp{%
            endif %}

            '
    - conditions:
        condition: template
        value_template: '{{ states(''input_select.ambience'') in [''Bright'', ''Day'',
          ''Evening''] }}

          '
      sequence:
      - service: light.turn_off
        data_template:
          entity_id: '{% set room = trigger.event.data.entity_id.split(''.'', 1)[1]
            %} light.{{ room }}

            '
    - conditions:
        condition: template
        value_template: '{% set room = trigger.event.data.entity_id.split(''.'', 1)[1]
          %} {% set rooms = [''landing'', ''bathroom'', ''toilet'', ''patio''] %}
          {{ is_state(''input_select.ambience'', ''Night'') and room in rooms }}

          '
      sequence:
      - service: light.turn_off
        data_template:
          entity_id: '{% set room = trigger.event.data.entity_id.split(''.'', 1)[1]
            %} light.{% if room == ''bathroom'' %}mirror{% else %}{{ room }}{% endif %}'
  id: d1ef04ebbd7e46d5a40349a0344de3f6