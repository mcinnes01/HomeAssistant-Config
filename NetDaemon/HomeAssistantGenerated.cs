//------------------------------------------------------------------------------
// <auto-generated>
// Generated using NetDaemon CodeGenerator nd-codegen v24.37.1.0
//   At: 2024-11-10T14:32:31.6188001+00:00
//
// *** Make sure the version of the codegen tool and your nugets Joysoftware.NetDaemon.* have the same version.***
// You can use following command to keep it up to date with the latest version:
//   dotnet tool update NetDaemon.HassModel.CodeGen
//
// To update this file with latest entities run this command in your project directory:
//   dotnet tool run nd-codegen
//
// In the template projects we provided a convenience powershell script that will update
// the codegen and nugets to latest versions update_all_dependencies.ps1.
//
// For more information: https://netdaemon.xyz/docs/user/hass_model/hass_model_codegen
// For more information about NetDaemon: https://netdaemon.xyz/
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.Extensions.DependencyInjection;
using System.Text.Json;
using System.Text.Json.Serialization;
using NetDaemon.HassModel;
using NetDaemon.HassModel.Entities;
using NetDaemon.HassModel.Entities.Core;

namespace HomeAssistantGenerated;
public static class GeneratedExtensions
{
    ///<summary>Registers all injectable generated types in the serviceCollection</summary>
    public static IServiceCollection AddHomeAssistantGenerated(this IServiceCollection serviceCollection)
    {
        serviceCollection.AddTransient<Entities>();
        serviceCollection.AddTransient<LightEntities>();
        serviceCollection.AddTransient<MediaPlayerEntities>();
        serviceCollection.AddTransient<AlarmControlPanelEntities>();
        serviceCollection.AddTransient<AutomationEntities>();
        serviceCollection.AddTransient<BinarySensorEntities>();
        serviceCollection.AddTransient<ButtonEntities>();
        serviceCollection.AddTransient<CalendarEntities>();
        serviceCollection.AddTransient<CameraEntities>();
        serviceCollection.AddTransient<ClimateEntities>();
        serviceCollection.AddTransient<ConversationEntities>();
        serviceCollection.AddTransient<DeviceTrackerEntities>();
        serviceCollection.AddTransient<EventEntities>();
        serviceCollection.AddTransient<FanEntities>();
        serviceCollection.AddTransient<GroupEntities>();
        serviceCollection.AddTransient<InputBooleanEntities>();
        serviceCollection.AddTransient<InputButtonEntities>();
        serviceCollection.AddTransient<InputDatetimeEntities>();
        serviceCollection.AddTransient<InputNumberEntities>();
        serviceCollection.AddTransient<InputSelectEntities>();
        serviceCollection.AddTransient<InputTextEntities>();
        serviceCollection.AddTransient<NumberEntities>();
        serviceCollection.AddTransient<PersonEntities>();
        serviceCollection.AddTransient<ProximityEntities>();
        serviceCollection.AddTransient<RemoteEntities>();
        serviceCollection.AddTransient<SceneEntities>();
        serviceCollection.AddTransient<ScriptEntities>();
        serviceCollection.AddTransient<SelectEntities>();
        serviceCollection.AddTransient<SensorEntities>();
        serviceCollection.AddTransient<SttEntities>();
        serviceCollection.AddTransient<SunEntities>();
        serviceCollection.AddTransient<SwitchEntities>();
        serviceCollection.AddTransient<TextEntities>();
        serviceCollection.AddTransient<TimerEntities>();
        serviceCollection.AddTransient<TodoEntities>();
        serviceCollection.AddTransient<TtsEntities>();
        serviceCollection.AddTransient<UpdateEntities>();
        serviceCollection.AddTransient<WeatherEntities>();
        serviceCollection.AddTransient<ZoneEntities>();
        serviceCollection.AddTransient<TagEntities>();
        serviceCollection.AddTransient<ImageEntities>();
        serviceCollection.AddTransient<NotifyEntities>();
        serviceCollection.AddTransient<VacuumEntities>();
        serviceCollection.AddTransient<Services>();
        serviceCollection.AddTransient<AdguardServices>();
        serviceCollection.AddTransient<AlarmControlPanelServices>();
        serviceCollection.AddTransient<AlarmoServices>();
        serviceCollection.AddTransient<AlexaMediaServices>();
        serviceCollection.AddTransient<AutomationServices>();
        serviceCollection.AddTransient<BrowserModServices>();
        serviceCollection.AddTransient<ButtonServices>();
        serviceCollection.AddTransient<CalendarServices>();
        serviceCollection.AddTransient<CameraServices>();
        serviceCollection.AddTransient<ClimateServices>();
        serviceCollection.AddTransient<CloudServices>();
        serviceCollection.AddTransient<ConversationServices>();
        serviceCollection.AddTransient<CounterServices>();
        serviceCollection.AddTransient<CoverServices>();
        serviceCollection.AddTransient<DeviceTrackerServices>();
        serviceCollection.AddTransient<EsphomeServices>();
        serviceCollection.AddTransient<FanServices>();
        serviceCollection.AddTransient<FfmpegServices>();
        serviceCollection.AddTransient<FrontendServices>();
        serviceCollection.AddTransient<FullyKioskServices>();
        serviceCollection.AddTransient<GoogleServices>();
        serviceCollection.AddTransient<GoogleGenerativeAiConversationServices>();
        serviceCollection.AddTransient<GroupServices>();
        serviceCollection.AddTransient<HabiticaServices>();
        serviceCollection.AddTransient<HassioServices>();
        serviceCollection.AddTransient<HomeassistantServices>();
        serviceCollection.AddTransient<HumidifierServices>();
        serviceCollection.AddTransient<ImageServices>();
        serviceCollection.AddTransient<InputBooleanServices>();
        serviceCollection.AddTransient<InputButtonServices>();
        serviceCollection.AddTransient<InputDatetimeServices>();
        serviceCollection.AddTransient<InputNumberServices>();
        serviceCollection.AddTransient<InputSelectServices>();
        serviceCollection.AddTransient<InputTextServices>();
        serviceCollection.AddTransient<LightServices>();
        serviceCollection.AddTransient<LocaltuyaServices>();
        serviceCollection.AddTransient<LockServices>();
        serviceCollection.AddTransient<LogbookServices>();
        serviceCollection.AddTransient<LoggerServices>();
        serviceCollection.AddTransient<MediaPlayerServices>();
        serviceCollection.AddTransient<MqttServices>();
        serviceCollection.AddTransient<NetdaemonServices>();
        serviceCollection.AddTransient<NotifyServices>();
        serviceCollection.AddTransient<NumberServices>();
        serviceCollection.AddTransient<OctopusEnergyServices>();
        serviceCollection.AddTransient<PersistentNotificationServices>();
        serviceCollection.AddTransient<PersonServices>();
        serviceCollection.AddTransient<RecorderServices>();
        serviceCollection.AddTransient<RemoteServices>();
        serviceCollection.AddTransient<SceneServices>();
        serviceCollection.AddTransient<ScheduleServices>();
        serviceCollection.AddTransient<ScriptServices>();
        serviceCollection.AddTransient<SelectServices>();
        serviceCollection.AddTransient<ShoppingListServices>();
        serviceCollection.AddTransient<SirenServices>();
        serviceCollection.AddTransient<SpotcastServices>();
        serviceCollection.AddTransient<SqueezeboxServices>();
        serviceCollection.AddTransient<SwitchServices>();
        serviceCollection.AddTransient<SystemLogServices>();
        serviceCollection.AddTransient<TemplateServices>();
        serviceCollection.AddTransient<TextServices>();
        serviceCollection.AddTransient<TimeServices>();
        serviceCollection.AddTransient<TimerServices>();
        serviceCollection.AddTransient<TodoServices>();
        serviceCollection.AddTransient<TtsServices>();
        serviceCollection.AddTransient<UnifiprotectServices>();
        serviceCollection.AddTransient<UpdateServices>();
        serviceCollection.AddTransient<VacuumServices>();
        serviceCollection.AddTransient<ValveServices>();
        serviceCollection.AddTransient<WasteCollectionScheduleServices>();
        serviceCollection.AddTransient<WeatherServices>();
        serviceCollection.AddTransient<YeelightServices>();
        serviceCollection.AddTransient<ZoneServices>();
        return serviceCollection;
    }
}

public interface IEntities
{
    LightEntities Light { get; }

    MediaPlayerEntities MediaPlayer { get; }

    AlarmControlPanelEntities AlarmControlPanel { get; }

    AutomationEntities Automation { get; }

    BinarySensorEntities BinarySensor { get; }

    ButtonEntities Button { get; }

    CalendarEntities Calendar { get; }

    CameraEntities Camera { get; }

    ClimateEntities Climate { get; }

    ConversationEntities Conversation { get; }

    DeviceTrackerEntities DeviceTracker { get; }

    EventEntities Event { get; }

    FanEntities Fan { get; }

    GroupEntities Group { get; }

    InputBooleanEntities InputBoolean { get; }

    InputButtonEntities InputButton { get; }

    InputDatetimeEntities InputDatetime { get; }

    InputNumberEntities InputNumber { get; }

    InputSelectEntities InputSelect { get; }

    InputTextEntities InputText { get; }

    NumberEntities Number { get; }

    PersonEntities Person { get; }

    ProximityEntities Proximity { get; }

    RemoteEntities Remote { get; }

    SceneEntities Scene { get; }

    ScriptEntities Script { get; }

    SelectEntities Select { get; }

    SensorEntities Sensor { get; }

    SttEntities Stt { get; }

    SunEntities Sun { get; }

    SwitchEntities Switch { get; }

    TextEntities Text { get; }

    TimerEntities Timer { get; }

    TodoEntities Todo { get; }

    TtsEntities Tts { get; }

    UpdateEntities Update { get; }

    WeatherEntities Weather { get; }

    ZoneEntities Zone { get; }

    TagEntities Tag { get; }

    ImageEntities Image { get; }

    NotifyEntities Notify { get; }

    VacuumEntities Vacuum { get; }
}

public partial class Entities : IEntities
{
    private readonly IHaContext _haContext;
    public Entities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    public LightEntities Light => new(_haContext);
    public MediaPlayerEntities MediaPlayer => new(_haContext);
    public AlarmControlPanelEntities AlarmControlPanel => new(_haContext);
    public AutomationEntities Automation => new(_haContext);
    public BinarySensorEntities BinarySensor => new(_haContext);
    public ButtonEntities Button => new(_haContext);
    public CalendarEntities Calendar => new(_haContext);
    public CameraEntities Camera => new(_haContext);
    public ClimateEntities Climate => new(_haContext);
    public ConversationEntities Conversation => new(_haContext);
    public DeviceTrackerEntities DeviceTracker => new(_haContext);
    public EventEntities Event => new(_haContext);
    public FanEntities Fan => new(_haContext);
    public GroupEntities Group => new(_haContext);
    public InputBooleanEntities InputBoolean => new(_haContext);
    public InputButtonEntities InputButton => new(_haContext);
    public InputDatetimeEntities InputDatetime => new(_haContext);
    public InputNumberEntities InputNumber => new(_haContext);
    public InputSelectEntities InputSelect => new(_haContext);
    public InputTextEntities InputText => new(_haContext);
    public NumberEntities Number => new(_haContext);
    public PersonEntities Person => new(_haContext);
    public ProximityEntities Proximity => new(_haContext);
    public RemoteEntities Remote => new(_haContext);
    public SceneEntities Scene => new(_haContext);
    public ScriptEntities Script => new(_haContext);
    public SelectEntities Select => new(_haContext);
    public SensorEntities Sensor => new(_haContext);
    public SttEntities Stt => new(_haContext);
    public SunEntities Sun => new(_haContext);
    public SwitchEntities Switch => new(_haContext);
    public TextEntities Text => new(_haContext);
    public TimerEntities Timer => new(_haContext);
    public TodoEntities Todo => new(_haContext);
    public TtsEntities Tts => new(_haContext);
    public UpdateEntities Update => new(_haContext);
    public WeatherEntities Weather => new(_haContext);
    public ZoneEntities Zone => new(_haContext);
    public TagEntities Tag => new(_haContext);
    public ImageEntities Image => new(_haContext);
    public NotifyEntities Notify => new(_haContext);
    public VacuumEntities Vacuum => new(_haContext);
}

public partial class LightEntities
{
    private readonly IHaContext _haContext;
    public LightEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all light entities currently registered (at runtime) in Home Assistant as LightEntity</summary>
    public IEnumerable<LightEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("light.")).Select(e => new LightEntity(e));
    ///<summary>All Lights</summary>
    public LightEntity AllLights => new(_haContext, "light.all_lights");
    ///<summary>Backdoor Light</summary>
    public LightEntity BackdoorLight => new(_haContext, "light.backdoor_light");
    ///<summary>Basement Hall Light</summary>
    public LightEntity BasementHallLight => new(_haContext, "light.basement_hall_light");
    ///<summary>Basement Hall Lights</summary>
    public LightEntity BasementHallLights => new(_haContext, "light.basement_hall_lights");
    ///<summary>Basement Lights</summary>
    public LightEntity BasementLights => new(_haContext, "light.basement_lights");
    ///<summary>Basement Stairs Light</summary>
    public LightEntity BasementStairsLight => new(_haContext, "light.basement_stairs_light");
    ///<summary>Bathroom Light</summary>
    public LightEntity BathroomLight => new(_haContext, "light.bathroom_light");
    ///<summary>Bathroom Lights</summary>
    public LightEntity BathroomLights => new(_haContext, "light.bathroom_lights");
    ///<summary>Bedroom Lamp</summary>
    public LightEntity BedroomLamp => new(_haContext, "light.bedroom_lamp");
    ///<summary>Bedroom Light</summary>
    public LightEntity BedroomLight => new(_haContext, "light.bedroom_light");
    ///<summary>Bedroom Lights</summary>
    public LightEntity BedroomLights => new(_haContext, "light.bedroom_lights");
    ///<summary>Bookshelf Light</summary>
    public LightEntity BookshelfLight => new(_haContext, "light.bookshelf_light");
    ///<summary>Breakfast Bar Lamp</summary>
    public LightEntity BreakfastBarLamp => new(_haContext, "light.breakfast_bar_lamp");
    ///<summary>Brewery Light</summary>
    public LightEntity BreweryLight => new(_haContext, "light.brewery_light");
    ///<summary>Cabinet Light</summary>
    public LightEntity CabinetLight => new(_haContext, "light.cabinet_light");
    ///<summary>Cellar Door Light</summary>
    public LightEntity CellarDoorLight => new(_haContext, "light.cellar_door_light");
    ///<summary>Decking Lights</summary>
    public LightEntity DeckingLights => new(_haContext, "light.decking_lights");
    ///<summary>Decking Wall Light</summary>
    public LightEntity DeckingWallLight => new(_haContext, "light.decking_wall_light");
    ///<summary>Dining Room Light</summary>
    public LightEntity DiningRoomLight => new(_haContext, "light.dining_room_light");
    ///<summary>Display Cabinet Light</summary>
    public LightEntity DisplayCabinetLight => new(_haContext, "light.display_cabinet_light");
    ///<summary>Downstairs Lights</summary>
    public LightEntity DownstairsLights => new(_haContext, "light.downstairs_lights");
    ///<summary>Drawing Room Light</summary>
    public LightEntity DrawingRoomLight => new(_haContext, "light.drawing_room_light");
    ///<summary>Drawing Room Lights</summary>
    public LightEntity DrawingRoomLights => new(_haContext, "light.drawing_room_lights");
    ///<summary>Dressing Room Light</summary>
    public LightEntity DressingRoomLight => new(_haContext, "light.dressing_room_light");
    ///<summary>Electric Cabinet Light</summary>
    public LightEntity ElectricCabinetLight => new(_haContext, "light.electric_cabinet_light");
    ///<summary>Fence Lights</summary>
    public LightEntity FenceLights => new(_haContext, "light.fence_lights");
    ///<summary>Garden Lights</summary>
    public LightEntity GardenLights => new(_haContext, "light.garden_lights");
    ///<summary>Guest Room Lamp</summary>
    public LightEntity GuestRoomLamp => new(_haContext, "light.guest_room_lamp");
    ///<summary>Guest Room Light</summary>
    public LightEntity GuestRoomLight => new(_haContext, "light.guest_room_light");
    ///<summary>Hallway Lamp</summary>
    public LightEntity HallwayLamp => new(_haContext, "light.hallway_lamp");
    ///<summary>Hallway Light</summary>
    public LightEntity HallwayLight => new(_haContext, "light.hallway_light");
    ///<summary>Hallway Lights</summary>
    public LightEntity HallwayLights => new(_haContext, "light.hallway_lights");
    ///<summary>Inside Lights</summary>
    public LightEntity InsideLights => new(_haContext, "light.inside_lights");
    ///<summary>Inside No Room Control Not Basement</summary>
    public LightEntity InsideNoRoomControlNotBasement => new(_haContext, "light.inside_no_room_control_not_basement");
    ///<summary>Kitchen Light</summary>
    public LightEntity KitchenLight => new(_haContext, "light.kitchen_light");
    ///<summary>Kitchen Lights</summary>
    public LightEntity KitchenLights => new(_haContext, "light.kitchen_lights");
    ///<summary>Landing Light</summary>
    public LightEntity LandingLight => new(_haContext, "light.landing_light");
    ///<summary>Lounge Floor Lamp</summary>
    public LightEntity LoungeFloorLamp => new(_haContext, "light.lounge_floor_lamp");
    ///<summary>Lounge Lamp</summary>
    public LightEntity LoungeLamp => new(_haContext, "light.lounge_lamp");
    ///<summary>Lounge Lamps</summary>
    public LightEntity LoungeLamps => new(_haContext, "light.lounge_lamps");
    ///<summary>Lounge Light</summary>
    public LightEntity LoungeLight => new(_haContext, "light.lounge_light");
    ///<summary>Lounge Lights</summary>
    public LightEntity LoungeLights => new(_haContext, "light.lounge_lights");
    ///<summary>Mirror Light</summary>
    public LightEntity MirrorLight => new(_haContext, "light.mirror_light");
    ///<summary>Outside Lights</summary>
    public LightEntity OutsideLights => new(_haContext, "light.outside_lights");
    ///<summary>Patio Lamp</summary>
    public LightEntity PatioLamp => new(_haContext, "light.patio_lamp");
    ///<summary>Patio Light</summary>
    public LightEntity PatioLight => new(_haContext, "light.patio_light");
    ///<summary>Patio Lights</summary>
    public LightEntity PatioLights => new(_haContext, "light.patio_lights");
    ///<summary>Porch Light</summary>
    public LightEntity PorchLight => new(_haContext, "light.porch_light");
    ///<summary>RGB Lights</summary>
    public LightEntity RgbLights => new(_haContext, "light.rgb_lights");
    ///<summary>Shed Light</summary>
    public LightEntity ShedLight => new(_haContext, "light.shed_light");
    ///<summary>Shed Lights</summary>
    public LightEntity ShedLights => new(_haContext, "light.shed_lights");
    public LightEntity SnugLamp => new(_haContext, "light.snug_lamp");
    ///<summary>Snug Led Strip</summary>
    public LightEntity SnugLedStrip => new(_haContext, "light.snug_led_strip");
    ///<summary>Snug Light</summary>
    public LightEntity SnugLight => new(_haContext, "light.snug_light");
    ///<summary>Snug Lights</summary>
    public LightEntity SnugLights => new(_haContext, "light.snug_lights");
    ///<summary>Sonoff Downstairs 1 Sonoff Downstairs 1 Blue LED</summary>
    public LightEntity SonoffDownstairs1BlueLed => new(_haContext, "light.sonoff_downstairs_1_blue_led");
    ///<summary>Sonoff Downstairs 2 Sonoff Downstairs 2 Blue LED</summary>
    public LightEntity SonoffDownstairs2BlueLed => new(_haContext, "light.sonoff_downstairs_2_blue_led");
    ///<summary>Store Light</summary>
    public LightEntity StoreLight => new(_haContext, "light.store_light");
    ///<summary>studio-bluetooth-proxy ESPresense Studio LED 1</summary>
    public LightEntity StudioBluetoothProxyLed1 => new(_haContext, "light.studio_bluetooth_proxy_led_1");
    ///<summary>Studio Light</summary>
    public LightEntity StudioLight => new(_haContext, "light.studio_light");
    ///<summary>Toilet Light</summary>
    public LightEntity ToiletLight => new(_haContext, "light.toilet_light");
    ///<summary>Upstairs Lights</summary>
    public LightEntity UpstairsLights => new(_haContext, "light.upstairs_lights");
    ///<summary>Upstairs Spare Light</summary>
    public LightEntity UpstairsSpareLight => new(_haContext, "light.upstairs_spare_light");
    ///<summary>Utility Room Light</summary>
    public LightEntity UtilityRoomLight => new(_haContext, "light.utility_room_light");
    ///<summary>Utility Room Lights</summary>
    public LightEntity UtilityRoomLights => new(_haContext, "light.utility_room_lights");
    ///<summary>Without Room Control</summary>
    public LightEntity WithoutRoomControl => new(_haContext, "light.without_room_control");
}

public partial class MediaPlayerEntities
{
    private readonly IHaContext _haContext;
    public MediaPlayerEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all media_player entities currently registered (at runtime) in Home Assistant as MediaPlayerEntity</summary>
    public IEnumerable<MediaPlayerEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("media_player.")).Select(e => new MediaPlayerEntity(e));
    ///<summary>All Speakers</summary>
    public MediaPlayerEntity AllSpeakers => new(_haContext, "media_player.all_speakers");
    ///<summary>Andrew&apos;s Echo Buds</summary>
    public MediaPlayerEntity AndrewSEchoBuds => new(_haContext, "media_player.andrew_s_echo_buds");
    ///<summary>Andrew&apos;s Echo Buds</summary>
    public MediaPlayerEntity AndrewSEchoBuds2 => new(_haContext, "media_player.andrew_s_echo_buds_2");
    ///<summary>Andrew&apos;s Echo Buds</summary>
    public MediaPlayerEntity AndrewSEchoBuds3 => new(_haContext, "media_player.andrew_s_echo_buds_3");
    ///<summary>Andrew&apos;s Echo Buds</summary>
    public MediaPlayerEntity AndrewSEchoBuds4 => new(_haContext, "media_player.andrew_s_echo_buds_4");
    ///<summary>Andrew&apos;s Echo Studio</summary>
    public MediaPlayerEntity AndrewSEchoStudio => new(_haContext, "media_player.andrew_s_echo_studio");
    ///<summary>Andrew&apos;s Samsung TV 2020-U</summary>
    public MediaPlayerEntity AndrewSSamsungTv2020U => new(_haContext, "media_player.andrew_s_samsung_tv_2020_u");
    ///<summary>Basement</summary>
    public MediaPlayerEntity Basement => new(_haContext, "media_player.basement");
    ///<summary>Bedroom Echo Show</summary>
    public MediaPlayerEntity BedroomEchoShow => new(_haContext, "media_player.bedroom_echo_show");
    ///<summary>Dining Room Echo Input</summary>
    public MediaPlayerEntity DiningRoomEchoInput => new(_haContext, "media_player.dining_room_echo_input");
    public MediaPlayerEntity DiningRoomRadio => new(_haContext, "media_player.dining_room_radio");
    ///<summary>Downstairs</summary>
    public MediaPlayerEntity Downstairs => new(_haContext, "media_player.downstairs");
    ///<summary>Drawing Room Echo Dot</summary>
    public MediaPlayerEntity DrawingRoomEchoDot => new(_haContext, "media_player.drawing_room_echo_dot");
    ///<summary>Dressing Room Echo Spot</summary>
    public MediaPlayerEntity DressingRoomEchoSpot => new(_haContext, "media_player.dressing_room_echo_spot");
    ///<summary>Garden</summary>
    public MediaPlayerEntity Garden => new(_haContext, "media_player.garden");
    ///<summary>Guest Room Echo Show</summary>
    public MediaPlayerEntity GuestRoomEchoShow => new(_haContext, "media_player.guest_room_echo_show");
    ///<summary>Hall Tablet</summary>
    public MediaPlayerEntity HallTablet => new(_haContext, "media_player.hall_tablet");
    ///<summary>Hallway Tablet</summary>
    public MediaPlayerEntity HallwayTablet => new(_haContext, "media_player.hallway_tablet");
    ///<summary>Kichen-Wallboard</summary>
    public MediaPlayerEntity KichenWallboard => new(_haContext, "media_player.kichen_wallboard");
    ///<summary>Kitchen Camera Speaker</summary>
    public MediaPlayerEntity KitchenCameraSpeaker => new(_haContext, "media_player.kitchen_camera_speaker");
    ///<summary>Kitchen Echo Show</summary>
    public MediaPlayerEntity KitchenEchoShow => new(_haContext, "media_player.kitchen_echo_show");
    ///<summary>Landing Tablet</summary>
    public MediaPlayerEntity LandingTablet => new(_haContext, "media_player.landing_tablet");
    ///<summary>Lounge Echo Plus</summary>
    public MediaPlayerEntity LoungeEchoPlus => new(_haContext, "media_player.lounge_echo_plus");
    ///<summary>Lounge Fire TV</summary>
    public MediaPlayerEntity LoungeFireTv => new(_haContext, "media_player.lounge_fire_tv");
    ///<summary>Offices</summary>
    public MediaPlayerEntity Offices => new(_haContext, "media_player.offices");
    ///<summary>Patio</summary>
    public MediaPlayerEntity Patio => new(_haContext, "media_player.patio");
    ///<summary>Shed Echo Input</summary>
    public MediaPlayerEntity ShedEchoInput => new(_haContext, "media_player.shed_echo_input");
    ///<summary>Snug Echo Show</summary>
    public MediaPlayerEntity SnugEchoShow => new(_haContext, "media_player.snug_echo_show");
    ///<summary>Snug Fire TV</summary>
    public MediaPlayerEntity SnugFireTv => new(_haContext, "media_player.snug_fire_tv");
    ///<summary>Projector</summary>
    public MediaPlayerEntity SnugProjector => new(_haContext, "media_player.snug_projector");
    ///<summary>Snug Projector</summary>
    public MediaPlayerEntity SnugProjector2 => new(_haContext, "media_player.snug_projector_2");
    public MediaPlayerEntity SnugRadio => new(_haContext, "media_player.snug_radio");
    ///<summary>Studio Echo Dot</summary>
    public MediaPlayerEntity StudioEchoDot => new(_haContext, "media_player.studio_echo_dot");
    ///<summary>This Device</summary>
    public MediaPlayerEntity ThisDevice2 => new(_haContext, "media_player.this_device_2");
    ///<summary>Upstairs</summary>
    public MediaPlayerEntity Upstairs => new(_haContext, "media_player.upstairs");
    ///<summary>Utility Room Echo Dot</summary>
    public MediaPlayerEntity UtilityRoomEchoDot => new(_haContext, "media_player.utility_room_echo_dot");
}

public partial class AlarmControlPanelEntities
{
    private readonly IHaContext _haContext;
    public AlarmControlPanelEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all alarm_control_panel entities currently registered (at runtime) in Home Assistant as AlarmControlPanelEntity</summary>
    public IEnumerable<AlarmControlPanelEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("alarm_control_panel.")).Select(e => new AlarmControlPanelEntity(e));
    ///<summary>Alarm</summary>
    public AlarmControlPanelEntity Alarm => new(_haContext, "alarm_control_panel.alarm");
    ///<summary>Alarmo</summary>
    public AlarmControlPanelEntity Alarmo => new(_haContext, "alarm_control_panel.alarmo");
}

public partial class AutomationEntities
{
    private readonly IHaContext _haContext;
    public AutomationEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all automation entities currently registered (at runtime) in Home Assistant as AutomationEntity</summary>
    public IEnumerable<AutomationEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("automation.")).Select(e => new AutomationEntity(e));
    ///<summary>Andy is home</summary>
    public AutomationEntity AndyIsHome => new(_haContext, "automation.andy_is_home");
    ///<summary>automation 40</summary>
    public AutomationEntity Automation46 => new(_haContext, "automation.automation_46");
    ///<summary>Patio door is open</summary>
    public AutomationEntity BackDoorIsOpen => new(_haContext, "automation.back_door_is_open");
    ///<summary>Basement Hall Camera Snapshot, AI &amp; Notification on Motion</summary>
    public AutomationEntity BasementHallCameraSnapshotAiNotificationOnMotion => new(_haContext, "automation.basement_hall_camera_snapshot_ai_notification_on_motion");
    ///<summary>Keep Basement Hall On</summary>
    public AutomationEntity BasementHallLightOffSoTurnOn => new(_haContext, "automation.basement_hall_light_off_so_turn_on");
    ///<summary>Bathroom Switch</summary>
    public AutomationEntity BathroomSwitch => new(_haContext, "automation.bathroom_switch");
    ///<summary>Out of bed</summary>
    public AutomationEntity BedSensorSetsInBedToOff => new(_haContext, "automation.bed_sensor_sets_in_bed_to_off");
    ///<summary>In bed</summary>
    public AutomationEntity BedSensorSetsInBedToOn => new(_haContext, "automation.bed_sensor_sets_in_bed_to_on");
    ///<summary>Bedroom Lights Off Reset Mode</summary>
    public AutomationEntity BedroomLightsOffResetMode => new(_haContext, "automation.bedroom_lights_off_reset_mode");
    ///<summary>Bedroom show screen off </summary>
    public AutomationEntity BedroomShowScreenOff => new(_haContext, "automation.bedroom_show_screen_off");
    ///<summary>Bedroom show screen on</summary>
    public AutomationEntity BedroomShowScreenOn => new(_haContext, "automation.bedroom_show_screen_on");
    ///<summary>Bedroom Switch</summary>
    public AutomationEntity BedroomSwitch => new(_haContext, "automation.bedroom_switch");
    ///<summary>Bedside Remote Actions</summary>
    public AutomationEntity BedsideRemoteActions => new(_haContext, "automation.bedside_remote_actions");
    ///<summary>Carbon Monoxide Detected</summary>
    public AutomationEntity CarbonMonoxideDetected => new(_haContext, "automation.carbon_monoxide_detected");
    ///<summary>Cat feeding time</summary>
    public AutomationEntity CatFeedingTime => new(_haContext, "automation.cat_feeding_time");
    ///<summary>Claire is home</summary>
    public AutomationEntity ClaireIsHome => new(_haContext, "automation.claire_is_home");
    ///<summary>Conversation agent agenda notification</summary>
    public AutomationEntity ConversationAgentAgendaNotification => new(_haContext, "automation.conversation_agent_agenda_notification");
    ///<summary>Dining Room Switch</summary>
    public AutomationEntity DiningRoomSwitch => new(_haContext, "automation.dining_room_switch");
    ///<summary>Door open</summary>
    public AutomationEntity DoorOpen => new(_haContext, "automation.door_open");
    ///<summary>Doorbell Notifications</summary>
    public AutomationEntity DoorbellNotifications => new(_haContext, "automation.doorbell_notifications");
    ///<summary>Drawing Room Switch</summary>
    public AutomationEntity DrawingRoomSwitch => new(_haContext, "automation.drawing_room_switch");
    ///<summary>Dressing Room Switch</summary>
    public AutomationEntity DressingRoom => new(_haContext, "automation.dressing_room");
    ///<summary>Ensure bed Socket on when sleeping</summary>
    public AutomationEntity EnsureBedSocketOnWhenSleeping => new(_haContext, "automation.ensure_bed_socket_on_when_sleeping");
    ///<summary>Feed Cats</summary>
    public AutomationEntity FeedCats => new(_haContext, "automation.feed_cats");
    ///<summary>Guest Room Bedside Switch</summary>
    public AutomationEntity GuestRoomBedsideSwitch => new(_haContext, "automation.guest_room_bedside_switch");
    ///<summary>Guest Room Remote Actions</summary>
    public AutomationEntity GuestRoomRemoteActions => new(_haContext, "automation.guest_room_remote_actions");
    ///<summary>Guest Room Switch</summary>
    public AutomationEntity GuestRoomSwitch => new(_haContext, "automation.guest_room_switch");
    ///<summary>Hallway Camera Snapshot, AI &amp; Notification on Motion</summary>
    public AutomationEntity HallwayCameraSnapshotAiNotificationOnMotion => new(_haContext, "automation.hallway_camera_snapshot_ai_notification_on_motion");
    ///<summary>Hallway Lamp On At Sunset</summary>
    public AutomationEntity HallwayLampOnAtSunset => new(_haContext, "automation.hallway_lamp_on_at_sunset");
    ///<summary>Keep Cabinet Light On</summary>
    public AutomationEntity KeepCabinetLightOn => new(_haContext, "automation.keep_cabinet_light_on");
    ///<summary>Keep Hallway Light On</summary>
    public AutomationEntity KeepHallwayLightOn => new(_haContext, "automation.keep_hallway_light_on");
    ///<summary>Kitchen Camera Snapshot, AI &amp; Notification on Motion</summary>
    public AutomationEntity KitchenCameraSnapshotAiNotificationOnMotion => new(_haContext, "automation.kitchen_camera_snapshot_ai_notification_on_motion");
    ///<summary>Patio person motion event snapshot - Andy iPhone</summary>
    public AutomationEntity KitchenMotionEventSnapshot => new(_haContext, "automation.kitchen_motion_event_snapshot");
    ///<summary>Kitchen Switch</summary>
    public AutomationEntity KitchenSwitch => new(_haContext, "automation.kitchen_switch");
    ///<summary>Kitchen Wallboard Off</summary>
    public AutomationEntity KitchenWallboardOff => new(_haContext, "automation.kitchen_wallboard_off");
    ///<summary>Kitchen Wallboard On</summary>
    public AutomationEntity KitchenWallboardOn => new(_haContext, "automation.kitchen_wallboard_on");
    ///<summary>Left Bedside Switch</summary>
    public AutomationEntity LeftBedsideSwitch => new(_haContext, "automation.left_bedside_switch");
    ///<summary>Loft hatch closed</summary>
    public AutomationEntity LoftHatchClosed => new(_haContext, "automation.loft_hatch_closed");
    ///<summary>Loft hatch open</summary>
    public AutomationEntity LoftHatchOpen => new(_haContext, "automation.loft_hatch_open");
    ///<summary>Lounge Scene Watch Television</summary>
    public AutomationEntity LoungeSceneWatchTelevision2 => new(_haContext, "automation.lounge_scene_watch_television_2");
    ///<summary>Lounge Sofa Switch</summary>
    public AutomationEntity LoungeSofaSwitch => new(_haContext, "automation.lounge_sofa_switch");
    ///<summary>Lounge Switch</summary>
    public AutomationEntity LoungeSwitch => new(_haContext, "automation.lounge_switch");
    ///<summary>Low battery level detection &amp; notification for all battery sensors</summary>
    public AutomationEntity LowBatteryLevelDetectionNotificationForAllBatterySensors => new(_haContext, "automation.low_battery_level_detection_notification_for_all_battery_sensors");
    ///<summary>Morning When Sunrise</summary>
    public AutomationEntity MorningWhenSunrise => new(_haContext, "automation.morning_when_sunrise");
    ///<summary>New Automation</summary>
    public AutomationEntity NewAutomation => new(_haContext, "automation.new_automation");
    ///<summary>NSPanel Configuration</summary>
    public AutomationEntity NspanelConfiguration => new(_haContext, "automation.nspanel_configuration");
    ///<summary>Patio Camera Snapshot, AI &amp; Notification on Motion</summary>
    public AutomationEntity PatioCameraSnapshotAiNotificationOnMotion => new(_haContext, "automation.patio_camera_snapshot_ai_notification_on_motion");
    ///<summary>Cellar Door Motion Detected</summary>
    public AutomationEntity PatioMotionDetected => new(_haContext, "automation.patio_motion_detected");
    ///<summary>Patio person motion event snapshot - Claire iPhone</summary>
    public AutomationEntity PatioPersonMotionEventSnapshotClaireIphone => new(_haContext, "automation.patio_person_motion_event_snapshot_claire_iphone");
    ///<summary>Reload Alexa Media Player after HA starts</summary>
    public AutomationEntity ReloadAlexaMediaPlayerAfterHaStarts => new(_haContext, "automation.reload_alexa_media_player_after_ha_starts");
    ///<summary>Replace Carbon Monoxide Batteries</summary>
    public AutomationEntity ReplaceCarbonMonoxideBatteries => new(_haContext, "automation.replace_carbon_monoxide_batteries");
    ///<summary>Right Bedside Switch</summary>
    public AutomationEntity RightBedsideSwitch => new(_haContext, "automation.right_bedside_switch");
    ///<summary>Send notification when alarm is Armed in Away mode</summary>
    public AutomationEntity SendNotificationWhenAlarmIsArmedInAwayMode => new(_haContext, "automation.send_notification_when_alarm_is_armed_in_away_mode");
    ///<summary>Send notification when alarm is Armed in Home mode</summary>
    public AutomationEntity SendNotificationWhenAlarmIsArmedInHomeMode => new(_haContext, "automation.send_notification_when_alarm_is_armed_in_home_mode");
    ///<summary>Send notification when alarm is arming</summary>
    public AutomationEntity SendNotificationWhenAlarmIsArming => new(_haContext, "automation.send_notification_when_alarm_is_arming");
    ///<summary>Turn Off Ex Machina lights when alarm disarmed</summary>
    public AutomationEntity SendNotificationWhenAlarmIsDisarmed => new(_haContext, "automation.send_notification_when_alarm_is_disarmed");
    ///<summary>Send notification when alarm is Disarmed</summary>
    public AutomationEntity SendNotificationWhenAlarmIsDisarmed2 => new(_haContext, "automation.send_notification_when_alarm_is_disarmed_2");
    ///<summary>Send notification when alarm is pending</summary>
    public AutomationEntity SendNotificationWhenAlarmIsPending => new(_haContext, "automation.send_notification_when_alarm_is_pending");
    ///<summary>Send notification when alarm triggered</summary>
    public AutomationEntity SendNotificationWhenAlarmTriggered2 => new(_haContext, "automation.send_notification_when_alarm_triggered_2");
    ///<summary>Set cat feeder varaibles on restart</summary>
    public AutomationEntity SetCatFeederVaraiblesOnRestart => new(_haContext, "automation.set_cat_feeder_varaibles_on_restart");
    ///<summary>Set TimeOfDay To Afternoon</summary>
    public AutomationEntity SetTimeofdayToAfternoon => new(_haContext, "automation.set_timeofday_to_afternoon");
    ///<summary>Set TimeOfDay To Day</summary>
    public AutomationEntity SetTimeofdayToDay => new(_haContext, "automation.set_timeofday_to_day");
    ///<summary>Set TimeOfDay To Night</summary>
    public AutomationEntity SetTimeofdayToNight => new(_haContext, "automation.set_timeofday_to_night");
    ///<summary>Shed Camera Snapshot, AI &amp; Notification on Motion</summary>
    public AutomationEntity ShedCameraSnapshotAiNotificationOnMotion => new(_haContext, "automation.shed_camera_snapshot_ai_notification_on_motion");
    ///<summary>Shower timer finished</summary>
    public AutomationEntity ShowerTimerFinished => new(_haContext, "automation.shower_timer_finished");
    ///<summary>Shower timer start</summary>
    public AutomationEntity ShowerTimerStart => new(_haContext, "automation.shower_timer_start");
    ///<summary>Snug Desk Switch</summary>
    public AutomationEntity SnugDeskSwitch => new(_haContext, "automation.snug_desk_switch");
    ///<summary>Snug Lights Off Reset Mode</summary>
    public AutomationEntity SnugLightsOffResetMode => new(_haContext, "automation.snug_lights_off_reset_mode");
    ///<summary>Snug Scene Normal</summary>
    public AutomationEntity SnugSceneNormal => new(_haContext, "automation.snug_scene_normal");
    ///<summary>Snug Scene Watch Movie</summary>
    public AutomationEntity SnugSceneWatchMovie => new(_haContext, "automation.snug_scene_watch_movie");
    ///<summary>Snug Switch</summary>
    public AutomationEntity SnugSwitch => new(_haContext, "automation.snug_switch");
    ///<summary>Store Switch</summary>
    public AutomationEntity StoreSwitch => new(_haContext, "automation.store_switch");
    ///<summary>Studio Bedside Switch</summary>
    public AutomationEntity StudioBedsideSwitch => new(_haContext, "automation.studio_bedside_switch");
    ///<summary>Studio Switch</summary>
    public AutomationEntity StudioSwitch => new(_haContext, "automation.studio_switch");
    ///<summary>Sump Alarm Triggered</summary>
    public AutomationEntity SumpAlarmTriggered => new(_haContext, "automation.sump_alarm_triggered");
    ///<summary>Sunset TimeOfDay Evening</summary>
    public AutomationEntity SunsetTimeofdayEvening => new(_haContext, "automation.sunset_timeofday_evening");
    ///<summary>Toilet Switch</summary>
    public AutomationEntity Toilet => new(_haContext, "automation.toilet");
    ///<summary>Trigger alarm while armed away</summary>
    public AutomationEntity TriggerAlarmWhileArmedAway => new(_haContext, "automation.trigger_alarm_while_armed_away");
    ///<summary>Turn off bathroom fan</summary>
    public AutomationEntity TurnOffBathroomFan => new(_haContext, "automation.turn_off_bathroom_fan");
    ///<summary>Turn off extractor </summary>
    public AutomationEntity TurnOffExtractor => new(_haContext, "automation.turn_off_extractor");
    ///<summary>Turn on Bathroom Fan</summary>
    public AutomationEntity TurnOnBathroomFan => new(_haContext, "automation.turn_on_bathroom_fan");
    ///<summary>Turn On Ex Machina lights when alarm triggered</summary>
    public AutomationEntity TurnOnExMachinaLightsWhenAlarmTriggered => new(_haContext, "automation.turn_on_ex_machina_lights_when_alarm_triggered");
    ///<summary>Turn on extractor fan</summary>
    public AutomationEntity TurnOnExtractorFan => new(_haContext, "automation.turn_on_extractor_fan");
    ///<summary>Turn Off Porch Light at 11pm</summary>
    public AutomationEntity TurnPorchLightOfAt11pm => new(_haContext, "automation.turn_porch_light_of_at_11pm");
    ///<summary>Turn On Porch Light when Sun is set</summary>
    public AutomationEntity TurnPorchLightOnWhenSunIsSet => new(_haContext, "automation.turn_porch_light_on_when_sun_is_set");
    ///<summary>Turn the store light off</summary>
    public AutomationEntity TurnTheStoreLightOff => new(_haContext, "automation.turn_the_store_light_off");
    ///<summary>Utility Room Switch</summary>
    public AutomationEntity UtilityRoomSwitch => new(_haContext, "automation.utility_room_switch");
}

public partial class BinarySensorEntities
{
    private readonly IHaContext _haContext;
    public BinarySensorEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all binary_sensor entities currently registered (at runtime) in Home Assistant as BinarySensorEntity</summary>
    public IEnumerable<BinarySensorEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("binary_sensor.")).Select(e => new BinarySensorEntity(e));
    ///<summary>Drawing Room Switch</summary>
    public BinarySensorEntity _0x8c6fb9fffe454fdaUpdateAvailable => new(_haContext, "binary_sensor.0x8c6fb9fffe454fda_update_available");
    ///<summary>192.168.1.1 Library rescan</summary>
    public BinarySensorEntity _19216811LibraryRescan => new(_haContext, "binary_sensor.192_168_1_1_library_rescan");
    ///<summary>192.168.1.1 Needs restart</summary>
    public BinarySensorEntity _19216811NeedsRestart => new(_haContext, "binary_sensor.192_168_1_1_needs_restart");
    ///<summary>Andy In bed</summary>
    public BinarySensorEntity AndyInBed => new(_haContext, "binary_sensor.andy_in_bed");
    ///<summary>At Home</summary>
    public BinarySensorEntity AtHome => new(_haContext, "binary_sensor.at_home");
    ///<summary>Averge Bathroom Humidity</summary>
    public BinarySensorEntity AvergeBathroomHumidity => new(_haContext, "binary_sensor.averge_bathroom_humidity");
    ///<summary>Backdoor Light Input</summary>
    public BinarySensorEntity BackdoorLightInput => new(_haContext, "binary_sensor.backdoor_light_input");
    ///<summary>Backdoor Light Overheating</summary>
    public BinarySensorEntity BackdoorLightOverheating => new(_haContext, "binary_sensor.backdoor_light_overheating");
    ///<summary>Backdoor Light Overpowering</summary>
    public BinarySensorEntity BackdoorLightOverpowering => new(_haContext, "binary_sensor.backdoor_light_overpowering");
    ///<summary>Backdoor Light Overvoltage</summary>
    public BinarySensorEntity BackdoorLightOvervoltage => new(_haContext, "binary_sensor.backdoor_light_overvoltage");
    ///<summary>Backups Stale</summary>
    public BinarySensorEntity BackupsStale => new(_haContext, "binary_sensor.backups_stale");
    ///<summary>Basement Hall Camera Detections: motion</summary>
    public BinarySensorEntity BasementHallCameraDetectionsMotion => new(_haContext, "binary_sensor.basement_hall_camera_detections_motion");
    ///<summary>Basement Hall Camera HDR mode</summary>
    public BinarySensorEntity BasementHallCameraHdrMode => new(_haContext, "binary_sensor.basement_hall_camera_hdr_mode");
    ///<summary>Basement Hall Camera Is dark</summary>
    public BinarySensorEntity BasementHallCameraIsDark => new(_haContext, "binary_sensor.basement_hall_camera_is_dark");
    ///<summary>Basement Hall Camera Motion</summary>
    public BinarySensorEntity BasementHallCameraMotion => new(_haContext, "binary_sensor.basement_hall_camera_motion");
    ///<summary>Basement Hall Camera Overlay: show bitrate</summary>
    public BinarySensorEntity BasementHallCameraOverlayShowBitrate => new(_haContext, "binary_sensor.basement_hall_camera_overlay_show_bitrate");
    ///<summary>Basement Hall Camera Overlay: show date</summary>
    public BinarySensorEntity BasementHallCameraOverlayShowDate => new(_haContext, "binary_sensor.basement_hall_camera_overlay_show_date");
    ///<summary>Basement Hall Camera Overlay: show logo</summary>
    public BinarySensorEntity BasementHallCameraOverlayShowLogo => new(_haContext, "binary_sensor.basement_hall_camera_overlay_show_logo");
    ///<summary>Basement Hall Camera Overlay: show name</summary>
    public BinarySensorEntity BasementHallCameraOverlayShowName => new(_haContext, "binary_sensor.basement_hall_camera_overlay_show_name");
    ///<summary>Basement Hall Camera Status light on</summary>
    public BinarySensorEntity BasementHallCameraStatusLightOn => new(_haContext, "binary_sensor.basement_hall_camera_status_light_on");
    ///<summary>Basement Hall Light overcurrent</summary>
    public BinarySensorEntity BasementHallLightOvercurrent => new(_haContext, "binary_sensor.basement_hall_light_overcurrent");
    ///<summary>Basement Hall Light overheating</summary>
    public BinarySensorEntity BasementHallLightOverheating => new(_haContext, "binary_sensor.basement_hall_light_overheating");
    ///<summary>Basement Hall Light overpowering</summary>
    public BinarySensorEntity BasementHallLightOverpowering => new(_haContext, "binary_sensor.basement_hall_light_overpowering");
    ///<summary>Basement Hall Light overvoltage</summary>
    public BinarySensorEntity BasementHallLightOvervoltage => new(_haContext, "binary_sensor.basement_hall_light_overvoltage");
    ///<summary>Basement Hall Light Switch</summary>
    public BinarySensorEntity BasementHallLightSwitch => new(_haContext, "binary_sensor.basement_hall_light_switch");
    ///<summary>Shelly Basement Hall Lights cloud</summary>
    public BinarySensorEntity BasementHallLightsCloud => new(_haContext, "binary_sensor.basement_hall_lights_cloud");
    ///<summary>Basment Hall Motion</summary>
    public BinarySensorEntity BasementHallMotion => new(_haContext, "binary_sensor.basement_hall_motion");
    ///<summary>Basement Hall Motion Sensors</summary>
    public BinarySensorEntity BasementHallMotionSensors => new(_haContext, "binary_sensor.basement_hall_motion_sensors");
    ///<summary>shellypro4pm-34987a68fc0c cloud</summary>
    public BinarySensorEntity BasementLights1Cloud => new(_haContext, "binary_sensor.basement_lights_1_cloud");
    ///<summary>shellypro4pm-34987a68fc0c restart required</summary>
    public BinarySensorEntity BasementLights1RestartRequired => new(_haContext, "binary_sensor.basement_lights_1_restart_required");
    ///<summary>Toilet Light overheating</summary>
    public BinarySensorEntity BasementLights1Switch0Overheating => new(_haContext, "binary_sensor.basement_lights_1_switch_0_overheating");
    ///<summary>Toilet Light overpowering</summary>
    public BinarySensorEntity BasementLights1Switch0Overpowering => new(_haContext, "binary_sensor.basement_lights_1_switch_0_overpowering");
    ///<summary>Toilet Light overvoltage</summary>
    public BinarySensorEntity BasementLights1Switch0Overvoltage => new(_haContext, "binary_sensor.basement_lights_1_switch_0_overvoltage");
    ///<summary>Basement Lights 1 switch_1 overheating</summary>
    public BinarySensorEntity BasementLights1Switch1Overheating => new(_haContext, "binary_sensor.basement_lights_1_switch_1_overheating");
    ///<summary>Basement Lights 1 switch_1 overpowering</summary>
    public BinarySensorEntity BasementLights1Switch1Overpowering => new(_haContext, "binary_sensor.basement_lights_1_switch_1_overpowering");
    ///<summary>Basement Lights 1 switch_1 overvoltage</summary>
    public BinarySensorEntity BasementLights1Switch1Overvoltage => new(_haContext, "binary_sensor.basement_lights_1_switch_1_overvoltage");
    ///<summary>Utility Room Light overheating</summary>
    public BinarySensorEntity BasementLights1Switch2Overheating => new(_haContext, "binary_sensor.basement_lights_1_switch_2_overheating");
    ///<summary>Utility Room Light overpowering</summary>
    public BinarySensorEntity BasementLights1Switch2Overpowering => new(_haContext, "binary_sensor.basement_lights_1_switch_2_overpowering");
    ///<summary>Utility Room Light overvoltage</summary>
    public BinarySensorEntity BasementLights1Switch2Overvoltage => new(_haContext, "binary_sensor.basement_lights_1_switch_2_overvoltage");
    ///<summary>Store Light overheating</summary>
    public BinarySensorEntity BasementLights1Switch3Overheating => new(_haContext, "binary_sensor.basement_lights_1_switch_3_overheating");
    ///<summary>Store Light overpowering</summary>
    public BinarySensorEntity BasementLights1Switch3Overpowering => new(_haContext, "binary_sensor.basement_lights_1_switch_3_overpowering");
    ///<summary>Store Light overvoltage</summary>
    public BinarySensorEntity BasementLights1Switch3Overvoltage => new(_haContext, "binary_sensor.basement_lights_1_switch_3_overvoltage");
    ///<summary>shellypro4pm-34987a68e72c cloud</summary>
    public BinarySensorEntity BasementLights2Cloud => new(_haContext, "binary_sensor.basement_lights_2_cloud");
    ///<summary>shellypro4pm-34987a68e72c restart required</summary>
    public BinarySensorEntity BasementLights2RestartRequired => new(_haContext, "binary_sensor.basement_lights_2_restart_required");
    ///<summary>BL2 Unused 3 overheating</summary>
    public BinarySensorEntity BasementLights2Switch0Overheating => new(_haContext, "binary_sensor.basement_lights_2_switch_0_overheating");
    ///<summary>BL2 Unused 3 overpowering</summary>
    public BinarySensorEntity BasementLights2Switch0Overpowering => new(_haContext, "binary_sensor.basement_lights_2_switch_0_overpowering");
    ///<summary>BL2 Unused 3 overvoltage</summary>
    public BinarySensorEntity BasementLights2Switch0Overvoltage => new(_haContext, "binary_sensor.basement_lights_2_switch_0_overvoltage");
    ///<summary>BL2 Unused 4 overheating</summary>
    public BinarySensorEntity BasementLights2Switch1Overheating => new(_haContext, "binary_sensor.basement_lights_2_switch_1_overheating");
    ///<summary>BL2 Unused 4 overpowering</summary>
    public BinarySensorEntity BasementLights2Switch1Overpowering => new(_haContext, "binary_sensor.basement_lights_2_switch_1_overpowering");
    ///<summary>BL2 Unused 4 overvoltage</summary>
    public BinarySensorEntity BasementLights2Switch1Overvoltage => new(_haContext, "binary_sensor.basement_lights_2_switch_1_overvoltage");
    ///<summary>Dining Room Light overheating</summary>
    public BinarySensorEntity BasementLights2Switch2Overheating => new(_haContext, "binary_sensor.basement_lights_2_switch_2_overheating");
    ///<summary>Dining Room Light overpowering</summary>
    public BinarySensorEntity BasementLights2Switch2Overpowering => new(_haContext, "binary_sensor.basement_lights_2_switch_2_overpowering");
    ///<summary>Dining Room Light overvoltage</summary>
    public BinarySensorEntity BasementLights2Switch2Overvoltage => new(_haContext, "binary_sensor.basement_lights_2_switch_2_overvoltage");
    ///<summary>Snug Light overheating</summary>
    public BinarySensorEntity BasementLights2Switch3Overheating => new(_haContext, "binary_sensor.basement_lights_2_switch_3_overheating");
    ///<summary>Snug Light overpowering</summary>
    public BinarySensorEntity BasementLights2Switch3Overpowering => new(_haContext, "binary_sensor.basement_lights_2_switch_3_overpowering");
    ///<summary>Snug Light overvoltage</summary>
    public BinarySensorEntity BasementLights2Switch3Overvoltage => new(_haContext, "binary_sensor.basement_lights_2_switch_3_overvoltage");
    ///<summary>Basement Stairs Motion</summary>
    public BinarySensorEntity BasementStairsMotion => new(_haContext, "binary_sensor.basement_stairs_motion");
    ///<summary>Basement Stairs Motion Battery</summary>
    public BinarySensorEntity BasementStairsMotionBatteryLow => new(_haContext, "binary_sensor.basement_stairs_motion_battery_low");
    ///<summary>Basement Stairs Motion Konnected</summary>
    public BinarySensorEntity BasementStairsMotionKonnected => new(_haContext, "binary_sensor.basement_stairs_motion_konnected");
    ///<summary>Bathroom Door</summary>
    public BinarySensorEntity BathroomDoor => new(_haContext, "binary_sensor.bathroom_door");
    ///<summary>Bathroom Door Battery</summary>
    public BinarySensorEntity BathroomDoorBatteryLow => new(_haContext, "binary_sensor.bathroom_door_battery_low");
    ///<summary>Bathroom Fan overcurrent</summary>
    public BinarySensorEntity BathroomFanOvercurrent => new(_haContext, "binary_sensor.bathroom_fan_overcurrent");
    ///<summary>Bathroom Fan overheating</summary>
    public BinarySensorEntity BathroomFanOverheating => new(_haContext, "binary_sensor.bathroom_fan_overheating");
    ///<summary>Bathroom Fan overpowering</summary>
    public BinarySensorEntity BathroomFanOverpowering => new(_haContext, "binary_sensor.bathroom_fan_overpowering");
    ///<summary>Bathroom Fan overvoltage</summary>
    public BinarySensorEntity BathroomFanOvervoltage => new(_haContext, "binary_sensor.bathroom_fan_overvoltage");
    ///<summary>Bathroom Light overcurrent</summary>
    public BinarySensorEntity BathroomLightOvercurrent => new(_haContext, "binary_sensor.bathroom_light_overcurrent");
    ///<summary>Bathroom Light overheating</summary>
    public BinarySensorEntity BathroomLightOverheating => new(_haContext, "binary_sensor.bathroom_light_overheating");
    ///<summary>Bathroom Light overpowering</summary>
    public BinarySensorEntity BathroomLightOverpowering => new(_haContext, "binary_sensor.bathroom_light_overpowering");
    ///<summary>Bathroom Light overvoltage</summary>
    public BinarySensorEntity BathroomLightOvervoltage => new(_haContext, "binary_sensor.bathroom_light_overvoltage");
    ///<summary>Bathroom Motion</summary>
    public BinarySensorEntity BathroomMotion => new(_haContext, "binary_sensor.bathroom_motion");
    ///<summary>Bed Socket overcurrent</summary>
    public BinarySensorEntity BedSocketOvercurrent => new(_haContext, "binary_sensor.bed_socket_overcurrent");
    ///<summary>Bed Socket overheating</summary>
    public BinarySensorEntity BedSocketOverheating => new(_haContext, "binary_sensor.bed_socket_overheating");
    ///<summary>Bed Socket overpowering</summary>
    public BinarySensorEntity BedSocketOverpowering => new(_haContext, "binary_sensor.bed_socket_overpowering");
    ///<summary>Bed Socket overvoltage</summary>
    public BinarySensorEntity BedSocketOvervoltage => new(_haContext, "binary_sensor.bed_socket_overvoltage");
    ///<summary>Bedroom Light overcurrent</summary>
    public BinarySensorEntity BedroomLightOvercurrent => new(_haContext, "binary_sensor.bedroom_light_overcurrent");
    ///<summary>Bedroom Light overheating</summary>
    public BinarySensorEntity BedroomLightOverheating => new(_haContext, "binary_sensor.bedroom_light_overheating");
    ///<summary>Bedroom Light overpowering</summary>
    public BinarySensorEntity BedroomLightOverpowering => new(_haContext, "binary_sensor.bedroom_light_overpowering");
    ///<summary>Bedroom Light overvoltage</summary>
    public BinarySensorEntity BedroomLightOvervoltage => new(_haContext, "binary_sensor.bedroom_light_overvoltage");
    ///<summary>Bedroom Motion</summary>
    public BinarySensorEntity BedroomMotion => new(_haContext, "binary_sensor.bedroom_motion");
    ///<summary>BL2 Unused 3 overcurrent</summary>
    public BinarySensorEntity Bl2Unused3Overcurrent => new(_haContext, "binary_sensor.bl2_unused_3_overcurrent");
    ///<summary>BL2 Unused 4 overcurrent</summary>
    public BinarySensorEntity Bl2Unused4Overcurrent => new(_haContext, "binary_sensor.bl2_unused_4_overcurrent");
    ///<summary>Brewery Light Input</summary>
    public BinarySensorEntity BreweryLightInput => new(_haContext, "binary_sensor.brewery_light_input");
    ///<summary>Brewery Light overcurrent</summary>
    public BinarySensorEntity BreweryLightOvercurrent => new(_haContext, "binary_sensor.brewery_light_overcurrent");
    ///<summary>Brewery Light overheating</summary>
    public BinarySensorEntity BreweryLightOverheating => new(_haContext, "binary_sensor.brewery_light_overheating");
    ///<summary>Brewery Light overpowering</summary>
    public BinarySensorEntity BreweryLightOverpowering => new(_haContext, "binary_sensor.brewery_light_overpowering");
    ///<summary>Brewery Light overvoltage</summary>
    public BinarySensorEntity BreweryLightOvervoltage => new(_haContext, "binary_sensor.brewery_light_overvoltage");
    ///<summary>Cellar Door</summary>
    public BinarySensorEntity CellarDoor => new(_haContext, "binary_sensor.cellar_door");
    ///<summary>Cellar Door Light Input</summary>
    public BinarySensorEntity CellarDoorLightInput => new(_haContext, "binary_sensor.cellar_door_light_input");
    ///<summary>Cellar Door Light Overheating</summary>
    public BinarySensorEntity CellarDoorLightOverheating => new(_haContext, "binary_sensor.cellar_door_light_overheating");
    ///<summary>Cellar Door Light Overpowering</summary>
    public BinarySensorEntity CellarDoorLightOverpowering => new(_haContext, "binary_sensor.cellar_door_light_overpowering");
    ///<summary>Cellar Door Light Overvoltage</summary>
    public BinarySensorEntity CellarDoorLightOvervoltage => new(_haContext, "binary_sensor.cellar_door_light_overvoltage");
    ///<summary>claire In bed</summary>
    public BinarySensorEntity ClaireInBed => new(_haContext, "binary_sensor.claire_in_bed");
    ///<summary>Claire’s iPhone Focus</summary>
    public BinarySensorEntity ClairesIphoneFocus => new(_haContext, "binary_sensor.claires_iphone_focus");
    ///<summary>Coffee Machine</summary>
    public BinarySensorEntity CoffeeMachineUpdateAvailable2 => new(_haContext, "binary_sensor.coffee_machine_update_available_2");
    ///<summary>Cold Frame Input</summary>
    public BinarySensorEntity ColdFrameInput => new(_haContext, "binary_sensor.cold_frame_input");
    ///<summary>Cold Frame overcurrent</summary>
    public BinarySensorEntity ColdFrameOvercurrent => new(_haContext, "binary_sensor.cold_frame_overcurrent");
    ///<summary>Cold Frame overheating</summary>
    public BinarySensorEntity ColdFrameOverheating => new(_haContext, "binary_sensor.cold_frame_overheating");
    ///<summary>Cold Frame overpowering</summary>
    public BinarySensorEntity ColdFrameOverpowering => new(_haContext, "binary_sensor.cold_frame_overpowering");
    ///<summary>Cold Frame overvoltage</summary>
    public BinarySensorEntity ColdFrameOvervoltage => new(_haContext, "binary_sensor.cold_frame_overvoltage");
    ///<summary>Decking Socket Input</summary>
    public BinarySensorEntity DeckingSocketInput => new(_haContext, "binary_sensor.decking_socket_input");
    ///<summary>Decking Socket overcurrent</summary>
    public BinarySensorEntity DeckingSocketOvercurrent => new(_haContext, "binary_sensor.decking_socket_overcurrent");
    ///<summary>Decking Socket overheating</summary>
    public BinarySensorEntity DeckingSocketOverheating => new(_haContext, "binary_sensor.decking_socket_overheating");
    ///<summary>Decking Socket overpowering</summary>
    public BinarySensorEntity DeckingSocketOverpowering => new(_haContext, "binary_sensor.decking_socket_overpowering");
    ///<summary>Decking Socket overvoltage</summary>
    public BinarySensorEntity DeckingSocketOvervoltage => new(_haContext, "binary_sensor.decking_socket_overvoltage");
    ///<summary>Decking Wall Light Input</summary>
    public BinarySensorEntity DeckingWallLightInput => new(_haContext, "binary_sensor.decking_wall_light_input");
    ///<summary>Decking Wall Light overcurrent</summary>
    public BinarySensorEntity DeckingWallLightOvercurrent => new(_haContext, "binary_sensor.decking_wall_light_overcurrent");
    ///<summary>Decking Wall Light overheating</summary>
    public BinarySensorEntity DeckingWallLightOverheating => new(_haContext, "binary_sensor.decking_wall_light_overheating");
    ///<summary>Decking Wall Light overpowering</summary>
    public BinarySensorEntity DeckingWallLightOverpowering => new(_haContext, "binary_sensor.decking_wall_light_overpowering");
    ///<summary>Decking Wall Light overvoltage</summary>
    public BinarySensorEntity DeckingWallLightOvervoltage => new(_haContext, "binary_sensor.decking_wall_light_overvoltage");
    ///<summary>Dining Room Light overcurrent</summary>
    public BinarySensorEntity DiningRoomLightOvercurrent => new(_haContext, "binary_sensor.dining_room_light_overcurrent");
    ///<summary>Dining Room Motion</summary>
    public BinarySensorEntity DiningRoomMotion => new(_haContext, "binary_sensor.dining_room_motion");
    ///<summary>Display Cabinet Light</summary>
    public BinarySensorEntity DisplayCabinetLightUpdateAvailable => new(_haContext, "binary_sensor.display_cabinet_light_update_available");
    ///<summary>Doorbell Doorbell Button</summary>
    public BinarySensorEntity DoorbellButton => new(_haContext, "binary_sensor.doorbell_button");
    ///<summary>Drawing Room Motion</summary>
    public BinarySensorEntity DrawingRoomMotion => new(_haContext, "binary_sensor.drawing_room_motion");
    ///<summary>Dressing Room Light overcurrent</summary>
    public BinarySensorEntity DressingRoomLightOvercurrent => new(_haContext, "binary_sensor.dressing_room_light_overcurrent");
    ///<summary>Dressing Room Light overheating</summary>
    public BinarySensorEntity DressingRoomLightOverheating => new(_haContext, "binary_sensor.dressing_room_light_overheating");
    ///<summary>Dressing Room Light overpowering</summary>
    public BinarySensorEntity DressingRoomLightOverpowering => new(_haContext, "binary_sensor.dressing_room_light_overpowering");
    ///<summary>Dressing Room Light overvoltage</summary>
    public BinarySensorEntity DressingRoomLightOvervoltage => new(_haContext, "binary_sensor.dressing_room_light_overvoltage");
    ///<summary>Dressing Room Motion</summary>
    public BinarySensorEntity DressingRoomMotion => new(_haContext, "binary_sensor.dressing_room_motion");
    ///<summary>Electric Cabinet Door Battery</summary>
    public BinarySensorEntity ElectricCabinetDoorBatteryLow => new(_haContext, "binary_sensor.electric_cabinet_door_battery_low");
    ///<summary>Electric Cabinet Door Door</summary>
    public BinarySensorEntity ElectricCabinetDoorContact => new(_haContext, "binary_sensor.electric_cabinet_door_contact");
    ///<summary>Electric Cabinet Light overcurrent</summary>
    public BinarySensorEntity ElectricCabinetLightOvercurrent => new(_haContext, "binary_sensor.electric_cabinet_light_overcurrent");
    ///<summary>Electric Cabinet Light overheating</summary>
    public BinarySensorEntity ElectricCabinetLightOverheating => new(_haContext, "binary_sensor.electric_cabinet_light_overheating");
    ///<summary>Electric Cabinet Light overpowering</summary>
    public BinarySensorEntity ElectricCabinetLightOverpowering => new(_haContext, "binary_sensor.electric_cabinet_light_overpowering");
    ///<summary>Electric Cabinet Light overvoltage</summary>
    public BinarySensorEntity ElectricCabinetLightOvervoltage => new(_haContext, "binary_sensor.electric_cabinet_light_overvoltage");
    ///<summary>Electric Cabinet Light Switch</summary>
    public BinarySensorEntity ElectricCabinetLightSwitch => new(_haContext, "binary_sensor.electric_cabinet_light_switch");
    ///<summary>ESPresense Bedroom ESPresense Bedroom</summary>
    public BinarySensorEntity EspresenseBedroom => new(_haContext, "binary_sensor.espresense_bedroom");
    ///<summary>ESPresense DrawingRoom ESPresense DrawingRoom</summary>
    public BinarySensorEntity EspresenseDrawingroom => new(_haContext, "binary_sensor.espresense_drawingroom");
    ///<summary>ESPresense Kitchen Connectivity</summary>
    public BinarySensorEntity EspresenseKitchen => new(_haContext, "binary_sensor.espresense_kitchen");
    ///<summary>ESPresense Lounge ESPresense Lounge</summary>
    public BinarySensorEntity EspresenseLounge => new(_haContext, "binary_sensor.espresense_lounge");
    ///<summary>ESPresense Snug ESPresense Snug</summary>
    public BinarySensorEntity EspresenseSnug => new(_haContext, "binary_sensor.espresense_snug");
    ///<summary>studio-bluetooth-proxy ESPresense Studio</summary>
    public BinarySensorEntity EspresenseStudio => new(_haContext, "binary_sensor.espresense_studio");
    ///<summary>Fence Lights Input</summary>
    public BinarySensorEntity FenceLightsInput => new(_haContext, "binary_sensor.fence_lights_input");
    ///<summary>Fence Lights overcurrent</summary>
    public BinarySensorEntity FenceLightsOvercurrent => new(_haContext, "binary_sensor.fence_lights_overcurrent");
    ///<summary>Fence Lights overheating</summary>
    public BinarySensorEntity FenceLightsOverheating => new(_haContext, "binary_sensor.fence_lights_overheating");
    ///<summary>Fence Lights overpowering</summary>
    public BinarySensorEntity FenceLightsOverpowering => new(_haContext, "binary_sensor.fence_lights_overpowering");
    ///<summary>Fence Lights overvoltage</summary>
    public BinarySensorEntity FenceLightsOvervoltage => new(_haContext, "binary_sensor.fence_lights_overvoltage");
    ///<summary>Front Door Battery</summary>
    public BinarySensorEntity FrontDoorBatteryLow => new(_haContext, "binary_sensor.front_door_battery_low");
    ///<summary>Front Door Door</summary>
    public BinarySensorEntity FrontDoorContact => new(_haContext, "binary_sensor.front_door_contact");
    ///<summary>Garden Sockets Input</summary>
    public BinarySensorEntity GardenSocketsInput => new(_haContext, "binary_sensor.garden_sockets_input");
    ///<summary>Garden Sockets overcurrent</summary>
    public BinarySensorEntity GardenSocketsOvercurrent => new(_haContext, "binary_sensor.garden_sockets_overcurrent");
    ///<summary>Garden Sockets overheating</summary>
    public BinarySensorEntity GardenSocketsOverheating => new(_haContext, "binary_sensor.garden_sockets_overheating");
    ///<summary>Garden Sockets overpowering</summary>
    public BinarySensorEntity GardenSocketsOverpowering => new(_haContext, "binary_sensor.garden_sockets_overpowering");
    ///<summary>Garden Sockets overvoltage</summary>
    public BinarySensorEntity GardenSocketsOvervoltage => new(_haContext, "binary_sensor.garden_sockets_overvoltage");
    ///<summary>Gate Socket Input</summary>
    public BinarySensorEntity GateSocketInput => new(_haContext, "binary_sensor.gate_socket_input");
    ///<summary>Gate Socket overcurrent</summary>
    public BinarySensorEntity GateSocketOvercurrent => new(_haContext, "binary_sensor.gate_socket_overcurrent");
    ///<summary>Gate Socket overheating</summary>
    public BinarySensorEntity GateSocketOverheating => new(_haContext, "binary_sensor.gate_socket_overheating");
    ///<summary>Gate Socket overpowering</summary>
    public BinarySensorEntity GateSocketOverpowering => new(_haContext, "binary_sensor.gate_socket_overpowering");
    ///<summary>Gate Socket overvoltage</summary>
    public BinarySensorEntity GateSocketOvervoltage => new(_haContext, "binary_sensor.gate_socket_overvoltage");
    ///<summary>Guest Room Bed Occupancy</summary>
    public BinarySensorEntity GuestRoomBedOccupancy => new(_haContext, "binary_sensor.guest_room_bed_occupancy");
    ///<summary>Guest Room Light overcurrent</summary>
    public BinarySensorEntity GuestRoomLightOvercurrent => new(_haContext, "binary_sensor.guest_room_light_overcurrent");
    ///<summary>Guest Room Light overheating</summary>
    public BinarySensorEntity GuestRoomLightOverheating => new(_haContext, "binary_sensor.guest_room_light_overheating");
    ///<summary>Guest Room Light overpowering</summary>
    public BinarySensorEntity GuestRoomLightOverpowering => new(_haContext, "binary_sensor.guest_room_light_overpowering");
    ///<summary>Guest Room Light overvoltage</summary>
    public BinarySensorEntity GuestRoomLightOvervoltage => new(_haContext, "binary_sensor.guest_room_light_overvoltage");
    ///<summary>Guest Room Motion</summary>
    public BinarySensorEntity GuestRoomMotion => new(_haContext, "binary_sensor.guest_room_motion");
    ///<summary>Guest Room Occupancy</summary>
    public BinarySensorEntity GuestRoomOccupancy => new(_haContext, "binary_sensor.guest_room_occupancy");
    ///<summary>Guest Room Remote</summary>
    public BinarySensorEntity GuestRoomRemoteUpdateAvailable => new(_haContext, "binary_sensor.guest_room_remote_update_available");
    ///<summary>Guest Sofa Occupancy</summary>
    public BinarySensorEntity GuestSofaOccupancy => new(_haContext, "binary_sensor.guest_sofa_occupancy");
    ///<summary>Hallway Camera Detections: motion</summary>
    public BinarySensorEntity HallwayCameraDetectionsMotion => new(_haContext, "binary_sensor.hallway_camera_detections_motion");
    ///<summary>Hallway Camera HDR mode</summary>
    public BinarySensorEntity HallwayCameraHdrMode => new(_haContext, "binary_sensor.hallway_camera_hdr_mode");
    ///<summary>Hallway Camera Is dark</summary>
    public BinarySensorEntity HallwayCameraIsDark => new(_haContext, "binary_sensor.hallway_camera_is_dark");
    ///<summary>Hallway Camera Motion</summary>
    public BinarySensorEntity HallwayCameraMotion => new(_haContext, "binary_sensor.hallway_camera_motion");
    ///<summary>Hallway Camera Overlay: show bitrate</summary>
    public BinarySensorEntity HallwayCameraOverlayShowBitrate => new(_haContext, "binary_sensor.hallway_camera_overlay_show_bitrate");
    ///<summary>Hallway Camera Overlay: show date</summary>
    public BinarySensorEntity HallwayCameraOverlayShowDate => new(_haContext, "binary_sensor.hallway_camera_overlay_show_date");
    ///<summary>Hallway Camera Overlay: show logo</summary>
    public BinarySensorEntity HallwayCameraOverlayShowLogo => new(_haContext, "binary_sensor.hallway_camera_overlay_show_logo");
    ///<summary>Hallway Camera Overlay: show name</summary>
    public BinarySensorEntity HallwayCameraOverlayShowName => new(_haContext, "binary_sensor.hallway_camera_overlay_show_name");
    ///<summary>Hallway Camera Status light on</summary>
    public BinarySensorEntity HallwayCameraStatusLightOn => new(_haContext, "binary_sensor.hallway_camera_status_light_on");
    ///<summary>Hallway Light cloud</summary>
    public BinarySensorEntity HallwayLightCloud => new(_haContext, "binary_sensor.hallway_light_cloud");
    ///<summary>Hallway Light overcurrent</summary>
    public BinarySensorEntity HallwayLightOvercurrent => new(_haContext, "binary_sensor.hallway_light_overcurrent");
    ///<summary>Hallway Light overheating</summary>
    public BinarySensorEntity HallwayLightOverheating => new(_haContext, "binary_sensor.hallway_light_overheating");
    ///<summary>Hallway Light overpowering</summary>
    public BinarySensorEntity HallwayLightOverpowering => new(_haContext, "binary_sensor.hallway_light_overpowering");
    ///<summary>Hallway Light overvoltage</summary>
    public BinarySensorEntity HallwayLightOvervoltage => new(_haContext, "binary_sensor.hallway_light_overvoltage");
    ///<summary>Hallway Light restart required</summary>
    public BinarySensorEntity HallwayLightRestartRequired => new(_haContext, "binary_sensor.hallway_light_restart_required");
    ///<summary>Hallway Switch input</summary>
    public BinarySensorEntity HallwaySwitchInput => new(_haContext, "binary_sensor.hallway_switch_input");
    ///<summary>Hallway Tablet Device admin</summary>
    public BinarySensorEntity HallwayTabletDeviceAdmin => new(_haContext, "binary_sensor.hallway_tablet_device_admin");
    ///<summary>Hallway Tablet Kiosk mode</summary>
    public BinarySensorEntity HallwayTabletKioskMode => new(_haContext, "binary_sensor.hallway_tablet_kiosk_mode");
    ///<summary>Hallway Tablet Plugged in</summary>
    public BinarySensorEntity HallwayTabletPluggedIn => new(_haContext, "binary_sensor.hallway_tablet_plugged_in");
    ///<summary>Hifi Socket overcurrent</summary>
    public BinarySensorEntity HifiSocketOvercurrent => new(_haContext, "binary_sensor.hifi_socket_overcurrent");
    ///<summary>Hifi Socket overheating</summary>
    public BinarySensorEntity HifiSocketOverheating => new(_haContext, "binary_sensor.hifi_socket_overheating");
    ///<summary>Hifi Socket overpowering</summary>
    public BinarySensorEntity HifiSocketOverpowering => new(_haContext, "binary_sensor.hifi_socket_overpowering");
    ///<summary>Hifi Socket overvoltage</summary>
    public BinarySensorEntity HifiSocketOvervoltage => new(_haContext, "binary_sensor.hifi_socket_overvoltage");
    ///<summary>homeassistant</summary>
    public BinarySensorEntity Homeassistant => new(_haContext, "binary_sensor.homeassistant");
    ///<summary>In Bed</summary>
    public BinarySensorEntity InBed => new(_haContext, "binary_sensor.in_bed");
    ///<summary>IsSunSet</summary>
    public BinarySensorEntity Issunset => new(_haContext, "binary_sensor.issunset");
    ///<summary>Kitchen Air Quality</summary>
    public BinarySensorEntity KitchenAirQualityUpdateAvailable => new(_haContext, "binary_sensor.kitchen_air_quality_update_available");
    ///<summary>Kitchen Camera Animal detected</summary>
    public BinarySensorEntity KitchenCameraAnimalDetected => new(_haContext, "binary_sensor.kitchen_camera_animal_detected");
    ///<summary>Kitchen Camera Audio object detected</summary>
    public BinarySensorEntity KitchenCameraAudioObjectDetected => new(_haContext, "binary_sensor.kitchen_camera_audio_object_detected");
    ///<summary>Kitchen Camera Baby cry detected</summary>
    public BinarySensorEntity KitchenCameraBabyCryDetected => new(_haContext, "binary_sensor.kitchen_camera_baby_cry_detected");
    ///<summary>Kitchen Camera CO alarm detected</summary>
    public BinarySensorEntity KitchenCameraCoAlarmDetected => new(_haContext, "binary_sensor.kitchen_camera_co_alarm_detected");
    ///<summary>Kitchen Camera Detections: animal</summary>
    public BinarySensorEntity KitchenCameraDetectionsAnimal => new(_haContext, "binary_sensor.kitchen_camera_detections_animal");
    ///<summary>Kitchen Camera Detections: baby cry</summary>
    public BinarySensorEntity KitchenCameraDetectionsBabyCry => new(_haContext, "binary_sensor.kitchen_camera_detections_baby_cry");
    ///<summary>Kitchen Camera Detections: CO</summary>
    public BinarySensorEntity KitchenCameraDetectionsCo => new(_haContext, "binary_sensor.kitchen_camera_detections_co");
    ///<summary>Kitchen Camera Detections: motion</summary>
    public BinarySensorEntity KitchenCameraDetectionsMotion => new(_haContext, "binary_sensor.kitchen_camera_detections_motion");
    ///<summary>Kitchen Camera Detections: person</summary>
    public BinarySensorEntity KitchenCameraDetectionsPerson => new(_haContext, "binary_sensor.kitchen_camera_detections_person");
    ///<summary>Kitchen Camera Detections: smoke</summary>
    public BinarySensorEntity KitchenCameraDetectionsSmoke => new(_haContext, "binary_sensor.kitchen_camera_detections_smoke");
    ///<summary>Kitchen Camera Detections: vehicle</summary>
    public BinarySensorEntity KitchenCameraDetectionsVehicle => new(_haContext, "binary_sensor.kitchen_camera_detections_vehicle");
    ///<summary>Kitchen Camera HDR mode</summary>
    public BinarySensorEntity KitchenCameraHdrMode => new(_haContext, "binary_sensor.kitchen_camera_hdr_mode");
    ///<summary>Kitchen Camera Is dark</summary>
    public BinarySensorEntity KitchenCameraIsDark => new(_haContext, "binary_sensor.kitchen_camera_is_dark");
    ///<summary>Kitchen Camera Motion</summary>
    public BinarySensorEntity KitchenCameraMotion => new(_haContext, "binary_sensor.kitchen_camera_motion");
    ///<summary>Kitchen Camera Object detected</summary>
    public BinarySensorEntity KitchenCameraObjectDetected => new(_haContext, "binary_sensor.kitchen_camera_object_detected");
    ///<summary>Kitchen Camera Overlay: show bitrate</summary>
    public BinarySensorEntity KitchenCameraOverlayShowBitrate => new(_haContext, "binary_sensor.kitchen_camera_overlay_show_bitrate");
    ///<summary>Kitchen Camera Overlay: show date</summary>
    public BinarySensorEntity KitchenCameraOverlayShowDate => new(_haContext, "binary_sensor.kitchen_camera_overlay_show_date");
    ///<summary>Kitchen Camera Overlay: show logo</summary>
    public BinarySensorEntity KitchenCameraOverlayShowLogo => new(_haContext, "binary_sensor.kitchen_camera_overlay_show_logo");
    ///<summary>Kitchen Camera Overlay: show name</summary>
    public BinarySensorEntity KitchenCameraOverlayShowName => new(_haContext, "binary_sensor.kitchen_camera_overlay_show_name");
    ///<summary>Kitchen Camera Person detected</summary>
    public BinarySensorEntity KitchenCameraPersonDetected => new(_haContext, "binary_sensor.kitchen_camera_person_detected");
    ///<summary>Kitchen Camera Smoke alarm detected</summary>
    public BinarySensorEntity KitchenCameraSmokeAlarmDetected => new(_haContext, "binary_sensor.kitchen_camera_smoke_alarm_detected");
    ///<summary>Kitchen Camera Status light on</summary>
    public BinarySensorEntity KitchenCameraStatusLightOn => new(_haContext, "binary_sensor.kitchen_camera_status_light_on");
    ///<summary>Kitchen Camera System sounds</summary>
    public BinarySensorEntity KitchenCameraSystemSounds => new(_haContext, "binary_sensor.kitchen_camera_system_sounds");
    ///<summary>Kitchen Motion</summary>
    public BinarySensorEntity KitchenMotion => new(_haContext, "binary_sensor.kitchen_motion");
    ///<summary>Kitchen Motion Sensors</summary>
    public BinarySensorEntity KitchenMotionSensors => new(_haContext, "binary_sensor.kitchen_motion_sensors");
    ///<summary>Upstairs Spare Light overheating</summary>
    public BinarySensorEntity LandingLightOverheating => new(_haContext, "binary_sensor.landing_light_overheating");
    ///<summary>Upstairs Spare Light overpowering</summary>
    public BinarySensorEntity LandingLightOverpowering => new(_haContext, "binary_sensor.landing_light_overpowering");
    ///<summary>Upstairs Spare Light overvoltage</summary>
    public BinarySensorEntity LandingLightOvervoltage => new(_haContext, "binary_sensor.landing_light_overvoltage");
    ///<summary>Landing Light Switch input</summary>
    public BinarySensorEntity LandingLightSwitchInput => new(_haContext, "binary_sensor.landing_light_switch_input");
    ///<summary>Landing Motion</summary>
    public BinarySensorEntity LandingMotion => new(_haContext, "binary_sensor.landing_motion");
    ///<summary>Loft Hatch battery low</summary>
    public BinarySensorEntity LoftHatchBatteryLow => new(_haContext, "binary_sensor.loft_hatch_battery_low");
    ///<summary>Loft Hatch contact</summary>
    public BinarySensorEntity LoftHatchContact => new(_haContext, "binary_sensor.loft_hatch_contact");
    ///<summary>Lounge Motion</summary>
    public BinarySensorEntity LoungeMotion => new(_haContext, "binary_sensor.lounge_motion");
    ///<summary>Lounge Occupancy</summary>
    public BinarySensorEntity LoungeOccupancy => new(_haContext, "binary_sensor.lounge_occupancy");
    ///<summary>Main Sofa Occupancy</summary>
    public BinarySensorEntity MainSofaOccupancy => new(_haContext, "binary_sensor.main_sofa_occupancy");
    ///<summary>Mirror Light overcurrent</summary>
    public BinarySensorEntity MirrorLightOvercurrent => new(_haContext, "binary_sensor.mirror_light_overcurrent");
    ///<summary>Mirror Light overheating</summary>
    public BinarySensorEntity MirrorLightOverheating => new(_haContext, "binary_sensor.mirror_light_overheating");
    ///<summary>Mirror Light overpowering</summary>
    public BinarySensorEntity MirrorLightOverpowering => new(_haContext, "binary_sensor.mirror_light_overpowering");
    ///<summary>Mirror Light overvoltage</summary>
    public BinarySensorEntity MirrorLightOvervoltage => new(_haContext, "binary_sensor.mirror_light_overvoltage");
    ///<summary>Mixing Desk overcurrent</summary>
    public BinarySensorEntity MixingDeskOvercurrent => new(_haContext, "binary_sensor.mixing_desk_overcurrent");
    ///<summary>Mixing Desk overheating</summary>
    public BinarySensorEntity MixingDeskOverheating => new(_haContext, "binary_sensor.mixing_desk_overheating");
    ///<summary>Mixing Desk overpowering</summary>
    public BinarySensorEntity MixingDeskOverpowering => new(_haContext, "binary_sensor.mixing_desk_overpowering");
    ///<summary>Mixing Desk overvoltage</summary>
    public BinarySensorEntity MixingDeskOvervoltage => new(_haContext, "binary_sensor.mixing_desk_overvoltage");
    ///<summary>nspanel Left Button</summary>
    public BinarySensorEntity NspanelLeftButton => new(_haContext, "binary_sensor.nspanel_left_button");
    ///<summary>nspanel Right Button</summary>
    public BinarySensorEntity NspanelRightButton => new(_haContext, "binary_sensor.nspanel_right_button");
    ///<summary>Octoplus Saving Session (A-0A727F9B)</summary>
    public BinarySensorEntity OctopusEnergyA0a727f9bOctoplusSavingSessions => new(_haContext, "binary_sensor.octopus_energy_a_0a727f9b_octoplus_saving_sessions");
    ///<summary>Off Peak Electricity (22J0181544/1610019557951)</summary>
    public BinarySensorEntity OctopusEnergyElectricity22j01815441610019557951OffPeak => new(_haContext, "binary_sensor.octopus_energy_electricity_22j0181544_1610019557951_off_peak");
    ///<summary>Octopus Energy Saving Session</summary>
    public BinarySensorEntity OctopusEnergySavingSessions => new(_haContext, "binary_sensor.octopus_energy_saving_sessions");
    ///<summary>Outside Lights Cloud</summary>
    public BinarySensorEntity OutsideLightsCloud => new(_haContext, "binary_sensor.outside_lights_cloud");
    ///<summary>Outside Lights Restart Required</summary>
    public BinarySensorEntity OutsideLightsRestartRequired => new(_haContext, "binary_sensor.outside_lights_restart_required");
    ///<summary>Patio Camera Animal detected</summary>
    public BinarySensorEntity PatioCameraAnimalDetected => new(_haContext, "binary_sensor.patio_camera_animal_detected");
    ///<summary>Patio Camera Audio object detected</summary>
    public BinarySensorEntity PatioCameraAudioObjectDetected => new(_haContext, "binary_sensor.patio_camera_audio_object_detected");
    ///<summary>Patio Camera Baby cry detected</summary>
    public BinarySensorEntity PatioCameraBabyCryDetected => new(_haContext, "binary_sensor.patio_camera_baby_cry_detected");
    ///<summary>Patio Camera CO alarm detected</summary>
    public BinarySensorEntity PatioCameraCoAlarmDetected => new(_haContext, "binary_sensor.patio_camera_co_alarm_detected");
    ///<summary>Patio Camera Detections: animal</summary>
    public BinarySensorEntity PatioCameraDetectionsAnimal => new(_haContext, "binary_sensor.patio_camera_detections_animal");
    ///<summary>Patio Camera Detections: baby cry</summary>
    public BinarySensorEntity PatioCameraDetectionsBabyCry => new(_haContext, "binary_sensor.patio_camera_detections_baby_cry");
    ///<summary>Patio Camera Detections: CO</summary>
    public BinarySensorEntity PatioCameraDetectionsCo => new(_haContext, "binary_sensor.patio_camera_detections_co");
    ///<summary>Patio Camera Detections: motion</summary>
    public BinarySensorEntity PatioCameraDetectionsMotion => new(_haContext, "binary_sensor.patio_camera_detections_motion");
    ///<summary>Patio Camera Detections: person</summary>
    public BinarySensorEntity PatioCameraDetectionsPerson => new(_haContext, "binary_sensor.patio_camera_detections_person");
    ///<summary>Patio Camera Detections: smoke</summary>
    public BinarySensorEntity PatioCameraDetectionsSmoke => new(_haContext, "binary_sensor.patio_camera_detections_smoke");
    ///<summary>Patio Camera Detections: vehicle</summary>
    public BinarySensorEntity PatioCameraDetectionsVehicle => new(_haContext, "binary_sensor.patio_camera_detections_vehicle");
    ///<summary>Patio Camera High FPS</summary>
    public BinarySensorEntity PatioCameraHighFps => new(_haContext, "binary_sensor.patio_camera_high_fps");
    ///<summary>Patio Camera Is dark</summary>
    public BinarySensorEntity PatioCameraIsDark => new(_haContext, "binary_sensor.patio_camera_is_dark");
    ///<summary>Patio Camera Motion</summary>
    public BinarySensorEntity PatioCameraMotion => new(_haContext, "binary_sensor.patio_camera_motion");
    ///<summary>Patio Camera Object detected</summary>
    public BinarySensorEntity PatioCameraObjectDetected => new(_haContext, "binary_sensor.patio_camera_object_detected");
    ///<summary>Patio Camera Overlay: show bitrate</summary>
    public BinarySensorEntity PatioCameraOverlayShowBitrate => new(_haContext, "binary_sensor.patio_camera_overlay_show_bitrate");
    ///<summary>Patio Camera Overlay: show date</summary>
    public BinarySensorEntity PatioCameraOverlayShowDate => new(_haContext, "binary_sensor.patio_camera_overlay_show_date");
    ///<summary>Patio Camera Overlay: show logo</summary>
    public BinarySensorEntity PatioCameraOverlayShowLogo => new(_haContext, "binary_sensor.patio_camera_overlay_show_logo");
    ///<summary>Patio Camera Overlay: show name</summary>
    public BinarySensorEntity PatioCameraOverlayShowName => new(_haContext, "binary_sensor.patio_camera_overlay_show_name");
    ///<summary>Patio Camera Person detected</summary>
    public BinarySensorEntity PatioCameraPersonDetected => new(_haContext, "binary_sensor.patio_camera_person_detected");
    ///<summary>Patio Camera Smoke alarm detected</summary>
    public BinarySensorEntity PatioCameraSmokeAlarmDetected => new(_haContext, "binary_sensor.patio_camera_smoke_alarm_detected");
    ///<summary>Patio Camera Vehicle detected</summary>
    public BinarySensorEntity PatioCameraVehicleDetected => new(_haContext, "binary_sensor.patio_camera_vehicle_detected");
    ///<summary>Patio Door</summary>
    public BinarySensorEntity PatioDoor => new(_haContext, "binary_sensor.patio_door");
    ///<summary>Patio Light Input</summary>
    public BinarySensorEntity PatioLightInput => new(_haContext, "binary_sensor.patio_light_input");
    ///<summary>Patio Light Overheating</summary>
    public BinarySensorEntity PatioLightOverheating => new(_haContext, "binary_sensor.patio_light_overheating");
    ///<summary>Patio Light Overpowering</summary>
    public BinarySensorEntity PatioLightOverpowering => new(_haContext, "binary_sensor.patio_light_overpowering");
    ///<summary>Patio Light Overvoltage</summary>
    public BinarySensorEntity PatioLightOvervoltage => new(_haContext, "binary_sensor.patio_light_overvoltage");
    ///<summary>Pixel 6 App inactive</summary>
    public BinarySensorEntity Pixel6AppInactive2 => new(_haContext, "binary_sensor.pixel_6_app_inactive_2");
    ///<summary>Pixel 6 Bluetooth state</summary>
    public BinarySensorEntity Pixel6BluetoothState2 => new(_haContext, "binary_sensor.pixel_6_bluetooth_state_2");
    ///<summary>Pixel 6 Device locked</summary>
    public BinarySensorEntity Pixel6DeviceLocked2 => new(_haContext, "binary_sensor.pixel_6_device_locked_2");
    ///<summary>Pixel 6 Device secure</summary>
    public BinarySensorEntity Pixel6DeviceSecure2 => new(_haContext, "binary_sensor.pixel_6_device_secure_2");
    ///<summary>Pixel 6 Doze mode</summary>
    public BinarySensorEntity Pixel6DozeMode2 => new(_haContext, "binary_sensor.pixel_6_doze_mode_2");
    ///<summary>Pixel 6 Headphones</summary>
    public BinarySensorEntity Pixel6Headphones2 => new(_haContext, "binary_sensor.pixel_6_headphones_2");
    ///<summary>Pixel 6 High accuracy mode</summary>
    public BinarySensorEntity Pixel6HighAccuracyMode2 => new(_haContext, "binary_sensor.pixel_6_high_accuracy_mode_2");
    ///<summary>Pixel 6 Hotspot state</summary>
    public BinarySensorEntity Pixel6HotspotState2 => new(_haContext, "binary_sensor.pixel_6_hotspot_state_2");
    ///<summary>Pixel 6 Interactive</summary>
    public BinarySensorEntity Pixel6Interactive2 => new(_haContext, "binary_sensor.pixel_6_interactive_2");
    ///<summary>Pixel 6 Is charging</summary>
    public BinarySensorEntity Pixel6IsCharging2 => new(_haContext, "binary_sensor.pixel_6_is_charging_2");
    ///<summary>Pixel 6 Keyguard locked</summary>
    public BinarySensorEntity Pixel6KeyguardLocked2 => new(_haContext, "binary_sensor.pixel_6_keyguard_locked_2");
    ///<summary>Pixel 6 Keyguard secure</summary>
    public BinarySensorEntity Pixel6KeyguardSecure2 => new(_haContext, "binary_sensor.pixel_6_keyguard_secure_2");
    ///<summary>Pixel 6 Mic muted</summary>
    public BinarySensorEntity Pixel6MicMuted2 => new(_haContext, "binary_sensor.pixel_6_mic_muted_2");
    ///<summary>Pixel 6 Mobile data</summary>
    public BinarySensorEntity Pixel6MobileData2 => new(_haContext, "binary_sensor.pixel_6_mobile_data_2");
    ///<summary>Pixel 6 Music active</summary>
    public BinarySensorEntity Pixel6MusicActive2 => new(_haContext, "binary_sensor.pixel_6_music_active_2");
    ///<summary>Pixel 6 NFC state</summary>
    public BinarySensorEntity Pixel6NfcState2 => new(_haContext, "binary_sensor.pixel_6_nfc_state_2");
    ///<summary>Pixel 6 Power save</summary>
    public BinarySensorEntity Pixel6PowerSave2 => new(_haContext, "binary_sensor.pixel_6_power_save_2");
    ///<summary>Pixel 6 Speakerphone</summary>
    public BinarySensorEntity Pixel6Speakerphone2 => new(_haContext, "binary_sensor.pixel_6_speakerphone_2");
    ///<summary>Pixel 6 WiFi state</summary>
    public BinarySensorEntity Pixel6WifiState2 => new(_haContext, "binary_sensor.pixel_6_wifi_state_2");
    ///<summary>Pixel Watch Doze mode</summary>
    public BinarySensorEntity PixelWatchDozeMode => new(_haContext, "binary_sensor.pixel_watch_doze_mode");
    ///<summary>Pixel Watch Headphones</summary>
    public BinarySensorEntity PixelWatchHeadphones => new(_haContext, "binary_sensor.pixel_watch_headphones");
    ///<summary>Pixel Watch Interactive</summary>
    public BinarySensorEntity PixelWatchInteractive => new(_haContext, "binary_sensor.pixel_watch_interactive");
    ///<summary>Pixel Watch Is charging</summary>
    public BinarySensorEntity PixelWatchIsCharging => new(_haContext, "binary_sensor.pixel_watch_is_charging");
    ///<summary>Pixel Watch Mic muted</summary>
    public BinarySensorEntity PixelWatchMicMuted => new(_haContext, "binary_sensor.pixel_watch_mic_muted");
    ///<summary>Pixel Watch Music active</summary>
    public BinarySensorEntity PixelWatchMusicActive => new(_haContext, "binary_sensor.pixel_watch_music_active");
    ///<summary>Pixel Watch NFC state</summary>
    public BinarySensorEntity PixelWatchNfcState => new(_haContext, "binary_sensor.pixel_watch_nfc_state");
    ///<summary>Pixel Watch On body sensor</summary>
    public BinarySensorEntity PixelWatchOnBodySensor => new(_haContext, "binary_sensor.pixel_watch_on_body_sensor");
    ///<summary>Pixel Watch Power save</summary>
    public BinarySensorEntity PixelWatchPowerSave => new(_haContext, "binary_sensor.pixel_watch_power_save");
    ///<summary>Pixel Watch Speakerphone</summary>
    public BinarySensorEntity PixelWatchSpeakerphone => new(_haContext, "binary_sensor.pixel_watch_speakerphone");
    ///<summary>Pixel Watch Theater mode</summary>
    public BinarySensorEntity PixelWatchTheaterMode => new(_haContext, "binary_sensor.pixel_watch_theater_mode");
    ///<summary>Pixel Watch Wet mode</summary>
    public BinarySensorEntity PixelWatchWetMode => new(_haContext, "binary_sensor.pixel_watch_wet_mode");
    ///<summary>Pixel Watch WiFi state</summary>
    public BinarySensorEntity PixelWatchWifiState => new(_haContext, "binary_sensor.pixel_watch_wifi_state");
    ///<summary>Porch Light Input</summary>
    public BinarySensorEntity PorchLightInput => new(_haContext, "binary_sensor.porch_light_input");
    ///<summary>Porch Light Overheating</summary>
    public BinarySensorEntity PorchLightOverheating => new(_haContext, "binary_sensor.porch_light_overheating");
    ///<summary>Porch Light Overpowering</summary>
    public BinarySensorEntity PorchLightOverpowering => new(_haContext, "binary_sensor.porch_light_overpowering");
    ///<summary>Porch Light Overvoltage</summary>
    public BinarySensorEntity PorchLightOvervoltage => new(_haContext, "binary_sensor.porch_light_overvoltage");
    ///<summary>Remote UI</summary>
    public BinarySensorEntity RemoteUi => new(_haContext, "binary_sensor.remote_ui");
    ///<summary>Cat Feeder Feeding</summary>
    public BinarySensorEntity RojecoPetFeederFeeding => new(_haContext, "binary_sensor.rojeco_pet_feeder_feeding");
    ///<summary>Shed Camera Animal detected</summary>
    public BinarySensorEntity ShedCameraAnimalDetected => new(_haContext, "binary_sensor.shed_camera_animal_detected");
    ///<summary>Shed Camera Audio object detected</summary>
    public BinarySensorEntity ShedCameraAudioObjectDetected => new(_haContext, "binary_sensor.shed_camera_audio_object_detected");
    ///<summary>Shed Camera Baby cry detected</summary>
    public BinarySensorEntity ShedCameraBabyCryDetected => new(_haContext, "binary_sensor.shed_camera_baby_cry_detected");
    ///<summary>Shed Camera CO alarm detected</summary>
    public BinarySensorEntity ShedCameraCoAlarmDetected => new(_haContext, "binary_sensor.shed_camera_co_alarm_detected");
    ///<summary>Shed Camera Detections: animal</summary>
    public BinarySensorEntity ShedCameraDetectionsAnimal => new(_haContext, "binary_sensor.shed_camera_detections_animal");
    ///<summary>Shed Camera Detections: baby cry</summary>
    public BinarySensorEntity ShedCameraDetectionsBabyCry => new(_haContext, "binary_sensor.shed_camera_detections_baby_cry");
    ///<summary>Shed Camera Detections: CO</summary>
    public BinarySensorEntity ShedCameraDetectionsCo => new(_haContext, "binary_sensor.shed_camera_detections_co");
    ///<summary>Shed Camera Detections: motion</summary>
    public BinarySensorEntity ShedCameraDetectionsMotion => new(_haContext, "binary_sensor.shed_camera_detections_motion");
    ///<summary>Shed Camera Detections: person</summary>
    public BinarySensorEntity ShedCameraDetectionsPerson => new(_haContext, "binary_sensor.shed_camera_detections_person");
    ///<summary>Shed Camera Detections: smoke</summary>
    public BinarySensorEntity ShedCameraDetectionsSmoke => new(_haContext, "binary_sensor.shed_camera_detections_smoke");
    ///<summary>Shed Camera Detections: vehicle</summary>
    public BinarySensorEntity ShedCameraDetectionsVehicle => new(_haContext, "binary_sensor.shed_camera_detections_vehicle");
    ///<summary>Shed Camera HDR mode</summary>
    public BinarySensorEntity ShedCameraHdrMode => new(_haContext, "binary_sensor.shed_camera_hdr_mode");
    ///<summary>Shed Camera Is dark</summary>
    public BinarySensorEntity ShedCameraIsDark => new(_haContext, "binary_sensor.shed_camera_is_dark");
    ///<summary>Shed Camera Motion</summary>
    public BinarySensorEntity ShedCameraMotion => new(_haContext, "binary_sensor.shed_camera_motion");
    ///<summary>Shed Camera Object detected</summary>
    public BinarySensorEntity ShedCameraObjectDetected => new(_haContext, "binary_sensor.shed_camera_object_detected");
    ///<summary>Shed Camera Overlay: show bitrate</summary>
    public BinarySensorEntity ShedCameraOverlayShowBitrate => new(_haContext, "binary_sensor.shed_camera_overlay_show_bitrate");
    ///<summary>Shed Camera Overlay: show date</summary>
    public BinarySensorEntity ShedCameraOverlayShowDate => new(_haContext, "binary_sensor.shed_camera_overlay_show_date");
    ///<summary>Shed Camera Overlay: show logo</summary>
    public BinarySensorEntity ShedCameraOverlayShowLogo => new(_haContext, "binary_sensor.shed_camera_overlay_show_logo");
    ///<summary>Shed Camera Overlay: show name</summary>
    public BinarySensorEntity ShedCameraOverlayShowName => new(_haContext, "binary_sensor.shed_camera_overlay_show_name");
    ///<summary>Shed Camera Person detected</summary>
    public BinarySensorEntity ShedCameraPersonDetected => new(_haContext, "binary_sensor.shed_camera_person_detected");
    ///<summary>Shed Camera Smoke alarm detected</summary>
    public BinarySensorEntity ShedCameraSmokeAlarmDetected => new(_haContext, "binary_sensor.shed_camera_smoke_alarm_detected");
    ///<summary>Shed Camera Vehicle detected</summary>
    public BinarySensorEntity ShedCameraVehicleDetected => new(_haContext, "binary_sensor.shed_camera_vehicle_detected");
    ///<summary>Door</summary>
    public BinarySensorEntity ShedDoor => new(_haContext, "binary_sensor.shed_door");
    ///<summary>Shed Light Input</summary>
    public BinarySensorEntity ShedLightInput => new(_haContext, "binary_sensor.shed_light_input");
    ///<summary>Shed Light overcurrent</summary>
    public BinarySensorEntity ShedLightOvercurrent => new(_haContext, "binary_sensor.shed_light_overcurrent");
    ///<summary>Shed Light overheating</summary>
    public BinarySensorEntity ShedLightOverheating => new(_haContext, "binary_sensor.shed_light_overheating");
    ///<summary>Shed Light overpowering</summary>
    public BinarySensorEntity ShedLightOverpowering => new(_haContext, "binary_sensor.shed_light_overpowering");
    ///<summary>Shed Light overvoltage</summary>
    public BinarySensorEntity ShedLightOvervoltage => new(_haContext, "binary_sensor.shed_light_overvoltage");
    ///<summary>Shed Motion Motion</summary>
    public BinarySensorEntity ShedMotion => new(_haContext, "binary_sensor.shed_motion");
    ///<summary>Shelly Landing Light cloud</summary>
    public BinarySensorEntity ShellyLandingLightCloud => new(_haContext, "binary_sensor.shelly_landing_light_cloud");
    ///<summary>Shelly Landing Light Switch 0 overcurrent</summary>
    public BinarySensorEntity ShellyLandingLightSwitch0Overcurrent => new(_haContext, "binary_sensor.shelly_landing_light_switch_0_overcurrent");
    ///<summary>Shelly Landing Light switch_0 overheating</summary>
    public BinarySensorEntity ShellyLandingLightSwitch0Overheating => new(_haContext, "binary_sensor.shelly_landing_light_switch_0_overheating");
    ///<summary>Shelly Landing Light switch_0 overpowering</summary>
    public BinarySensorEntity ShellyLandingLightSwitch0Overpowering => new(_haContext, "binary_sensor.shelly_landing_light_switch_0_overpowering");
    ///<summary>Shelly Landing Light switch_0 overvoltage</summary>
    public BinarySensorEntity ShellyLandingLightSwitch0Overvoltage => new(_haContext, "binary_sensor.shelly_landing_light_switch_0_overvoltage");
    ///<summary>Shelly Shed Lights Cloud</summary>
    public BinarySensorEntity ShellyShedLightsCloud => new(_haContext, "binary_sensor.shelly_shed_lights_cloud");
    ///<summary>Shelly Shed Sockets Cloud</summary>
    public BinarySensorEntity ShellyShedSocketsCloud => new(_haContext, "binary_sensor.shelly_shed_sockets_cloud");
    ///<summary>Shelly Upstairs Lights 1 cloud</summary>
    public BinarySensorEntity ShellyUpstairsLights1Cloud => new(_haContext, "binary_sensor.shelly_upstairs_lights_1_cloud");
    ///<summary>Shelly Upstairs Lights 1 Input 0 input</summary>
    public BinarySensorEntity ShellyUpstairsLights1Input0Input => new(_haContext, "binary_sensor.shelly_upstairs_lights_1_input_0_input");
    ///<summary>Shelly Upstairs Lights 1 Input 1 input</summary>
    public BinarySensorEntity ShellyUpstairsLights1Input1Input => new(_haContext, "binary_sensor.shelly_upstairs_lights_1_input_1_input");
    ///<summary>Shelly Upstairs Lights 1 Input 2 input</summary>
    public BinarySensorEntity ShellyUpstairsLights1Input2Input => new(_haContext, "binary_sensor.shelly_upstairs_lights_1_input_2_input");
    ///<summary>Shelly Upstairs Lights 1 Input 3 input</summary>
    public BinarySensorEntity ShellyUpstairsLights1Input3Input => new(_haContext, "binary_sensor.shelly_upstairs_lights_1_input_3_input");
    ///<summary>Shelly Upstairs Lights 2 cloud</summary>
    public BinarySensorEntity ShellyUpstairsLights2Cloud => new(_haContext, "binary_sensor.shelly_upstairs_lights_2_cloud");
    ///<summary>Shelly Upstairs Lights 2 Input 0 input</summary>
    public BinarySensorEntity ShellyUpstairsLights2Input0Input => new(_haContext, "binary_sensor.shelly_upstairs_lights_2_input_0_input");
    ///<summary>Shelly Upstairs Lights 2 Input 1 input</summary>
    public BinarySensorEntity ShellyUpstairsLights2Input1Input => new(_haContext, "binary_sensor.shelly_upstairs_lights_2_input_1_input");
    ///<summary>Shelly Upstairs Lights 2 Input 2 input</summary>
    public BinarySensorEntity ShellyUpstairsLights2Input2Input => new(_haContext, "binary_sensor.shelly_upstairs_lights_2_input_2_input");
    ///<summary>Shelly Upstairs Lights 2 Input 3 input</summary>
    public BinarySensorEntity ShellyUpstairsLights2Input3Input => new(_haContext, "binary_sensor.shelly_upstairs_lights_2_input_3_input");
    ///<summary>Shelly Upstairs Sockets 4 cloud</summary>
    public BinarySensorEntity ShellyUpstairsSocket4Cloud => new(_haContext, "binary_sensor.shelly_upstairs_socket_4_cloud");
    ///<summary>Shelly Upstairs Sockets 4 Input 0 input</summary>
    public BinarySensorEntity ShellyUpstairsSocket4Input0Input => new(_haContext, "binary_sensor.shelly_upstairs_socket_4_input_0_input");
    ///<summary>Shelly Upstairs Sockets 4 Input 1 input</summary>
    public BinarySensorEntity ShellyUpstairsSocket4Input1Input => new(_haContext, "binary_sensor.shelly_upstairs_socket_4_input_1_input");
    ///<summary>Shelly Upstairs Sockets 4 Input 2 input</summary>
    public BinarySensorEntity ShellyUpstairsSocket4Input2Input => new(_haContext, "binary_sensor.shelly_upstairs_socket_4_input_2_input");
    ///<summary>Shelly Upstairs Sockets 4 Input 3 input</summary>
    public BinarySensorEntity ShellyUpstairsSocket4Input3Input => new(_haContext, "binary_sensor.shelly_upstairs_socket_4_input_3_input");
    ///<summary>shellypro4pm-34987a68fc0c Switch 1 overcurrent</summary>
    public BinarySensorEntity Shellypro4pm34987a68fc0cSwitch1Overcurrent => new(_haContext, "binary_sensor.shellypro4pm_34987a68fc0c_switch_1_overcurrent");
    ///<summary>shellypro4pm-34987a691128 Switch 0 overcurrent</summary>
    public BinarySensorEntity Shellypro4pm34987a691128Switch0Overcurrent => new(_haContext, "binary_sensor.shellypro4pm_34987a691128_switch_0_overcurrent");
    ///<summary>shellypro4pm-34987a691128 Switch 1 overcurrent</summary>
    public BinarySensorEntity Shellypro4pm34987a691128Switch1Overcurrent => new(_haContext, "binary_sensor.shellypro4pm_34987a691128_switch_1_overcurrent");
    ///<summary>shellypro4pm-34987a691128 Switch 2 overcurrent</summary>
    public BinarySensorEntity Shellypro4pm34987a691128Switch2Overcurrent => new(_haContext, "binary_sensor.shellypro4pm_34987a691128_switch_2_overcurrent");
    ///<summary>shellypro4pm-34987a691128 Switch 3 overcurrent</summary>
    public BinarySensorEntity Shellypro4pm34987a691128Switch3Overcurrent => new(_haContext, "binary_sensor.shellypro4pm_34987a691128_switch_3_overcurrent");
    ///<summary>Snug Led Strip</summary>
    public BinarySensorEntity SnugLedStripUpdateAvailable => new(_haContext, "binary_sensor.snug_led_strip_update_available");
    ///<summary>Snug Light overcurrent</summary>
    public BinarySensorEntity SnugLightOvercurrent => new(_haContext, "binary_sensor.snug_light_overcurrent");
    ///<summary>Snug Motion</summary>
    public BinarySensorEntity SnugMotion => new(_haContext, "binary_sensor.snug_motion");
    ///<summary>Snug Occupancy</summary>
    public BinarySensorEntity SnugOccupancy => new(_haContext, "binary_sensor.snug_occupancy");
    ///<summary>Sonoff Bridge 1 Sonoff Bridge 1 Button1</summary>
    public BinarySensorEntity SonoffBridge1Button1 => new(_haContext, "binary_sensor.sonoff_bridge_1_button1");
    ///<summary>Sonoff Downstairs 1 Sonoff Downstairs 1 Bookshelf Light Button</summary>
    public BinarySensorEntity SonoffDownstairs1BookshelfLightButton => new(_haContext, "binary_sensor.sonoff_downstairs_1_bookshelf_light_button");
    ///<summary>Sonoff Downstairs 1 Sonoff Downstairs 1 Extractor Fan Button</summary>
    public BinarySensorEntity SonoffDownstairs1ExtractorFanButton => new(_haContext, "binary_sensor.sonoff_downstairs_1_extractor_fan_button");
    ///<summary>Sonoff Downstairs 1 Sonoff Downstairs 1 Hallway Light Button</summary>
    public BinarySensorEntity SonoffDownstairs1HallwayLightButton => new(_haContext, "binary_sensor.sonoff_downstairs_1_hallway_light_button");
    ///<summary>Sonoff Downstairs 1 Sonoff Downstairs 1 Lounge Light Button</summary>
    public BinarySensorEntity SonoffDownstairs1LoungeLightButton => new(_haContext, "binary_sensor.sonoff_downstairs_1_lounge_light_button");
    ///<summary>Sonoff Downstairs 1 Sonoff Downstairs 1 Status</summary>
    public BinarySensorEntity SonoffDownstairs1Status => new(_haContext, "binary_sensor.sonoff_downstairs_1_status");
    ///<summary>Sonoff Downstairs 2 Sonoff Downstairs 2 Cabinet Light Button</summary>
    public BinarySensorEntity SonoffDownstairs2CabinetLightButton => new(_haContext, "binary_sensor.sonoff_downstairs_2_cabinet_light_button");
    ///<summary>Sonoff Downstairs 2 Sonoff Downstairs 2 Drawing Room Light Button</summary>
    public BinarySensorEntity SonoffDownstairs2DrawingRoomLightButton => new(_haContext, "binary_sensor.sonoff_downstairs_2_drawing_room_light_button");
    ///<summary>Sonoff Downstairs 2 Sonoff Downstairs 2 Kitchen Light Button</summary>
    public BinarySensorEntity SonoffDownstairs2KitchenLightButton => new(_haContext, "binary_sensor.sonoff_downstairs_2_kitchen_light_button");
    ///<summary>Sonoff Downstairs 2 Sonoff Downstairs 2 Spare Ch1 Button</summary>
    public BinarySensorEntity SonoffDownstairs2SpareCh1Button => new(_haContext, "binary_sensor.sonoff_downstairs_2_spare_ch1_button");
    ///<summary>Sonoff Downstairs 2 Sonoff Downstairs 2 Status</summary>
    public BinarySensorEntity SonoffDownstairs2Status => new(_haContext, "binary_sensor.sonoff_downstairs_2_status");
    ///<summary>Store Light overcurrent</summary>
    public BinarySensorEntity StoreLightOvercurrent => new(_haContext, "binary_sensor.store_light_overcurrent");
    ///<summary>Studio Lamp overcurrent</summary>
    public BinarySensorEntity StudioLampOvercurrent => new(_haContext, "binary_sensor.studio_lamp_overcurrent");
    ///<summary>Studio Lamp overheating</summary>
    public BinarySensorEntity StudioLampOverheating => new(_haContext, "binary_sensor.studio_lamp_overheating");
    ///<summary>Studio Lamp overpowering</summary>
    public BinarySensorEntity StudioLampOverpowering => new(_haContext, "binary_sensor.studio_lamp_overpowering");
    ///<summary>Studio Lamp overvoltage</summary>
    public BinarySensorEntity StudioLampOvervoltage => new(_haContext, "binary_sensor.studio_lamp_overvoltage");
    ///<summary>Studio Light overcurrent</summary>
    public BinarySensorEntity StudioLightOvercurrent => new(_haContext, "binary_sensor.studio_light_overcurrent");
    ///<summary>Studio Light overheating</summary>
    public BinarySensorEntity StudioLightOverheating => new(_haContext, "binary_sensor.studio_light_overheating");
    ///<summary>Studio Light overpowering</summary>
    public BinarySensorEntity StudioLightOverpowering => new(_haContext, "binary_sensor.studio_light_overpowering");
    ///<summary>Studio Light overvoltage</summary>
    public BinarySensorEntity StudioLightOvervoltage => new(_haContext, "binary_sensor.studio_light_overvoltage");
    ///<summary>Studio Motion</summary>
    public BinarySensorEntity StudioMotion => new(_haContext, "binary_sensor.studio_motion");
    ///<summary>Sump Alarm Sump Alarm Trigger</summary>
    public BinarySensorEntity SumpAlarmTrigger => new(_haContext, "binary_sensor.sump_alarm_trigger");
    ///<summary>Toilet Door</summary>
    public BinarySensorEntity ToiletDoor => new(_haContext, "binary_sensor.toilet_door");
    ///<summary>Toilet Door Battery</summary>
    public BinarySensorEntity ToiletDoorBatteryLow => new(_haContext, "binary_sensor.toilet_door_battery_low");
    ///<summary>Toilet Light overcurrent</summary>
    public BinarySensorEntity ToiletLightOvercurrent => new(_haContext, "binary_sensor.toilet_light_overcurrent");
    ///<summary>Toilet Motion</summary>
    public BinarySensorEntity ToiletMotion => new(_haContext, "binary_sensor.toilet_motion");
    ///<summary>UDMPRO HDD 1</summary>
    public BinarySensorEntity UdmproHdd1 => new(_haContext, "binary_sensor.udmpro_hdd_1");
    ///<summary>UniFi Dream Machine WAN status</summary>
    public BinarySensorEntity UnifiDreamMachineWanStatus => new(_haContext, "binary_sensor.unifi_dream_machine_wan_status");
    ///<summary>Updater</summary>
    public BinarySensorEntity Updater => new(_haContext, "binary_sensor.updater");
    ///<summary>Upstairs Spare Light overcurrent</summary>
    public BinarySensorEntity UpstairsSpareLightOvercurrent => new(_haContext, "binary_sensor.upstairs_spare_light_overcurrent");
    ///<summary>Utility Room Light overcurrent</summary>
    public BinarySensorEntity UtilityRoomLightOvercurrent => new(_haContext, "binary_sensor.utility_room_light_overcurrent");
    ///<summary>Utility Room Motion</summary>
    public BinarySensorEntity UtilityRoomMotion => new(_haContext, "binary_sensor.utility_room_motion");
    ///<summary>WIFI smart CO alarm Safety</summary>
    public BinarySensorEntity WifiSmartCoAlarmSafety => new(_haContext, "binary_sensor.wifi_smart_co_alarm_safety");
    ///<summary>Window Sofa Occupancy</summary>
    public BinarySensorEntity WindowSofaOccupancy => new(_haContext, "binary_sensor.window_sofa_occupancy");
    ///<summary>Zigbee2MQTT Bridge Connection state</summary>
    public BinarySensorEntity Zigbee2mqttBridgeConnectionState => new(_haContext, "binary_sensor.zigbee2mqtt_bridge_connection_state");
}

public partial class ButtonEntities
{
    private readonly IHaContext _haContext;
    public ButtonEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all button entities currently registered (at runtime) in Home Assistant as ButtonEntity</summary>
    public IEnumerable<ButtonEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("button.")).Select(e => new ButtonEntity(e));
    ///<summary>Bedside Switch Identify</summary>
    public ButtonEntity _0xf082c0fffe3d9a0fIdentify => new(_haContext, "button.0xf082c0fffe3d9a0f_identify");
    ///<summary>Andy Allocate all stat points</summary>
    public ButtonEntity AndyAllocateAllStatPoints => new(_haContext, "button.andy_allocate_all_stat_points");
    ///<summary>Andy Buy a health potion</summary>
    public ButtonEntity AndyBuyAHealthPotion => new(_haContext, "button.andy_buy_a_health_potion");
    ///<summary>Andy Revive from death</summary>
    public ButtonEntity AndyReviveFromDeath => new(_haContext, "button.andy_revive_from_death");
    ///<summary>Andy Start my day</summary>
    public ButtonEntity AndyStartMyDay => new(_haContext, "button.andy_start_my_day");
    ///<summary>Shelly Basement Hall Lights Reboot</summary>
    public ButtonEntity BasementHallLightsReboot => new(_haContext, "button.basement_hall_lights_reboot");
    ///<summary>Basement Lights 1 Reboot</summary>
    public ButtonEntity BasementLights1Reboot => new(_haContext, "button.basement_lights_1_reboot");
    ///<summary>Basement Lights 2 Reboot</summary>
    public ButtonEntity BasementLights2Reboot => new(_haContext, "button.basement_lights_2_reboot");
    ///<summary>Bathroom Switch Identify</summary>
    public ButtonEntity BathroomSwitchIdentify => new(_haContext, "button.bathroom_switch_identify");
    ///<summary>Bedroom Switch Identify</summary>
    public ButtonEntity BedroomSwitchIdentify => new(_haContext, "button.bedroom_switch_identify");
    ///<summary>Brewery Identify</summary>
    public ButtonEntity BreweryIdentify => new(_haContext, "button.brewery_identify");
    ///<summary>Coffee Machine Identify</summary>
    public ButtonEntity CoffeeMachineIdentify => new(_haContext, "button.coffee_machine_identify");
    ///<summary>Dining Room Switch Identify</summary>
    public ButtonEntity DiningRoomSwitchIdentify => new(_haContext, "button.dining_room_switch_identify");
    ///<summary>Display Cabinet Light Identify</summary>
    public ButtonEntity DisplayCabinetLightIdentify => new(_haContext, "button.display_cabinet_light_identify");
    ///<summary>Drawing Room Switch Identify</summary>
    public ButtonEntity DrawingRoomSwitchIdentify => new(_haContext, "button.drawing_room_switch_identify");
    ///<summary>Dressing Room Switch Identify</summary>
    public ButtonEntity DressingRoomSwitchIdentify => new(_haContext, "button.dressing_room_switch_identify");
    ///<summary>ESPresense Bedroom ESPresense Bedroom Restart</summary>
    public ButtonEntity EspresenseBedroomRestart => new(_haContext, "button.espresense_bedroom_restart");
    ///<summary>ESPresense Kitchen Enroll</summary>
    public ButtonEntity EspresenseKitchenEnroll => new(_haContext, "button.espresense_kitchen_enroll");
    ///<summary>ESPresense Kitchen Restart</summary>
    public ButtonEntity EspresenseKitchenRestart => new(_haContext, "button.espresense_kitchen_restart");
    ///<summary>ESPresense Kitchen Update</summary>
    public ButtonEntity EspresenseKitchenUpdate => new(_haContext, "button.espresense_kitchen_update");
    ///<summary>ESPresense Lounge ESPresense Lounge Enroll</summary>
    public ButtonEntity EspresenseLoungeEnroll => new(_haContext, "button.espresense_lounge_enroll");
    ///<summary>ESPresense Lounge ESPresense Lounge Restart</summary>
    public ButtonEntity EspresenseLoungeRestart => new(_haContext, "button.espresense_lounge_restart");
    ///<summary>ESPresense Lounge ESPresense Lounge Update</summary>
    public ButtonEntity EspresenseLoungeUpdate => new(_haContext, "button.espresense_lounge_update");
    ///<summary>ESPresense Snug ESPresense Snug Restart</summary>
    public ButtonEntity EspresenseSnugRestart => new(_haContext, "button.espresense_snug_restart");
    ///<summary>Guest Room Bedside Switch Identify</summary>
    public ButtonEntity GuestRoomBedsideSwitchIdentify => new(_haContext, "button.guest_room_bedside_switch_identify");
    ///<summary>Guest Room FP2 Identify</summary>
    public ButtonEntity GuestRoomFp2Identify => new(_haContext, "button.guest_room_fp2_identify");
    ///<summary>Guest Room Lamp Identify</summary>
    public ButtonEntity GuestRoomLampIdentify => new(_haContext, "button.guest_room_lamp_identify");
    ///<summary>Guest Room Remote Identify</summary>
    public ButtonEntity GuestRoomRemoteIdentify => new(_haContext, "button.guest_room_remote_identify");
    ///<summary>Guest Room Switch Identify</summary>
    public ButtonEntity GuestRoomSwitchIdentify => new(_haContext, "button.guest_room_switch_identify");
    ///<summary>Hallway Light Reboot</summary>
    public ButtonEntity HallwayLightReboot => new(_haContext, "button.hallway_light_reboot");
    ///<summary>Hallway Tablet Bring to foreground</summary>
    public ButtonEntity HallwayTabletBringToForeground => new(_haContext, "button.hallway_tablet_bring_to_foreground");
    ///<summary>Hallway Tablet Load start URL</summary>
    public ButtonEntity HallwayTabletLoadStartUrl => new(_haContext, "button.hallway_tablet_load_start_url");
    ///<summary>Hallway Tablet Restart browser</summary>
    public ButtonEntity HallwayTabletRestartBrowser => new(_haContext, "button.hallway_tablet_restart_browser");
    ///<summary>Hallway Tablet Restart device</summary>
    public ButtonEntity HallwayTabletRestartDevice => new(_haContext, "button.hallway_tablet_restart_device");
    ///<summary>Hallway Tablet Send to background</summary>
    public ButtonEntity HallwayTabletSendToBackground => new(_haContext, "button.hallway_tablet_send_to_background");
    ///<summary>Kitchen Air Quality Identify</summary>
    public ButtonEntity KitchenAirQualityIdentify => new(_haContext, "button.kitchen_air_quality_identify");
    ///<summary>Kitchen Switch Identify</summary>
    public ButtonEntity KitchenSwitchIdentify => new(_haContext, "button.kitchen_switch_identify");
    ///<summary>Left Bedside Switch Identify</summary>
    public ButtonEntity LeftBedsideSwitchIdentify => new(_haContext, "button.left_bedside_switch_identify");
    ///<summary>Lounge FP2 Identify</summary>
    public ButtonEntity LoungeFp2Identify => new(_haContext, "button.lounge_fp2_identify");
    ///<summary>Lounge Sofa Switch Identify</summary>
    public ButtonEntity LoungeSofaSwitchIdentify => new(_haContext, "button.lounge_sofa_switch_identify");
    ///<summary>Lounge Switch Identify</summary>
    public ButtonEntity LoungeSwitchIdentify => new(_haContext, "button.lounge_switch_identify");
    ///<summary>Dismiss alert</summary>
    public ButtonEntity MarkDismissAlert => new(_haContext, "button.mark_dismiss_alert");
    ///<summary>nspanel Restart</summary>
    public ButtonEntity NspanelRestart => new(_haContext, "button.nspanel_restart");
    ///<summary>nspanel Update TFT display</summary>
    public ButtonEntity NspanelUpdateTftDisplay => new(_haContext, "button.nspanel_update_tft_display");
    ///<summary>Outside Lights Reboot</summary>
    public ButtonEntity OutsideLightsReboot => new(_haContext, "button.outside_lights_reboot");
    ///<summary>Right Bedside Switch Identify</summary>
    public ButtonEntity RightBedsideSwitchIdentify => new(_haContext, "button.right_bedside_switch_identify");
    ///<summary>studio-bluetooth-proxy Safe Mode Boot</summary>
    public ButtonEntity SafeModeBoot => new(_haContext, "button.safe_mode_boot");
    ///<summary>Shelly Landing Light Reboot</summary>
    public ButtonEntity ShellyLandingLightReboot => new(_haContext, "button.shelly_landing_light_reboot");
    ///<summary>Shelly Shed Lights Reboot</summary>
    public ButtonEntity ShellyShedLightsReboot => new(_haContext, "button.shelly_shed_lights_reboot");
    ///<summary>Shelly Shed Sockets Reboot</summary>
    public ButtonEntity ShellyShedSocketsReboot => new(_haContext, "button.shelly_shed_sockets_reboot");
    ///<summary>Shelly Upstairs Lights 1 Reboot</summary>
    public ButtonEntity ShellyUpstairsLights1Reboot => new(_haContext, "button.shelly_upstairs_lights_1_reboot");
    ///<summary>Shelly Upstairs Lights 2 Reboot</summary>
    public ButtonEntity ShellyUpstairsLights2Reboot => new(_haContext, "button.shelly_upstairs_lights_2_reboot");
    ///<summary>Shelly Upstairs Sockets 4 Reboot</summary>
    public ButtonEntity ShellyUpstairsSocket4Reboot => new(_haContext, "button.shelly_upstairs_socket_4_reboot");
    ///<summary>Snug Desk Switch Identify</summary>
    public ButtonEntity SnugDeskSwitchIdentify => new(_haContext, "button.snug_desk_switch_identify");
    ///<summary>Snug FP2 Identify</summary>
    public ButtonEntity SnugFp2Identify => new(_haContext, "button.snug_fp2_identify");
    ///<summary>Snug Switch Identify</summary>
    public ButtonEntity SnugSwitchIdentify => new(_haContext, "button.snug_switch_identify");
    ///<summary>Store Switch Identify</summary>
    public ButtonEntity StoreSwitchIdentify => new(_haContext, "button.store_switch_identify");
    ///<summary>Studio Bedside Switch Identify</summary>
    public ButtonEntity StudioBedsideSwitchIdentify => new(_haContext, "button.studio_bedside_switch_identify");
    ///<summary>studio-bluetooth-proxy ESPresense Studio Enroll</summary>
    public ButtonEntity StudioBluetoothProxyEnroll => new(_haContext, "button.studio_bluetooth_proxy_enroll");
    ///<summary>studio-bluetooth-proxy ESPresense Studio Restart</summary>
    public ButtonEntity StudioBluetoothProxyRestart => new(_haContext, "button.studio_bluetooth_proxy_restart");
    ///<summary>studio-bluetooth-proxy ESPresense Studio Update</summary>
    public ButtonEntity StudioBluetoothProxyUpdate => new(_haContext, "button.studio_bluetooth_proxy_update");
    ///<summary>Studio Switch Identify</summary>
    public ButtonEntity StudioSwitchIdentify => new(_haContext, "button.studio_switch_identify");
    ///<summary>Toilet Switch Identify</summary>
    public ButtonEntity ToiletSwitchIdentify => new(_haContext, "button.toilet_switch_identify");
    ///<summary>Utility Room Switch Identify</summary>
    public ButtonEntity UtilityRoomSwitchIdentify => new(_haContext, "button.utility_room_switch_identify");
    ///<summary>Zigbee2MQTT Bridge Restart</summary>
    public ButtonEntity Zigbee2mqttBridgeRestart => new(_haContext, "button.zigbee2mqtt_bridge_restart");
}

public partial class CalendarEntities
{
    private readonly IHaContext _haContext;
    public CalendarEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all calendar entities currently registered (at runtime) in Home Assistant as CalendarEntity</summary>
    public IEnumerable<CalendarEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("calendar.")).Select(e => new CalendarEntity(e));
    ///<summary>Andy Dailies</summary>
    public CalendarEntity AndyDailies => new(_haContext, "calendar.andy_dailies");
    ///<summary>Andy To-Do&apos;s</summary>
    public CalendarEntity AndyToDoS => new(_haContext, "calendar.andy_to_do_s");
    ///<summary>Andy Workouts</summary>
    public CalendarEntity AndyWorkouts => new(_haContext, "calendar.andy_workouts");
    ///<summary>claire Workouts</summary>
    public CalendarEntity ClaireWorkouts => new(_haContext, "calendar.claire_workouts");
    ///<summary>Contacts</summary>
    public CalendarEntity Contacts => new(_haContext, "calendar.contacts");
    ///<summary>Family</summary>
    public CalendarEntity Family => new(_haContext, "calendar.family");
    ///<summary>Holidays in united kingdom</summary>
    public CalendarEntity HolidaysInUnitedKingdom => new(_haContext, "calendar.holidays_in_united_kingdom");
    ///<summary>Home.andisoft@gmail.com</summary>
    public CalendarEntity HomeAndisoftGmailCom => new(_haContext, "calendar.home_andisoft_gmail_com");
    ///<summary>Stockport Council</summary>
    public CalendarEntity StockportCouncil => new(_haContext, "calendar.stockport_council");
}

public partial class CameraEntities
{
    private readonly IHaContext _haContext;
    public CameraEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all camera entities currently registered (at runtime) in Home Assistant as CameraEntity</summary>
    public IEnumerable<CameraEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("camera.")).Select(e => new CameraEntity(e));
    ///<summary>Basement Hall Camera Medium resolution channel</summary>
    public CameraEntity BasementHallCameraMediumResolutionChannel => new(_haContext, "camera.basement_hall_camera_medium_resolution_channel");
    ///<summary>Hallway Camera Medium resolution channel</summary>
    public CameraEntity HallwayCameraMediumResolutionChannel => new(_haContext, "camera.hallway_camera_medium_resolution_channel");
    ///<summary>Hallway Tablet</summary>
    public CameraEntity HallwayTablet => new(_haContext, "camera.hallway_tablet");
    ///<summary>Kitchen Camera Medium resolution channel</summary>
    public CameraEntity KitchenCameraMediumResolutionChannel => new(_haContext, "camera.kitchen_camera_medium_resolution_channel");
    ///<summary>Kitchen Camera Medium resolution channel (insecure)</summary>
    public CameraEntity KitchenCameraMediumResolutionChannelInsecure => new(_haContext, "camera.kitchen_camera_medium_resolution_channel_insecure");
    ///<summary>Cleaning map</summary>
    public CameraEntity MarkCleaningMap => new(_haContext, "camera.mark_cleaning_map");
    ///<summary>Patio Camera Medium resolution channel</summary>
    public CameraEntity PatioCameraMediumResolutionChannel => new(_haContext, "camera.patio_camera_medium_resolution_channel");
    ///<summary>Shed Camera Medium resolution channel</summary>
    public CameraEntity ShedCameraMediumResolutionChannel => new(_haContext, "camera.shed_camera_medium_resolution_channel");
}

public partial class ClimateEntities
{
    private readonly IHaContext _haContext;
    public ClimateEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all climate entities currently registered (at runtime) in Home Assistant as ClimateEntity</summary>
    public IEnumerable<ClimateEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("climate.")).Select(e => new ClimateEntity(e));
    ///<summary>Basement</summary>
    public ClimateEntity Basement => new(_haContext, "climate.basement");
    ///<summary>Brewery Thermostat</summary>
    public ClimateEntity BreweryThermostat => new(_haContext, "climate.brewery_thermostat");
    ///<summary>Downstairs</summary>
    public ClimateEntity Downstairs => new(_haContext, "climate.downstairs");
    ///<summary>Fermenter</summary>
    public ClimateEntity Fermenter => new(_haContext, "climate.fermenter");
    ///<summary>Upstairs</summary>
    public ClimateEntity Upstairs => new(_haContext, "climate.upstairs");
}

public partial class ConversationEntities
{
    private readonly IHaContext _haContext;
    public ConversationEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all conversation entities currently registered (at runtime) in Home Assistant as ConversationEntity</summary>
    public IEnumerable<ConversationEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("conversation.")).Select(e => new ConversationEntity(e));
    ///<summary>Google Generative AI</summary>
    public ConversationEntity GoogleGenerativeAi => new(_haContext, "conversation.google_generative_ai");
    ///<summary>Home Assistant</summary>
    public ConversationEntity HomeAssistant => new(_haContext, "conversation.home_assistant");
}

public partial class DeviceTrackerEntities
{
    private readonly IHaContext _haContext;
    public DeviceTrackerEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all device_tracker entities currently registered (at runtime) in Home Assistant as DeviceTrackerEntity</summary>
    public IEnumerable<DeviceTrackerEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("device_tracker.")).Select(e => new DeviceTrackerEntity(e));
    ///<summary>02B6F4 02B6F4</summary>
    public DeviceTrackerEntity _02b6f4 => new(_haContext, "device_tracker.02b6f4");
    ///<summary>050590 050590</summary>
    public DeviceTrackerEntity _050590 => new(_haContext, "device_tracker.050590");
    ///<summary>09742DEN 09742DEN</summary>
    public DeviceTrackerEntity _09742den09742den => new(_haContext, "device_tracker.09742den_09742den");
    public DeviceTrackerEntity _10079d748ee848e98a1fE565c9fb73241001 => new(_haContext, "device_tracker.10079d74_8ee8_48e9_8a1f_e565c9fb7324_100_1");
    ///<summary>19635DEH 19635DEH</summary>
    public DeviceTrackerEntity _19635deh19635deh => new(_haContext, "device_tracker.19635deh_19635deh");
    ///<summary>1PHY00002P1P 1PHY00002P1P</summary>
    public DeviceTrackerEntity _1phy00002p1p => new(_haContext, "device_tracker.1phy00002p1p");
    ///<summary>20259E 20259E</summary>
    public DeviceTrackerEntity _20259e => new(_haContext, "device_tracker.20259e");
    ///<summary>41088DEC 41088DEC</summary>
    public DeviceTrackerEntity _41088dec41088dec => new(_haContext, "device_tracker.41088dec_41088dec");
    ///<summary>49768DMI 49768DMI</summary>
    public DeviceTrackerEntity _49768dmi => new(_haContext, "device_tracker.49768dmi");
    ///<summary>4PHY0000784P 4PHY0000784P</summary>
    public DeviceTrackerEntity _4phy0000784p4phy0000784p => new(_haContext, "device_tracker.4phy0000784p_4phy0000784p");
    ///<summary>57439-193 57439-193</summary>
    public DeviceTrackerEntity _5743919357439193 => new(_haContext, "device_tracker.57439_193_57439_193");
    public DeviceTrackerEntity _74278bdaB64445208f0c720eaf059935023646C68b => new(_haContext, "device_tracker.74278bda_b644_4520_8f0c_720eaf059935_0_23646_c68b");
    public DeviceTrackerEntity _74278bdaB64445208f0c720eaf059935042355512c => new(_haContext, "device_tracker.74278bda_b644_4520_8f0c_720eaf059935_0_42355_512c");
    public DeviceTrackerEntity _74278bdaB64445208f0c720eaf0599350447404a03 => new(_haContext, "device_tracker.74278bda_b644_4520_8f0c_720eaf059935_0_44740_4a03");
    public DeviceTrackerEntity _74278bdaB64445208f0c720eaf059935095650951 => new(_haContext, "device_tracker.74278bda_b644_4520_8f0c_720eaf059935_0_9565_0951");
    ///<summary>750C-BLE 750C-BLE</summary>
    public DeviceTrackerEntity _750cBle => new(_haContext, "device_tracker.750c_ble");
    ///<summary>75184DEM 75184DEM</summary>
    public DeviceTrackerEntity _75184dem => new(_haContext, "device_tracker.75184dem");
    ///<summary>7DHY0000557D 7DHY0000557D</summary>
    public DeviceTrackerEntity _7dhy0000557d => new(_haContext, "device_tracker.7dhy0000557d");
    ///<summary>88134DDO 88134DDO</summary>
    public DeviceTrackerEntity _88134ddo => new(_haContext, "device_tracker.88134ddo");
    ///<summary>88134DDO 88134DDO</summary>
    public DeviceTrackerEntity _88134ddo2 => new(_haContext, "device_tracker.88134ddo_2");
    public DeviceTrackerEntity _9d41000035d6F4ddBa60E7bd8dc491c027118791269ee => new(_haContext, "device_tracker.9d410000_35d6_f4dd_ba60_e7bd8dc491c0_27118_7912_69ee");
    public DeviceTrackerEntity _9d41000035d6F4ddBa60E7bd8dc491c06538525776Ff69 => new(_haContext, "device_tracker.9d410000_35d6_f4dd_ba60_e7bd8dc491c0_65385_25776_ff69");
    ///<summary>AB1530BLE AB1530BLE</summary>
    public DeviceTrackerEntity Ab1530ble => new(_haContext, "device_tracker.ab1530ble");
    ///<summary>ABAX6 ABAX6</summary>
    public DeviceTrackerEntity Abax6 => new(_haContext, "device_tracker.abax6");
    ///<summary>AK300_13044 AK300_13044</summary>
    public DeviceTrackerEntity Ak30013044Ak30013044 => new(_haContext, "device_tracker.ak300_13044_ak300_13044");
    ///<summary>AK300_28332 AK300_28332</summary>
    public DeviceTrackerEntity Ak30028332Ak30028332 => new(_haContext, "device_tracker.ak300_28332_ak300_28332");
    ///<summary>Alubarika Alubarika</summary>
    public DeviceTrackerEntity AlubarikaAlubarika => new(_haContext, "device_tracker.alubarika_alubarika");
    ///<summary>Andrew’s iPhone</summary>
    public DeviceTrackerEntity AndrewsIphoneTile => new(_haContext, "device_tracker.andrews_iphone_tile");
    ///<summary>Andy&apos;s Keys</summary>
    public DeviceTrackerEntity AndysKeys => new(_haContext, "device_tracker.andys_keys");
    ///<summary>Apple Pencil Apple Pencil</summary>
    public DeviceTrackerEntity ApplePencil => new(_haContext, "device_tracker.apple_pencil");
    ///<summary>AppSuite AppSuite</summary>
    public DeviceTrackerEntity Appsuite => new(_haContext, "device_tracker.appsuite");
    ///<summary>AT 185F AT 185F</summary>
    public DeviceTrackerEntity At185fAt185f => new(_haContext, "device_tracker.at_185f_at_185f");
    ///<summary>AT 1E24 AT 1E24</summary>
    public DeviceTrackerEntity At1e24 => new(_haContext, "device_tracker.at_1e24");
    ///<summary>AT 52832X AT 52832X</summary>
    public DeviceTrackerEntity At52832x => new(_haContext, "device_tracker.at_52832x");
    ///<summary>AT 8F7E AT 8F7E</summary>
    public DeviceTrackerEntity At8f7e => new(_haContext, "device_tracker.at_8f7e");
    ///<summary>AT D62D AT D62D</summary>
    public DeviceTrackerEntity AtD62d => new(_haContext, "device_tracker.at_d62d");
    ///<summary>AUKEY EP-T32 AUKEY EP-T32</summary>
    public DeviceTrackerEntity AukeyEpT32AukeyEpT32 => new(_haContext, "device_tracker.aukey_ep_t32_aukey_ep_t32");
    ///<summary>BCM4350C0 UART 37.4 MHz BCM4350C0 UART 37.4 MHz</summary>
    public DeviceTrackerEntity Bcm4350c0Uart374Mhz => new(_haContext, "device_tracker.bcm4350c0_uart_37_4_mhz");
    ///<summary>BIGGERFIVE Vigor 2 BIGGERFIVE Vigor 2</summary>
    public DeviceTrackerEntity BiggerfiveVigor2BiggerfiveVigor2 => new(_haContext, "device_tracker.biggerfive_vigor_2_biggerfive_vigor_2");
    ///<summary>black&apos;s JBL F black&apos;s JBL F</summary>
    public DeviceTrackerEntity BlackSJblFBlackSJblF => new(_haContext, "device_tracker.black_s_jbl_f_black_s_jbl_f");
    ///<summary>BLE_Camper #333 BLE_Camper #333</summary>
    public DeviceTrackerEntity BleCamper333BleCamper333 => new(_haContext, "device_tracker.ble_camper_333_ble_camper_333");
    ///<summary>BLE_dēzl LGV # BLE_dēzl LGV #</summary>
    public DeviceTrackerEntity BleDezlLgv => new(_haContext, "device_tracker.ble_dezl_lgv");
    ///<summary>BLE_dēzl LGV # BLE_dēzl LGV #</summary>
    public DeviceTrackerEntity BleDezlLgvBleDezlLgv3 => new(_haContext, "device_tracker.ble_dezl_lgv_ble_dezl_lgv_3");
    ///<summary>BLE_dēzl LGV # BLE_dēzl LGV #</summary>
    public DeviceTrackerEntity BleDezlLgvBleDezlLgv4 => new(_haContext, "device_tracker.ble_dezl_lgv_ble_dezl_lgv_4");
    ///<summary>BLE_dēzl LGV50 BLE_dēzl LGV50</summary>
    public DeviceTrackerEntity BleDezlLgv50BleDezlLgv50 => new(_haContext, "device_tracker.ble_dezl_lgv50_ble_dezl_lgv50");
    ///<summary>BLE_dēzl LGV70 BLE_dēzl LGV70</summary>
    public DeviceTrackerEntity BleDezlLgv70 => new(_haContext, "device_tracker.ble_dezl_lgv70");
    ///<summary>BLE_dēzl LGV70 BLE_dēzl LGV70</summary>
    public DeviceTrackerEntity BleDezlLgv702 => new(_haContext, "device_tracker.ble_dezl_lgv70_2");
    ///<summary>BLE_dēzl LGV70 BLE_dēzl LGV70</summary>
    public DeviceTrackerEntity BleDezlLgv70BleDezlLgv70 => new(_haContext, "device_tracker.ble_dezl_lgv70_ble_dezl_lgv70");
    ///<summary>BLE_dēzl LGV70 BLE_dēzl LGV70</summary>
    public DeviceTrackerEntity BleDezlLgv70BleDezlLgv702 => new(_haContext, "device_tracker.ble_dezl_lgv70_ble_dezl_lgv70_2");
    ///<summary>BLE_dēzl LGV70 BLE_dēzl LGV70</summary>
    public DeviceTrackerEntity BleDezlLgv70BleDezlLgv703 => new(_haContext, "device_tracker.ble_dezl_lgv70_ble_dezl_lgv70_3");
    ///<summary>BLE_Dri BLE_Dri</summary>
    public DeviceTrackerEntity BleDri => new(_haContext, "device_tracker.ble_dri");
    ///<summary>BLE_Gar BLE_Gar</summary>
    public DeviceTrackerEntity BleGar => new(_haContext, "device_tracker.ble_gar");
    ///<summary>BLE_Garmin Driv BLE_Garmin Driv</summary>
    public DeviceTrackerEntity BleGarminDriv => new(_haContext, "device_tracker.ble_garmin_driv");
    ///<summary>BLE_Garmin Driv BLE_Garmin Driv</summary>
    public DeviceTrackerEntity BleGarminDrivBleGarminDriv => new(_haContext, "device_tracker.ble_garmin_driv_ble_garmin_driv");
    ///<summary>BLE_Garmin Driv BLE_Garmin Driv</summary>
    public DeviceTrackerEntity BleGarminDrivBleGarminDriv2 => new(_haContext, "device_tracker.ble_garmin_driv_ble_garmin_driv_2");
    ///<summary>BLE_Garmin Driv BLE_Garmin Driv</summary>
    public DeviceTrackerEntity BleGarminDrivBleGarminDriv3 => new(_haContext, "device_tracker.ble_garmin_driv_ble_garmin_driv_3");
    ///<summary>BLE_Garmin Driv BLE_Garmin Driv</summary>
    public DeviceTrackerEntity BleGarminDrivBleGarminDriv4 => new(_haContext, "device_tracker.ble_garmin_driv_ble_garmin_driv_4");
    ///<summary>BLE_Garmin Driv BLE_Garmin Driv</summary>
    public DeviceTrackerEntity BleGarminDrivBleGarminDriv5 => new(_haContext, "device_tracker.ble_garmin_driv_ble_garmin_driv_5");
    ///<summary>BLE_Garmin Driv BLE_Garmin Driv</summary>
    public DeviceTrackerEntity BleGarminDrivBleGarminDriv6 => new(_haContext, "device_tracker.ble_garmin_driv_ble_garmin_driv_6");
    ///<summary>BLE_Garmin Driv BLE_Garmin Driv</summary>
    public DeviceTrackerEntity BleGarminDrivBleGarminDriv7 => new(_haContext, "device_tracker.ble_garmin_driv_ble_garmin_driv_7");
    ///<summary>BLE_Garmin Driv BLE_Garmin Driv</summary>
    public DeviceTrackerEntity BleGarminDrivBleGarminDriv8 => new(_haContext, "device_tracker.ble_garmin_driv_ble_garmin_driv_8");
    ///<summary>BLE_Garmin Driv BLE_Garmin Driv</summary>
    public DeviceTrackerEntity BleGarminDrivBleGarminDriv9 => new(_haContext, "device_tracker.ble_garmin_driv_ble_garmin_driv_9");
    ///<summary>BLE_Joe`s Nav BLE_Joe`s Nav</summary>
    public DeviceTrackerEntity BleJoeSNavBleJoeSNav => new(_haContext, "device_tracker.ble_joe_s_nav_ble_joe_s_nav");
    ///<summary>BLE_My Garmin BLE_My Garmin</summary>
    public DeviceTrackerEntity BleMyGarminBleMyGarmin => new(_haContext, "device_tracker.ble_my_garmin_ble_my_garmin");
    ///<summary>BLE_Wills Dēzl BLE_Wills Dēzl</summary>
    public DeviceTrackerEntity BleWillsDezlBleWillsDezl => new(_haContext, "device_tracker.ble_wills_dezl_ble_wills_dezl");
    ///<summary>Bottle Design (EA64) LE Bottle Design (EA64) LE</summary>
    public DeviceTrackerEntity BottleDesignEa64LeBottleDesignEa64Le => new(_haContext, "device_tracker.bottle_design_ea64_le_bottle_design_ea64_le");
    ///<summary>Car</summary>
    public DeviceTrackerEntity Car => new(_haContext, "device_tracker.car");
    ///<summary>CB_SmartCam CB_SmartCam</summary>
    public DeviceTrackerEntity CbSmartcam => new(_haContext, "device_tracker.cb_smartcam");
    ///<summary>claireiphone</summary>
    public DeviceTrackerEntity ClairesIphone => new(_haContext, "device_tracker.claires_iphone");
    ///<summary>Claire’s iPhone</summary>
    public DeviceTrackerEntity ClairesIphoneTile => new(_haContext, "device_tracker.claires_iphone_tile");
    ///<summary>Claire&apos;s Keys</summary>
    public DeviceTrackerEntity ClairesKeys => new(_haContext, "device_tracker.claires_keys");
    ///<summary>Craig&apos;s Charg Craig&apos;s Charg</summary>
    public DeviceTrackerEntity CraigSCharg => new(_haContext, "device_tracker.craig_s_charg");
    ///<summary>Drive HD Drive HD</summary>
    public DeviceTrackerEntity DriveHdDriveHd => new(_haContext, "device_tracker.drive_hd_drive_hd");
    ///<summary>DU1:A276 DU1:A276</summary>
    public DeviceTrackerEntity Du1A276 => new(_haContext, "device_tracker.du1_a276");
    ///<summary>DUT:1411 DUT:1411</summary>
    public DeviceTrackerEntity Dut1411Dut1411 => new(_haContext, "device_tracker.dut_1411_dut_1411");
    ///<summary>DUT:A748 DUT:A748</summary>
    public DeviceTrackerEntity DutA748DutA748 => new(_haContext, "device_tracker.dut_a748_dut_a748");
    public DeviceTrackerEntity E20a39f473f54bc4186417d1ad07a962151062235247d4 => new(_haContext, "device_tracker.e20a39f4_73f5_4bc4_1864_17d1ad07a962_15106_22352_47d4");
    public DeviceTrackerEntity E20a39f473f54bc4186417d1ad07a9623810829772C6d1 => new(_haContext, "device_tracker.e20a39f4_73f5_4bc4_1864_17d1ad07a962_38108_29772_c6d1");
    public DeviceTrackerEntity E20a39f473f54bc4186417d1ad07a9623941038168df7 => new(_haContext, "device_tracker.e20a39f4_73f5_4bc4_1864_17d1ad07a962_39410_3816_8df7");
    public DeviceTrackerEntity E20a39f473f54bc4186417d1ad07a9624040050805F0e9 => new(_haContext, "device_tracker.e20a39f4_73f5_4bc4_1864_17d1ad07a962_40400_50805_f0e9");
    public DeviceTrackerEntity E20a39f473f54bc4186417d1ad07a96262393370145f81 => new(_haContext, "device_tracker.e20a39f4_73f5_4bc4_1864_17d1ad07a962_62393_37014_5f81");
    public DeviceTrackerEntity E2c56db5Dffb48d2B060D0f5a71096e000 => new(_haContext, "device_tracker.e2c56db5_dffb_48d2_b060_d0f5a71096e0_0_0");
    ///<summary>EC03_1622 EC03_1622</summary>
    public DeviceTrackerEntity Ec031622Ec031622 => new(_haContext, "device_tracker.ec03_1622_ec03_1622");
    ///<summary>EC03_6450 EC03_6450</summary>
    public DeviceTrackerEntity Ec036450Ec036450 => new(_haContext, "device_tracker.ec03_6450_ec03_6450");
    ///<summary>Echo Input-263 Echo Input-263</summary>
    public DeviceTrackerEntity EchoInput263 => new(_haContext, "device_tracker.echo_input_263");
    ///<summary>Echo Show 8-CX9 Echo Show 8-CX9</summary>
    public DeviceTrackerEntity EchoShow8Cx9 => new(_haContext, "device_tracker.echo_show_8_cx9");
    ///<summary>ELEMNT ROAM DE7900 ELEMNT ROAM DE7900</summary>
    public DeviceTrackerEntity ElemntRoamDe7900ElemntRoamDe7900 => new(_haContext, "device_tracker.elemnt_roam_de7900_elemnt_roam_de7900");
    ///<summary>ELK_BBL4 ELK_BBL4</summary>
    public DeviceTrackerEntity ElkBbl4 => new(_haContext, "device_tracker.elk_bbl4");
    ///<summary>ELK_BBL6 ELK_BBL6</summary>
    public DeviceTrackerEntity ElkBbl6 => new(_haContext, "device_tracker.elk_bbl6");
    ///<summary>ELK_BL 0 ELK_BL 0</summary>
    public DeviceTrackerEntity ElkBl0ElkBl0 => new(_haContext, "device_tracker.elk_bl_0_elk_bl_0");
    ///<summary>ELK_BL 8 ELK_BL 8</summary>
    public DeviceTrackerEntity ElkBl8ElkBl8 => new(_haContext, "device_tracker.elk_bl_8_elk_bl_8");
    ///<summary>EML-L09%11%CloudClone EML-L09%11%CloudClone</summary>
    public DeviceTrackerEntity EmlL0911Cloudclone => new(_haContext, "device_tracker.eml_l09_11_cloudclone");
    ///<summary>EOHY00005CEO EOHY00005CEO</summary>
    public DeviceTrackerEntity Eohy00005ceo => new(_haContext, "device_tracker.eohy00005ceo");
    ///<summary>Epic Air Sport ANC_BLE</summary>
    public DeviceTrackerEntity EpicAirSportAncBle2 => new(_haContext, "device_tracker.epic_air_sport_anc_ble_2");
    ///<summary>F_ACE_21 F_ACE_21</summary>
    public DeviceTrackerEntity FAce21 => new(_haContext, "device_tracker.f_ace_21");
    ///<summary>Fiido_D3Pro Fiido_D3Pro</summary>
    public DeviceTrackerEntity FiidoD3proFiidoD3pro => new(_haContext, "device_tracker.fiido_d3pro_fiido_d3pro");
    ///<summary>Fiido_M1Pro Fiido_M1Pro</summary>
    public DeviceTrackerEntity FiidoM1proFiidoM1pro => new(_haContext, "device_tracker.fiido_m1pro_fiido_m1pro");
    ///<summary>FM_350317173561089_LE FM_350317173561089_LE</summary>
    public DeviceTrackerEntity Fm350317173561089Le => new(_haContext, "device_tracker.fm_350317173561089_le");
    ///<summary>FM252008 FM252008</summary>
    public DeviceTrackerEntity Fm252008Fm252008 => new(_haContext, "device_tracker.fm252008_fm252008");
    ///<summary>FMM230_2344637_LE FMM230_2344637_LE</summary>
    public DeviceTrackerEntity Fmm2302344637LeFmm2302344637Le => new(_haContext, "device_tracker.fmm230_2344637_le_fmm230_2344637_le");
    ///<summary>Galaxy Watch Active (8F60) LE Galaxy Watch Active (8F60) LE</summary>
    public DeviceTrackerEntity GalaxyWatchActive8f60Le => new(_haContext, "device_tracker.galaxy_watch_active_8f60_le");
    ///<summary>Galaxy Watch4 (X2PV) Galaxy Watch4 (X2PV)</summary>
    public DeviceTrackerEntity GalaxyWatch4X2pv => new(_haContext, "device_tracker.galaxy_watch4_x2pv");
    ///<summary>garmin:e0aad30f513d</summary>
    public DeviceTrackerEntity GarminE0aad30f513d => new(_haContext, "device_tracker.garmin_e0aad30f513d");
    ///<summary>garmin:f8b9821aea87</summary>
    public DeviceTrackerEntity GarminF8b9821aea87 => new(_haContext, "device_tracker.garmin_f8b9821aea87");
    ///<summary>garmin:fdf02abee5c6</summary>
    public DeviceTrackerEntity GarminFdf02abee5c6 => new(_haContext, "device_tracker.garmin_fdf02abee5c6");
    ///<summary>gen3 gen3</summary>
    public DeviceTrackerEntity Gen3Gen3 => new(_haContext, "device_tracker.gen3_gen3");
    ///<summary>GH52_LE GH52_LE</summary>
    public DeviceTrackerEntity Gh52LeGh52Le => new(_haContext, "device_tracker.gh52_le_gh52_le");
    ///<summary>GO 3S 3C79KK GO 3S 3C79KK</summary>
    public DeviceTrackerEntity Go3s3c79kkGo3s3c79kk => new(_haContext, "device_tracker.go_3s_3c79kk_go_3s_3c79kk");
    ///<summary>GO 3S 5RCUYT GO 3S 5RCUYT</summary>
    public DeviceTrackerEntity Go3s5rcuytGo3s5rcuyt => new(_haContext, "device_tracker.go_3s_5rcuyt_go_3s_5rcuyt");
    ///<summary>hauser</summary>
    public DeviceTrackerEntity HauserAndy => new(_haContext, "device_tracker.hauser_andy");
    ///<summary>hauser</summary>
    public DeviceTrackerEntity HauserClaire => new(_haContext, "device_tracker.hauser_claire");
    ///<summary>HI_PR_2237001603 HI_PR_2237001603</summary>
    public DeviceTrackerEntity HiPr2237001603HiPr2237001603 => new(_haContext, "device_tracker.hi_pr_2237001603_hi_pr_2237001603");
    ///<summary>HRMPro+:555136 HRMPro+:555136</summary>
    public DeviceTrackerEntity Hrmpro555136Hrmpro555136 => new(_haContext, "device_tracker.hrmpro_555136_hrmpro_555136");
    ///<summary>ID152 ID152</summary>
    public DeviceTrackerEntity Id152Id152 => new(_haContext, "device_tracker.id152_id152");
    ///<summary>ID216 ID216</summary>
    public DeviceTrackerEntity Id216 => new(_haContext, "device_tracker.id216");
    ///<summary>Inspire 2 Inspire 2</summary>
    public DeviceTrackerEntity Inspire2 => new(_haContext, "device_tracker.inspire_2");
    ///<summary>Instinct 2 Solar Instinct 2 Solar</summary>
    public DeviceTrackerEntity Instinct2SolarInstinct2Solar => new(_haContext, "device_tracker.instinct_2_solar_instinct_2_solar");
    ///<summary>Instinct Solar Instinct Solar</summary>
    public DeviceTrackerEntity InstinctSolar => new(_haContext, "device_tracker.instinct_solar");
    ///<summary>Ion 200 RT Ion 200 RT</summary>
    public DeviceTrackerEntity Ion200RtIon200Rt => new(_haContext, "device_tracker.ion_200_rt_ion_200_rt");
    ///<summary>iPad11,6 iPad11,6</summary>
    public DeviceTrackerEntity Ipad116 => new(_haContext, "device_tracker.ipad116");
    ///<summary>iPhone iPhone</summary>
    public DeviceTrackerEntity Iphone => new(_haContext, "device_tracker.iphone");
    ///<summary>iPhone10,4 iPhone10,4</summary>
    public DeviceTrackerEntity Iphone104 => new(_haContext, "device_tracker.iphone104");
    ///<summary>iPhone11,6 iPhone11,6</summary>
    public DeviceTrackerEntity Iphone116 => new(_haContext, "device_tracker.iphone116");
    ///<summary>iPhone12,1 iPhone12,1</summary>
    public DeviceTrackerEntity Iphone121 => new(_haContext, "device_tracker.iphone121");
    ///<summary>iPhone12,8 iPhone12,8</summary>
    public DeviceTrackerEntity Iphone128 => new(_haContext, "device_tracker.iphone128");
    ///<summary>iPhone13,2 iPhone13,2</summary>
    public DeviceTrackerEntity Iphone132 => new(_haContext, "device_tracker.iphone132");
    ///<summary>iPhone13,3 iPhone13,3</summary>
    public DeviceTrackerEntity Iphone133 => new(_haContext, "device_tracker.iphone133");
    ///<summary>iPhone14,2 iPhone14,2</summary>
    public DeviceTrackerEntity Iphone142 => new(_haContext, "device_tracker.iphone142");
    ///<summary>iPhone14,5 iPhone14,5</summary>
    public DeviceTrackerEntity Iphone145 => new(_haContext, "device_tracker.iphone145");
    ///<summary>iPhone14,7 iPhone14,7</summary>
    public DeviceTrackerEntity Iphone147 => new(_haContext, "device_tracker.iphone147");
    ///<summary>iPhone15,2 iPhone15,2</summary>
    public DeviceTrackerEntity Iphone152 => new(_haContext, "device_tracker.iphone152");
    ///<summary>iPhone15,3 iPhone15,3</summary>
    public DeviceTrackerEntity Iphone153 => new(_haContext, "device_tracker.iphone153");
    ///<summary>iPhone9,3 iPhone9,3</summary>
    public DeviceTrackerEntity Iphone93 => new(_haContext, "device_tracker.iphone93");
    ///<summary>Jabra Elite 45h Jabra Elite 45h</summary>
    public DeviceTrackerEntity JabraElite45h => new(_haContext, "device_tracker.jabra_elite_45h");
    ///<summary>Jabra Elite 85h Jabra Elite 85h</summary>
    public DeviceTrackerEntity JabraElite85h => new(_haContext, "device_tracker.jabra_elite_85h");
    ///<summary>Jabra Elite Active Jabra Elite Active</summary>
    public DeviceTrackerEntity JabraEliteActive => new(_haContext, "device_tracker.jabra_elite_active");
    ///<summary>JBL Charge 5 JBL Charge 5</summary>
    public DeviceTrackerEntity JblCharge5JblCharge5 => new(_haContext, "device_tracker.jbl_charge_5_jbl_charge_5");
    ///<summary>JBL Flip 6 JBL Flip 6</summary>
    public DeviceTrackerEntity JblFlip6JblFlip6 => new(_haContext, "device_tracker.jbl_flip_6_jbl_flip_6");
    ///<summary>JBL TUNE6 JBL TUNE6</summary>
    public DeviceTrackerEntity JblTune6 => new(_haContext, "device_tracker.jbl_tune6");
    ///<summary>KANE458S 120222073 KANE458S 120222073</summary>
    public DeviceTrackerEntity Kane458s120222073 => new(_haContext, "device_tracker.kane458s_120222073");
    ///<summary>KeyTag KeyTag</summary>
    public DeviceTrackerEntity Keytag => new(_haContext, "device_tracker.keytag");
    ///<summary>LDL-1406926-B4B1E104 LDL-1406926-B4B1E104</summary>
    public DeviceTrackerEntity Ldl1406926B4b1e104Ldl1406926B4b1e104 => new(_haContext, "device_tracker.ldl_1406926_b4b1e104_ldl_1406926_b4b1e104");
    ///<summary>LDL-1406934-92CDE1C9 LDL-1406934-92CDE1C9</summary>
    public DeviceTrackerEntity Ldl140693492cde1c9Ldl140693492cde1c9 => new(_haContext, "device_tracker.ldl_1406934_92cde1c9_ldl_1406934_92cde1c9");
    ///<summary>LDL-1406934-BAC5E05D LDL-1406934-BAC5E05D</summary>
    public DeviceTrackerEntity Ldl1406934Bac5e05dLdl1406934Bac5e05d => new(_haContext, "device_tracker.ldl_1406934_bac5e05d_ldl_1406934_bac5e05d");
    ///<summary>LDL-1406934-BAC5E290 LDL-1406934-BAC5E290</summary>
    public DeviceTrackerEntity Ldl1406934Bac5e290Ldl1406934Bac5e290 => new(_haContext, "device_tracker.ldl_1406934_bac5e290_ldl_1406934_bac5e290");
    ///<summary>LDL-1406934-BAC5E2A9 LDL-1406934-BAC5E2A9</summary>
    public DeviceTrackerEntity Ldl1406934Bac5e2a9Ldl1406934Bac5e2a9 => new(_haContext, "device_tracker.ldl_1406934_bac5e2a9_ldl_1406934_bac5e2a9");
    ///<summary>LE-Device LE-Device</summary>
    public DeviceTrackerEntity LeDeviceLeDevice => new(_haContext, "device_tracker.le_device_le_device");
    ///<summary>LE_LinkBuds S LE_LinkBuds S</summary>
    public DeviceTrackerEntity LeLinkbudsSLeLinkbudsS => new(_haContext, "device_tracker.le_linkbuds_s_le_linkbuds_s");
    ///<summary>LE-MINOR III LE-MINOR III</summary>
    public DeviceTrackerEntity LeMinorIiiLeMinorIii => new(_haContext, "device_tracker.le_minor_iii_le_minor_iii");
    ///<summary>LE-Neil&apos;s EQ LE-Neil&apos;s EQ</summary>
    public DeviceTrackerEntity LeNeilSEqLeNeilSEq => new(_haContext, "device_tracker.le_neil_s_eq_le_neil_s_eq");
    ///<summary>LE-Philips TAA6606 LE-Philips TAA6606</summary>
    public DeviceTrackerEntity LePhilipsTaa6606LePhilipsTaa6606 => new(_haContext, "device_tracker.le_philips_taa6606_le_philips_taa6606");
    ///<summary>LE_WF-1000XM5 LE_WF-1000XM5</summary>
    public DeviceTrackerEntity LeWf1000xm5 => new(_haContext, "device_tracker.le_wf_1000xm5");
    ///<summary>LE_WH-H910N (h.ear) LE_WH-H910N (h.ear)</summary>
    public DeviceTrackerEntity LeWhH910nHEar => new(_haContext, "device_tracker.le_wh_h910n_h_ear");
    ///<summary>LG-TONE-FP5_LE LG-TONE-FP5_LE</summary>
    public DeviceTrackerEntity LgToneFp5LeLgToneFp5Le => new(_haContext, "device_tracker.lg_tone_fp5_le_lg_tone_fp5_le");
    ///<summary>LG-TONE-FP9_LE LG-TONE-FP9_LE</summary>
    public DeviceTrackerEntity LgToneFp9Le => new(_haContext, "device_tracker.lg_tone_fp9_le");
    ///<summary>LumosHelmet LumosHelmet</summary>
    public DeviceTrackerEntity LumoshelmetLumoshelmet => new(_haContext, "device_tracker.lumoshelmet_lumoshelmet");
    ///<summary>MACH-BASIC MACH-BASIC</summary>
    public DeviceTrackerEntity MachBasicMachBasic => new(_haContext, "device_tracker.mach_basic_mach_basic");
    ///<summary>Macmini9,1 Macmini9,1</summary>
    public DeviceTrackerEntity Macmini91 => new(_haContext, "device_tracker.macmini91");
    ///<summary>Mi Silent Mouse Mi Silent Mouse</summary>
    public DeviceTrackerEntity MiSilentMouse => new(_haContext, "device_tracker.mi_silent_mouse");
    ///<summary>Michael&apos;s Galaxy A41 Michael&apos;s Galaxy A41</summary>
    public DeviceTrackerEntity MichaelSGalaxyA41 => new(_haContext, "device_tracker.michael_s_galaxy_a41");
    ///<summary>MIScooter1398 MIScooter1398</summary>
    public DeviceTrackerEntity Miscooter1398Miscooter1398 => new(_haContext, "device_tracker.miscooter1398_miscooter1398");
    ///<summary>MIScooter2859 MIScooter2859</summary>
    public DeviceTrackerEntity Miscooter2859Miscooter2859 => new(_haContext, "device_tracker.miscooter2859_miscooter2859");
    ///<summary>MOTIF A.N.C. [LE] MOTIF A.N.C. [LE]</summary>
    public DeviceTrackerEntity MotifANCLe => new(_haContext, "device_tracker.motif_a_n_c_le");
    ///<summary>N02RF N02RF</summary>
    public DeviceTrackerEntity N02rf => new(_haContext, "device_tracker.n02rf");
    ///<summary>name:52812ddh</summary>
    public DeviceTrackerEntity Name52812ddh => new(_haContext, "device_tracker.name_52812ddh");
    ///<summary>name:blinghelmet</summary>
    public DeviceTrackerEntity NameBlinghelmet => new(_haContext, "device_tracker.name_blinghelmet");
    ///<summary>name:carback</summary>
    public DeviceTrackerEntity NameCarback => new(_haContext, "device_tracker.name_carback");
    ///<summary>name:ccc3</summary>
    public DeviceTrackerEntity NameCcc3 => new(_haContext, "device_tracker.name_ccc3");
    ///<summary>name:charge-6</summary>
    public DeviceTrackerEntity NameCharge6 => new(_haContext, "device_tracker.name_charge_6");
    ///<summary>name:dell-mouse</summary>
    public DeviceTrackerEntity NameDellMouse => new(_haContext, "device_tracker.name_dell_mouse");
    ///<summary>name:e1aa0000</summary>
    public DeviceTrackerEntity NameE1aa0000 => new(_haContext, "device_tracker.name_e1aa0000");
    ///<summary>name:ec03_6153</summary>
    public DeviceTrackerEntity NameEc036153 => new(_haContext, "device_tracker.name_ec03_6153");
    ///<summary>name:epic-air-sport-anc-ble</summary>
    public DeviceTrackerEntity NameEpicAirSportAncBle => new(_haContext, "device_tracker.name_epic_air_sport_anc_ble");
    ///<summary>name:freelite</summary>
    public DeviceTrackerEntity NameFreelite => new(_haContext, "device_tracker.name_freelite");
    ///<summary>name:gms</summary>
    public DeviceTrackerEntity NameGms => new(_haContext, "device_tracker.name_gms");
    ///<summary>name:jbl-tune-flex-le</summary>
    public DeviceTrackerEntity NameJblTuneFlexLe => new(_haContext, "device_tracker.name_jbl_tune_flex_le");
    ///<summary>name:laird-bl600</summary>
    public DeviceTrackerEntity NameLairdBl600 => new(_haContext, "device_tracker.name_laird_bl600");
    ///<summary>name:ldl-1406934-bac5e272</summary>
    public DeviceTrackerEntity NameLdl1406934Bac5e272 => new(_haContext, "device_tracker.name_ldl_1406934_bac5e272");
    ///<summary>name:le-headset</summary>
    public DeviceTrackerEntity NameLeHeadset => new(_haContext, "device_tracker.name_le_headset");
    ///<summary>name:le-m51</summary>
    public DeviceTrackerEntity NameLeM51 => new(_haContext, "device_tracker.name_le_m51");
    ///<summary>name:le-philips-tah5205</summary>
    public DeviceTrackerEntity NameLePhilipsTah5205 => new(_haContext, "device_tracker.name_le_philips_tah5205");
    ///<summary>name:le_wf-1000xm4</summary>
    public DeviceTrackerEntity NameLeWf1000xm4 => new(_haContext, "device_tracker.name_le_wf_1000xm4");
    ///<summary>name:le_wf-c500</summary>
    public DeviceTrackerEntity NameLeWfC500 => new(_haContext, "device_tracker.name_le_wf_c500");
    ///<summary>name:le_wh-1000xm4</summary>
    public DeviceTrackerEntity NameLeWh1000xm4 => new(_haContext, "device_tracker.name_le_wh_1000xm4");
    ///<summary>name:le_wh-1000xm5</summary>
    public DeviceTrackerEntity NameLeWh1000xm5 => new(_haContext, "device_tracker.name_le_wh_1000xm5");
    ///<summary>name:le_wh-xb910n</summary>
    public DeviceTrackerEntity NameLeWhXb910n => new(_haContext, "device_tracker.name_le_wh_xb910n");
    ///<summary>name:le_wi-c100</summary>
    public DeviceTrackerEntity NameLeWiC100 => new(_haContext, "device_tracker.name_le_wi_c100");
    ///<summary>name:lumosltis</summary>
    public DeviceTrackerEntity NameLumosltis => new(_haContext, "device_tracker.name_lumosltis");
    ///<summary>name:mi</summary>
    public DeviceTrackerEntity NameMi => new(_haContext, "device_tracker.name_mi");
    ///<summary>name:pawfit-hciq7cdf</summary>
    public DeviceTrackerEntity NamePawfitHciq7cdf => new(_haContext, "device_tracker.name_pawfit_hciq7cdf");
    ///<summary>name:rct715</summary>
    public DeviceTrackerEntity NameRct715 => new(_haContext, "device_tracker.name_rct715");
    ///<summary>name:rob-s-jbl-fli</summary>
    public DeviceTrackerEntity NameRobSJblFli => new(_haContext, "device_tracker.name_rob_s_jbl_fli");
    ///<summary>name:se5000-1372399872</summary>
    public DeviceTrackerEntity NameSe50001372399872 => new(_haContext, "device_tracker.name_se5000_1372399872");
    ///<summary>name:se5000-1425876480</summary>
    public DeviceTrackerEntity NameSe50001425876480 => new(_haContext, "device_tracker.name_se5000_1425876480");
    ///<summary>name:se5000-2148346112</summary>
    public DeviceTrackerEntity NameSe50002148346112 => new(_haContext, "device_tracker.name_se5000_2148346112");
    ///<summary>name:sram-123133064</summary>
    public DeviceTrackerEntity NameSram123133064 => new(_haContext, "device_tracker.name_sram_123133064");
    ///<summary>name:wllink-3a41</summary>
    public DeviceTrackerEntity NameWllink3a41 => new(_haContext, "device_tracker.name_wllink_3a41");
    ///<summary>name:wlt_0a802d666e6b</summary>
    public DeviceTrackerEntity NameWlt0a802d666e6b => new(_haContext, "device_tracker.name_wlt_0a802d666e6b");
    ///<summary>name:xp-pp-04e35a</summary>
    public DeviceTrackerEntity NameXpPp04e35a => new(_haContext, "device_tracker.name_xp_pp_04e35a");
    ///<summary>name:ysccu_00000003496274</summary>
    public DeviceTrackerEntity NameYsccu00000003496274 => new(_haContext, "device_tracker.name_ysccu_00000003496274");
    ///<summary>name:ysccu_00000003985158</summary>
    public DeviceTrackerEntity NameYsccu00000003985158 => new(_haContext, "device_tracker.name_ysccu_00000003985158");
    ///<summary>name:yt</summary>
    public DeviceTrackerEntity NameYt => new(_haContext, "device_tracker.name_yt");
    ///<summary>NIU_6261 NIU_6261</summary>
    public DeviceTrackerEntity Niu6261Niu6261 => new(_haContext, "device_tracker.niu_6261_niu_6261");
    ///<summary>OBT15E574 OBT15E574</summary>
    public DeviceTrackerEntity Obt15e574Obt15e574 => new(_haContext, "device_tracker.obt15e574_obt15e574");
    ///<summary>OnePlus Nord2 lg OnePlus Nord2 lg</summary>
    public DeviceTrackerEntity OneplusNord2Lg => new(_haContext, "device_tracker.oneplus_nord2_lg");
    ///<summary>OnePlus OnePlus</summary>
    public DeviceTrackerEntity OneplusOneplus => new(_haContext, "device_tracker.oneplus_oneplus");
    ///<summary>Pixel 6</summary>
    public DeviceTrackerEntity Pixel6 => new(_haContext, "device_tracker.pixel_6");
    ///<summary>Pixel 6</summary>
    public DeviceTrackerEntity Pixel69 => new(_haContext, "device_tracker.pixel_6_9");
    ///<summary>Pixel 6 Tile</summary>
    public DeviceTrackerEntity Pixel6Tile => new(_haContext, "device_tracker.pixel_6_tile");
    ///<summary>Pixel Watch</summary>
    public DeviceTrackerEntity PixelWatch => new(_haContext, "device_tracker.pixel_watch");
    ///<summary>PLTBBFIT6100BLE PLTBBFIT6100BLE</summary>
    public DeviceTrackerEntity Pltbbfit6100ble => new(_haContext, "device_tracker.pltbbfit6100ble");
    ///<summary>Polar H10 C561EF2B Polar H10 C561EF2B</summary>
    public DeviceTrackerEntity PolarH10C561ef2bPolarH10C561ef2b => new(_haContext, "device_tracker.polar_h10_c561ef2b_polar_h10_c561ef2b");
    ///<summary>Polar H10 CEB3602E Polar H10 CEB3602E</summary>
    public DeviceTrackerEntity PolarH10Ceb3602ePolarH10Ceb3602e => new(_haContext, "device_tracker.polar_h10_ceb3602e_polar_h10_ceb3602e");
    ///<summary>R_ACE_42 R_ACE_42</summary>
    public DeviceTrackerEntity RAce42RAce42 => new(_haContext, "device_tracker.r_ace_42_r_ace_42");
    ///<summary>R_ACE_51 R_ACE_51</summary>
    public DeviceTrackerEntity RAce51RAce51 => new(_haContext, "device_tracker.r_ace_51_r_ace_51");
    ///<summary>RED RED</summary>
    public DeviceTrackerEntity RedRed => new(_haContext, "device_tracker.red_red");
    ///<summary>Ring 18 Ring 18</summary>
    public DeviceTrackerEntity Ring18Ring18 => new(_haContext, "device_tracker.ring_18_ring_18");
    ///<summary>RNP-4 RNP-4</summary>
    public DeviceTrackerEntity Rnp4 => new(_haContext, "device_tracker.rnp_4");
    ///<summary>ROLESWHOOP ROLESWHOOP</summary>
    public DeviceTrackerEntity RoleswhoopRoleswhoop => new(_haContext, "device_tracker.roleswhoop_roleswhoop");
    ///<summary>RTL46409 RTL46409</summary>
    public DeviceTrackerEntity Rtl46409Rtl46409 => new(_haContext, "device_tracker.rtl46409_rtl46409");
    ///<summary>RTL62939 RTL62939</summary>
    public DeviceTrackerEntity Rtl62939 => new(_haContext, "device_tracker.rtl62939");
    ///<summary>RTL93666 RTL93666</summary>
    public DeviceTrackerEntity Rtl93666Rtl93666 => new(_haContext, "device_tracker.rtl93666_rtl93666");
    ///<summary>RTL99567 RTL99567</summary>
    public DeviceTrackerEntity Rtl99567Rtl99567 => new(_haContext, "device_tracker.rtl99567_rtl99567");
    public DeviceTrackerEntity S424d3be485e872ccc483c => new(_haContext, "device_tracker.s424d3be485e872ccc_483c");
    public DeviceTrackerEntity S56bd949cabb74974cCa91 => new(_haContext, "device_tracker.s56bd949cabb74974c_ca91");
    ///<summary>SE5000-0638724352 SE5000-0638724352</summary>
    public DeviceTrackerEntity Se50000638724352Se50000638724352 => new(_haContext, "device_tracker.se5000_0638724352_se5000_0638724352");
    ///<summary>SE5000-0844965632 SE5000-0844965632</summary>
    public DeviceTrackerEntity Se50000844965632Se50000844965632 => new(_haContext, "device_tracker.se5000_0844965632_se5000_0844965632");
    ///<summary>SE5000-1054287616 SE5000-1054287616</summary>
    public DeviceTrackerEntity Se50001054287616Se50001054287616 => new(_haContext, "device_tracker.se5000_1054287616_se5000_1054287616");
    ///<summary>SE5000-1294149888 SE5000-1294149888</summary>
    public DeviceTrackerEntity Se50001294149888Se50001294149888 => new(_haContext, "device_tracker.se5000_1294149888_se5000_1294149888");
    ///<summary>SE5000-1489053184 SE5000-1489053184</summary>
    public DeviceTrackerEntity Se50001489053184Se50001489053184 => new(_haContext, "device_tracker.se5000_1489053184_se5000_1489053184");
    ///<summary>SE5000-1514088448 SE5000-1514088448</summary>
    public DeviceTrackerEntity Se50001514088448Se50001514088448 => new(_haContext, "device_tracker.se5000_1514088448_se5000_1514088448");
    ///<summary>SE5000-1842423296 SE5000-1842423296</summary>
    public DeviceTrackerEntity Se50001842423296Se50001842423296 => new(_haContext, "device_tracker.se5000_1842423296_se5000_1842423296");
    ///<summary>SE5000-2029331968 SE5000-2029331968</summary>
    public DeviceTrackerEntity Se50002029331968Se50002029331968 => new(_haContext, "device_tracker.se5000_2029331968_se5000_2029331968");
    ///<summary>SE5000-2270832384 SE5000-2270832384</summary>
    public DeviceTrackerEntity Se50002270832384Se50002270832384 => new(_haContext, "device_tracker.se5000_2270832384_se5000_2270832384");
    ///<summary>SE5000-3097044736 SE5000-3097044736</summary>
    public DeviceTrackerEntity Se50003097044736Se50003097044736 => new(_haContext, "device_tracker.se5000_3097044736_se5000_3097044736");
    ///<summary>SE5000-3254068736 SE5000-3254068736</summary>
    public DeviceTrackerEntity Se50003254068736Se50003254068736 => new(_haContext, "device_tracker.se5000_3254068736_se5000_3254068736");
    ///<summary>SE5000-3519096576 SE5000-3519096576</summary>
    public DeviceTrackerEntity Se50003519096576Se50003519096576 => new(_haContext, "device_tracker.se5000_3519096576_se5000_3519096576");
    ///<summary>SE5000-3771410176 SE5000-3771410176</summary>
    public DeviceTrackerEntity Se50003771410176Se50003771410176 => new(_haContext, "device_tracker.se5000_3771410176_se5000_3771410176");
    ///<summary>SE5000-3941410560 SE5000-3941410560</summary>
    public DeviceTrackerEntity Se50003941410560Se50003941410560 => new(_haContext, "device_tracker.se5000_3941410560_se5000_3941410560");
    ///<summary>SE5000-4192872192 SE5000-4192872192</summary>
    public DeviceTrackerEntity Se50004192872192Se50004192872192 => new(_haContext, "device_tracker.se5000_4192872192_se5000_4192872192");
    ///<summary>Sense Sense</summary>
    public DeviceTrackerEntity Sense => new(_haContext, "device_tracker.sense");
    ///<summary>Series 06 Series 06</summary>
    public DeviceTrackerEntity Series06 => new(_haContext, "device_tracker.series_06");
    public DeviceTrackerEntity Sfd85968e835924d1c6058 => new(_haContext, "device_tracker.sfd85968e835924d1c_6058");
    ///<summary>Car Key</summary>
    public DeviceTrackerEntity SpareKey => new(_haContext, "device_tracker.spare_key");
    ///<summary>SPD-BLE0818319 SPD-BLE0818319</summary>
    public DeviceTrackerEntity SpdBle0818319SpdBle0818319 => new(_haContext, "device_tracker.spd_ble0818319_spd_ble0818319");
    ///<summary>Stryd Stryd</summary>
    public DeviceTrackerEntity StrydStryd => new(_haContext, "device_tracker.stryd_stryd");
    ///<summary>Studio Studio</summary>
    public DeviceTrackerEntity Studio => new(_haContext, "device_tracker.studio");
    ///<summary>T60BT T60BT</summary>
    public DeviceTrackerEntity T60btT60bt => new(_haContext, "device_tracker.t60bt_t60bt");
    ///<summary>The Death Star The Death Star</summary>
    public DeviceTrackerEntity TheDeathStar => new(_haContext, "device_tracker.the_death_star");
    ///<summary>Tile Tile</summary>
    public DeviceTrackerEntity Tile => new(_haContext, "device_tracker.tile");
    ///<summary>TOZO-T10 TOZO-T10</summary>
    public DeviceTrackerEntity TozoT10 => new(_haContext, "device_tracker.tozo_t10");
    ///<summary>TOZO-T6 TOZO-T6</summary>
    public DeviceTrackerEntity TozoT6TozoT6 => new(_haContext, "device_tracker.tozo_t6_tozo_t6");
    ///<summary>TOZO Tonal Dots TOZO Tonal Dots</summary>
    public DeviceTrackerEntity TozoTonalDotsTozoTonalDots => new(_haContext, "device_tracker.tozo_tonal_dots_tozo_tonal_dots");
    ///<summary>Versa 2 Versa 2</summary>
    public DeviceTrackerEntity Versa2 => new(_haContext, "device_tracker.versa_2");
    ///<summary>Versa 3 Versa 3</summary>
    public DeviceTrackerEntity Versa3 => new(_haContext, "device_tracker.versa_3");
    ///<summary>Watch6,1 Watch6,1</summary>
    public DeviceTrackerEntity Watch61 => new(_haContext, "device_tracker.watch61");
    ///<summary>Watch6,14 Watch6,14</summary>
    public DeviceTrackerEntity Watch614 => new(_haContext, "device_tracker.watch614");
    ///<summary>Watch6,18 Watch6,18</summary>
    public DeviceTrackerEntity Watch618 => new(_haContext, "device_tracker.watch618");
    ///<summary>Watch6,6 Watch6,6</summary>
    public DeviceTrackerEntity Watch66 => new(_haContext, "device_tracker.watch66");
    ///<summary>Watch6,7 Watch6,7</summary>
    public DeviceTrackerEntity Watch67 => new(_haContext, "device_tracker.watch67");
    ///<summary>WHOOP 4A0806058 WHOOP 4A0806058</summary>
    public DeviceTrackerEntity Whoop4a0806058Whoop4a0806058 => new(_haContext, "device_tracker.whoop_4a0806058_whoop_4a0806058");
    ///<summary>WHOOP 4C0407694 WHOOP 4C0407694</summary>
    public DeviceTrackerEntity Whoop4c0407694 => new(_haContext, "device_tracker.whoop_4c0407694");
    ///<summary>WHOOP 4C0449700 WHOOP 4C0449700</summary>
    public DeviceTrackerEntity Whoop4c0449700Whoop4c0449700 => new(_haContext, "device_tracker.whoop_4c0449700_whoop_4c0449700");
    ///<summary>WHOOP 4C0735605 WHOOP 4C0735605</summary>
    public DeviceTrackerEntity Whoop4c0735605 => new(_haContext, "device_tracker.whoop_4c0735605");
    ///<summary>WHOOP 4C0869762 WHOOP 4C0869762</summary>
    public DeviceTrackerEntity Whoop4c0869762Whoop4c0869762 => new(_haContext, "device_tracker.whoop_4c0869762_whoop_4c0869762");
    ///<summary>WHOOP 4C1074310 WHOOP 4C1074310</summary>
    public DeviceTrackerEntity Whoop4c1074310Whoop4c1074310 => new(_haContext, "device_tracker.whoop_4c1074310_whoop_4c1074310");
    ///<summary>WHOOP 4C1275131 WHOOP 4C1275131</summary>
    public DeviceTrackerEntity Whoop4c1275131Whoop4c1275131 => new(_haContext, "device_tracker.whoop_4c1275131_whoop_4c1275131");
    ///<summary>WSBC025093546S WSBC025093546S</summary>
    public DeviceTrackerEntity Wsbc025093546sWsbc025093546s => new(_haContext, "device_tracker.wsbc025093546s_wsbc025093546s");
    ///<summary>YCCU_00100310001BBF YCCU_00100310001BBF</summary>
    public DeviceTrackerEntity Yccu00100310001bbfYccu00100310001bbf => new(_haContext, "device_tracker.yccu_00100310001bbf_yccu_00100310001bbf");
    ///<summary>YCCU_001003100025AF YCCU_001003100025AF</summary>
    public DeviceTrackerEntity Yccu001003100025afYccu001003100025af => new(_haContext, "device_tracker.yccu_001003100025af_yccu_001003100025af");
}

public partial class EventEntities
{
    private readonly IHaContext _haContext;
    public EventEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all event entities currently registered (at runtime) in Home Assistant as EventEntity</summary>
    public IEnumerable<EventEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("event.")).Select(e => new EventEntity(e));
    ///<summary>Octoplus Saving Session Events (A-0A727F9B)</summary>
    public EventEntity OctopusEnergyA0a727f9bOctoplusSavingSessionEvents => new(_haContext, "event.octopus_energy_a_0a727f9b_octoplus_saving_session_events");
    ///<summary>Current Day Rates Electricity (22J0181544/1610019557951)</summary>
    public EventEntity OctopusEnergyElectricity22j01815441610019557951CurrentDayRates => new(_haContext, "event.octopus_energy_electricity_22j0181544_1610019557951_current_day_rates");
    ///<summary>Next Day Rates Electricity (22J0181544/1610019557951)</summary>
    public EventEntity OctopusEnergyElectricity22j01815441610019557951NextDayRates => new(_haContext, "event.octopus_energy_electricity_22j0181544_1610019557951_next_day_rates");
    ///<summary>Previous Consumption Override Rates Electricity (22J0181544/1610019557951)</summary>
    public EventEntity OctopusEnergyElectricity22j01815441610019557951PreviousConsumptionOverrideRates => new(_haContext, "event.octopus_energy_electricity_22j0181544_1610019557951_previous_consumption_override_rates");
    ///<summary>Previous Consumption Rates Electricity (22J0181544/1610019557951)</summary>
    public EventEntity OctopusEnergyElectricity22j01815441610019557951PreviousConsumptionRates => new(_haContext, "event.octopus_energy_electricity_22j0181544_1610019557951_previous_consumption_rates");
    ///<summary>Previous Day Rates Electricity (22J0181544/1610019557951)</summary>
    public EventEntity OctopusEnergyElectricity22j01815441610019557951PreviousDayRates => new(_haContext, "event.octopus_energy_electricity_22j0181544_1610019557951_previous_day_rates");
    ///<summary>Current Day Rates Gas (E6E09476682323/1590806503)</summary>
    public EventEntity OctopusEnergyGasE6e094766823231590806503CurrentDayRates => new(_haContext, "event.octopus_energy_gas_e6e09476682323_1590806503_current_day_rates");
    ///<summary>Next Day Rates Gas (E6E09476682323/1590806503)</summary>
    public EventEntity OctopusEnergyGasE6e094766823231590806503NextDayRates => new(_haContext, "event.octopus_energy_gas_e6e09476682323_1590806503_next_day_rates");
    ///<summary>Previous Consumption Override Rates Gas (E6E09476682323/1590806503)</summary>
    public EventEntity OctopusEnergyGasE6e094766823231590806503PreviousConsumptionOverrideRates => new(_haContext, "event.octopus_energy_gas_e6e09476682323_1590806503_previous_consumption_override_rates");
    ///<summary>Previous Consumption Rates Gas (E6E09476682323/1590806503)</summary>
    public EventEntity OctopusEnergyGasE6e094766823231590806503PreviousConsumptionRates => new(_haContext, "event.octopus_energy_gas_e6e09476682323_1590806503_previous_consumption_rates");
    ///<summary>Previous Day Rates Gas (E6E09476682323/1590806503)</summary>
    public EventEntity OctopusEnergyGasE6e094766823231590806503PreviousDayRates => new(_haContext, "event.octopus_energy_gas_e6e09476682323_1590806503_previous_day_rates");
}

public partial class FanEntities
{
    private readonly IHaContext _haContext;
    public FanEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all fan entities currently registered (at runtime) in Home Assistant as FanEntity</summary>
    public IEnumerable<FanEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("fan.")).Select(e => new FanEntity(e));
    ///<summary>Bathroom Fan</summary>
    public FanEntity BathroomFan => new(_haContext, "fan.bathroom_fan");
    ///<summary>Extractor Fan</summary>
    public FanEntity ExtractorFan => new(_haContext, "fan.extractor_fan");
}

public partial class GroupEntities
{
    private readonly IHaContext _haContext;
    public GroupEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all group entities currently registered (at runtime) in Home Assistant as GroupEntity</summary>
    public IEnumerable<GroupEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("group.")).Select(e => new GroupEntity(e));
    ///<summary>Basement</summary>
    public GroupEntity Basement => new(_haContext, "group.basement");
    ///<summary>Basement Hall</summary>
    public GroupEntity BasementHall => new(_haContext, "group.basement_hall");
    ///<summary>Bathroom</summary>
    public GroupEntity Bathroom => new(_haContext, "group.bathroom");
    ///<summary>Bedroom</summary>
    public GroupEntity Bedroom => new(_haContext, "group.bedroom");
    ///<summary>Climate Basement</summary>
    public GroupEntity ClimateBasement => new(_haContext, "group.climate_basement");
    ///<summary>Climate Downstairs</summary>
    public GroupEntity ClimateDownstairs => new(_haContext, "group.climate_downstairs");
    ///<summary>Climate Upstairs</summary>
    public GroupEntity ClimateUpstairs => new(_haContext, "group.climate_upstairs");
    ///<summary>Dining Room</summary>
    public GroupEntity DiningRoom => new(_haContext, "group.dining_room");
    ///<summary>Downstairs</summary>
    public GroupEntity Downstairs => new(_haContext, "group.downstairs");
    ///<summary>Drawing Room</summary>
    public GroupEntity DrawingRoom => new(_haContext, "group.drawing_room");
    ///<summary>Dressing room</summary>
    public GroupEntity DressingRoom => new(_haContext, "group.dressing_room");
    ///<summary>Electric cabinet</summary>
    public GroupEntity ElectricCabinet => new(_haContext, "group.electric_cabinet");
    ///<summary>Doorbell</summary>
    public GroupEntity EspDoorbell => new(_haContext, "group.esp_doorbell");
    ///<summary>Guest Room</summary>
    public GroupEntity GuestBedroom => new(_haContext, "group.guest_bedroom");
    ///<summary>Hallway</summary>
    public GroupEntity Hallway => new(_haContext, "group.hallway");
    ///<summary>Kitchen</summary>
    public GroupEntity Kitchen => new(_haContext, "group.kitchen");
    ///<summary>Landing</summary>
    public GroupEntity Landing => new(_haContext, "group.landing");
    ///<summary>Lounge</summary>
    public GroupEntity Lounge => new(_haContext, "group.lounge");
    ///<summary>Bedroom Echo Show</summary>
    public GroupEntity MediaBedroomEchoShow => new(_haContext, "group.media_bedroom_echo_show");
    ///<summary>Dining Room Echo Input</summary>
    public GroupEntity MediaDiningRoomEchoInput => new(_haContext, "group.media_dining_room_echo_input");
    ///<summary>Drawing Room Echo Dot</summary>
    public GroupEntity MediaDrawingRoomEchoDot => new(_haContext, "group.media_drawing_room_echo_dot");
    ///<summary>Dressing Room Echo Dot</summary>
    public GroupEntity MediaDressingRoomEchoDot => new(_haContext, "group.media_dressing_room_echo_dot");
    ///<summary>Guest Room Echo Show</summary>
    public GroupEntity MediaGuestRoomEchoShow => new(_haContext, "group.media_guest_room_echo_show");
    ///<summary>Hallway Tablet</summary>
    public GroupEntity MediaHallwayTablet => new(_haContext, "group.media_hallway_tablet");
    ///<summary>Kitchen Echo Show</summary>
    public GroupEntity MediaKitchenEchoShow => new(_haContext, "group.media_kitchen_echo_show");
    ///<summary>Landing Tablet</summary>
    public GroupEntity MediaLandingTablet => new(_haContext, "group.media_landing_tablet");
    ///<summary>Lounge Echo Plus</summary>
    public GroupEntity MediaLoungeEchoPlus => new(_haContext, "group.media_lounge_echo_plus");
    ///<summary>Snug Echo Input</summary>
    public GroupEntity MediaSnugEchoInput => new(_haContext, "group.media_snug_echo_input");
    ///<summary>Utility Room Echo Dot</summary>
    public GroupEntity MediaUtilityRoomEchoDot => new(_haContext, "group.media_utility_room_echo_dot");
    ///<summary>Outside</summary>
    public GroupEntity Outside => new(_haContext, "group.outside");
    ///<summary>Patio</summary>
    public GroupEntity Patio => new(_haContext, "group.patio");
    ///<summary>Person Locations</summary>
    public GroupEntity PersonHomeAway => new(_haContext, "group.person_home_away");
    ///<summary>Person Locations</summary>
    public GroupEntity PersonLocations => new(_haContext, "group.person_locations");
    ///<summary>Porch</summary>
    public GroupEntity Porch => new(_haContext, "group.porch");
    ///<summary>Snug</summary>
    public GroupEntity Snug => new(_haContext, "group.snug");
    ///<summary>Studio</summary>
    public GroupEntity Studio => new(_haContext, "group.studio");
    ///<summary>Toilet</summary>
    public GroupEntity Toilet => new(_haContext, "group.toilet");
    ///<summary>Upstairs</summary>
    public GroupEntity Upstairs => new(_haContext, "group.upstairs");
    ///<summary>Utility Room</summary>
    public GroupEntity UtilityRoom => new(_haContext, "group.utility_room");
}

public partial class InputBooleanEntities
{
    private readonly IHaContext _haContext;
    public InputBooleanEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all input_boolean entities currently registered (at runtime) in Home Assistant as InputBooleanEntity</summary>
    public IEnumerable<InputBooleanEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("input_boolean.")).Select(e => new InputBooleanEntity(e));
    ///<summary>Bed State Control Enabled</summary>
    public InputBooleanEntity BedStateControlEnabled => new(_haContext, "input_boolean.bed_state_control_enabled");
    ///<summary>Bedroom Mode Control Enabled</summary>
    public InputBooleanEntity BedroomModeControlEnabled => new(_haContext, "input_boolean.bedroom_mode_control_enabled");
    ///<summary>Brightness Control Enabled</summary>
    public InputBooleanEntity BrightnessControlEnabled => new(_haContext, "input_boolean.brightness_control_enabled");
    ///<summary>In Bed</summary>
    public InputBooleanEntity InBed => new(_haContext, "input_boolean.in_bed");
    ///<summary>in_shower</summary>
    public InputBooleanEntity InShower => new(_haContext, "input_boolean.in_shower");
    ///<summary>Light Control Mode Enabled</summary>
    public InputBooleanEntity LightControlModeEnabled => new(_haContext, "input_boolean.light_control_mode_enabled");
    ///<summary>Location Mode Enabled</summary>
    public InputBooleanEntity LocationModeEnabled => new(_haContext, "input_boolean.location_mode_enabled");
    ///<summary>Lounge Lamp Automation</summary>
    public InputBooleanEntity LoungeLampAutomation => new(_haContext, "input_boolean.lounge_lamp_automation");
    ///<summary>Lounge Light Automation</summary>
    public InputBooleanEntity LoungeLightAutomation => new(_haContext, "input_boolean.lounge_light_automation");
    ///<summary>netdaemon_net_daemon_apps_light_app_lighting</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsLightAppLighting => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_light_app_lighting");
    ///<summary>netdaemon_net_daemon_apps_notifications_manager_battery_notifications</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsNotificationsManagerBatteryNotifications => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_notifications_manager_battery_notifications");
    ///<summary>netdaemon_net_daemon_apps_states_bed_state_controller</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsStatesBedStateController => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_states_bed_state_controller");
    ///<summary>netdaemon_net_daemon_apps_states_bedroom_mode_controller</summary>
    public InputBooleanEntity NetdaemonNetDaemonAppsStatesBedroomModeController => new(_haContext, "input_boolean.netdaemon_net_daemon_apps_states_bedroom_mode_controller");
    ///<summary>Reload Netdaemon</summary>
    public InputBooleanEntity ReloadNetdaemon => new(_haContext, "input_boolean.reload_netdaemon");
    ///<summary>Snug Floor Lamp Constrained</summary>
    public InputBooleanEntity SnugFloorLampConstrained => new(_haContext, "input_boolean.snug_floor_lamp_constrained");
    ///<summary>Snug Light Constrained</summary>
    public InputBooleanEntity SnugLightConstrained => new(_haContext, "input_boolean.snug_light_constrained");
    ///<summary>Test Trigger</summary>
    public InputBooleanEntity TestTrigger => new(_haContext, "input_boolean.test_trigger");
    ///<summary>Time Of Day Enabled</summary>
    public InputBooleanEntity TimeOfDayEnabled => new(_haContext, "input_boolean.time_of_day_enabled");
}

public partial class InputButtonEntities
{
    private readonly IHaContext _haContext;
    public InputButtonEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all input_button entities currently registered (at runtime) in Home Assistant as InputButtonEntity</summary>
    public IEnumerable<InputButtonEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("input_button.")).Select(e => new InputButtonEntity(e));
    ///<summary>Kitchen Appliance Beep</summary>
    public InputButtonEntity KitchenApplianceBeep => new(_haContext, "input_button.kitchen_appliance_beep");
    ///<summary>Smoke Alarm Beep</summary>
    public InputButtonEntity SmokeAlarmBeep => new(_haContext, "input_button.smoke_alarm_beep");
    ///<summary>Utilitiy Appliance Beep</summary>
    public InputButtonEntity UtilitiyApplianceBeep => new(_haContext, "input_button.utilitiy_appliance_beep");
}

public partial class InputDatetimeEntities
{
    private readonly IHaContext _haContext;
    public InputDatetimeEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all input_datetime entities currently registered (at runtime) in Home Assistant as InputDatetimeEntity</summary>
    public IEnumerable<InputDatetimeEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("input_datetime.")).Select(e => new InputDatetimeEntity(e));
    ///<summary>Evening Feed Time</summary>
    public InputDatetimeEntity EveningFeedTime => new(_haContext, "input_datetime.evening_feed_time");
    ///<summary>Morning Feed Time</summary>
    public InputDatetimeEntity MorningFeedTime => new(_haContext, "input_datetime.morning_feed_time");
}

public partial class InputNumberEntities
{
    private readonly IHaContext _haContext;
    public InputNumberEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all input_number entities currently registered (at runtime) in Home Assistant as InputNumberEntity</summary>
    public IEnumerable<InputNumberEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("input_number.")).Select(e => new InputNumberEntity(e));
    ///<summary>Brightness Bright Threshold</summary>
    public InputNumberEntity BrightnessBrightThreshold => new(_haContext, "input_number.brightness_bright_threshold");
    ///<summary>Brightness Dark Threshold</summary>
    public InputNumberEntity BrightnessDarkThreshold => new(_haContext, "input_number.brightness_dark_threshold");
    ///<summary>Dim Lux</summary>
    public InputNumberEntity DimLux => new(_haContext, "input_number.dim_lux");
    ///<summary>Guest Room Lux</summary>
    public InputNumberEntity GuestRoomLux => new(_haContext, "input_number.guest_room_lux");
    ///<summary>Lounge Lux</summary>
    public InputNumberEntity LoungeLux => new(_haContext, "input_number.lounge_lux");
    ///<summary>Snug Lux</summary>
    public InputNumberEntity SnugLux => new(_haContext, "input_number.snug_lux");
}

public partial class InputSelectEntities
{
    private readonly IHaContext _haContext;
    public InputSelectEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all input_select entities currently registered (at runtime) in Home Assistant as InputSelectEntity</summary>
    public IEnumerable<InputSelectEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("input_select.")).Select(e => new InputSelectEntity(e));
    ///<summary>Bathroom Mode</summary>
    public InputSelectEntity BathroomMode => new(_haContext, "input_select.bathroom_mode");
    ///<summary>Bedroom Mode</summary>
    public InputSelectEntity BedroomMode => new(_haContext, "input_select.bedroom_mode");
    ///<summary>Brightness</summary>
    public InputSelectEntity Brightness => new(_haContext, "input_select.brightness");
    ///<summary>Light Control Mode</summary>
    public InputSelectEntity LightControlMode => new(_haContext, "input_select.light_control_mode");
    ///<summary>Location Mode</summary>
    public InputSelectEntity LocationMode => new(_haContext, "input_select.location_mode");
    ///<summary>Lounge Mode</summary>
    public InputSelectEntity LoungeMode => new(_haContext, "input_select.lounge_mode");
    ///<summary>Snug Mode</summary>
    public InputSelectEntity SnugMode => new(_haContext, "input_select.snug_mode");
    ///<summary>Time Of Day</summary>
    public InputSelectEntity TimeOfDay => new(_haContext, "input_select.time_of_day");
}

public partial class InputTextEntities
{
    private readonly IHaContext _haContext;
    public InputTextEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all input_text entities currently registered (at runtime) in Home Assistant as InputTextEntity</summary>
    public IEnumerable<InputTextEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("input_text.")).Select(e => new InputTextEntity(e));
    ///<summary>Alexa Actionable Notification Holder</summary>
    public InputTextEntity AlexaActionableNotification => new(_haContext, "input_text.alexa_actionable_notification");
    ///<summary>Bedside Remote Last State</summary>
    public InputTextEntity BedsideRemoteLastState => new(_haContext, "input_text.bedside_remote_last_state");
    ///<summary>Guest Room Remote Last State</summary>
    public InputTextEntity GuestRoomRemoteLastState => new(_haContext, "input_text.guest_room_remote_last_state");
    ///<summary>Kitchen Switch State</summary>
    public InputTextEntity KitchenSwitchState => new(_haContext, "input_text.kitchen_switch_state");
    ///<summary>Lounge Remote Last State</summary>
    public InputTextEntity LoungeRemoteLastState => new(_haContext, "input_text.lounge_remote_last_state");
}

public partial class NumberEntities
{
    private readonly IHaContext _haContext;
    public NumberEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all number entities currently registered (at runtime) in Home Assistant as NumberEntity</summary>
    public IEnumerable<NumberEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("number.")).Select(e => new NumberEntity(e));
    ///<summary>ESPresense Bedroom ESPresense Bedroom Absorption</summary>
    public NumberEntity EspresenseBedroomAbsorption => new(_haContext, "number.espresense_bedroom_absorption");
    ///<summary>ESPresense Bedroom ESPresense Bedroom Max Distance</summary>
    public NumberEntity EspresenseBedroomMaxDistance => new(_haContext, "number.espresense_bedroom_max_distance");
    ///<summary>ESPresense DrawingRoom ESPresense DrawingRoom Max Distance</summary>
    public NumberEntity EspresenseDrawingroomMaxDistance => new(_haContext, "number.espresense_drawingroom_max_distance");
    ///<summary>ESPresense Kitchen Absorption</summary>
    public NumberEntity EspresenseKitchenAbsorption => new(_haContext, "number.espresense_kitchen_absorption");
    ///<summary>ESPresense Kitchen Max Distance</summary>
    public NumberEntity EspresenseKitchenMaxDistance => new(_haContext, "number.espresense_kitchen_max_distance");
    ///<summary>ESPresense Lounge ESPresense Lounge Absorption</summary>
    public NumberEntity EspresenseLoungeAbsorption => new(_haContext, "number.espresense_lounge_absorption");
    ///<summary>ESPresense Lounge ESPresense Lounge Max Distance</summary>
    public NumberEntity EspresenseLoungeMaxDistance => new(_haContext, "number.espresense_lounge_max_distance");
    ///<summary>ESPresense Snug ESPresense Snug Absorption</summary>
    public NumberEntity EspresenseSnugAbsorption => new(_haContext, "number.espresense_snug_absorption");
    ///<summary>ESPresense Snug ESPresense Snug Max Distance</summary>
    public NumberEntity EspresenseSnugMaxDistance => new(_haContext, "number.espresense_snug_max_distance");
    ///<summary>studio-bluetooth-proxy ESPresense Studio Max Distance</summary>
    public NumberEntity EspresenseStudioMaxDistance => new(_haContext, "number.espresense_studio_max_distance");
    ///<summary>Hallway Tablet Screen brightness</summary>
    public NumberEntity HallwayTabletScreenBrightness => new(_haContext, "number.hallway_tablet_screen_brightness");
    ///<summary>Hallway Tablet Screen off timer</summary>
    public NumberEntity HallwayTabletScreenOffTimer => new(_haContext, "number.hallway_tablet_screen_off_timer");
    ///<summary>Hallway Tablet Screensaver brightness</summary>
    public NumberEntity HallwayTabletScreensaverBrightness => new(_haContext, "number.hallway_tablet_screensaver_brightness");
    ///<summary>Hallway Tablet Screensaver timer</summary>
    public NumberEntity HallwayTabletScreensaverTimer => new(_haContext, "number.hallway_tablet_screensaver_timer");
    ///<summary>nspanel Display Brightness</summary>
    public NumberEntity NspanelDisplayBrightness => new(_haContext, "number.nspanel_display_brightness");
    ///<summary>nspanel Display Brightness Dimdown</summary>
    public NumberEntity NspanelDisplayBrightnessDimdown => new(_haContext, "number.nspanel_display_brightness_dimdown");
    ///<summary>nspanel Page Timeout</summary>
    public NumberEntity NspanelPageTimeout => new(_haContext, "number.nspanel_page_timeout");
    ///<summary>nspanel Temperature Correction</summary>
    public NumberEntity NspanelTemperatureCorrection => new(_haContext, "number.nspanel_temperature_correction");
    ///<summary>Cat Feeder Feed</summary>
    public NumberEntity RojecoPetFeederFeed => new(_haContext, "number.rojeco_pet_feeder_feed");
    ///<summary>Snug Led Strip Length</summary>
    public NumberEntity SnugLedStripLength => new(_haContext, "number.snug_led_strip_length");
    ///<summary>Snug Led Strip Max brightness</summary>
    public NumberEntity SnugLedStripMaxBrightness => new(_haContext, "number.snug_led_strip_max_brightness");
    ///<summary>Snug Led Strip Min brightness</summary>
    public NumberEntity SnugLedStripMinBrightness => new(_haContext, "number.snug_led_strip_min_brightness");
    ///<summary>Snug Led Strip Preset</summary>
    public NumberEntity SnugLedStripPreset => new(_haContext, "number.snug_led_strip_preset");
    ///<summary>Snug Led Strip Speed</summary>
    public NumberEntity SnugLedStripSpeed => new(_haContext, "number.snug_led_strip_speed");
    ///<summary>studio-bluetooth-proxy ESPresense Studio Absorption</summary>
    public NumberEntity StudioBluetoothProxyAbsorption => new(_haContext, "number.studio_bluetooth_proxy_absorption");
}

public partial class PersonEntities
{
    private readonly IHaContext _haContext;
    public PersonEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all person entities currently registered (at runtime) in Home Assistant as PersonEntity</summary>
    public IEnumerable<PersonEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("person.")).Select(e => new PersonEntity(e));
    ///<summary>Andy</summary>
    public PersonEntity Andy => new(_haContext, "person.andy");
    ///<summary>Car</summary>
    public PersonEntity Car => new(_haContext, "person.car");
    ///<summary>Claire</summary>
    public PersonEntity Claire => new(_haContext, "person.claire");
}

public partial class ProximityEntities
{
    private readonly IHaContext _haContext;
    public ProximityEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all proximity entities currently registered (at runtime) in Home Assistant as ProximityEntity</summary>
    public IEnumerable<ProximityEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("proximity.")).Select(e => new ProximityEntity(e));
    ///<summary>home</summary>
    public ProximityEntity Home => new(_haContext, "proximity.home");
}

public partial class RemoteEntities
{
    private readonly IHaContext _haContext;
    public RemoteEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all remote entities currently registered (at runtime) in Home Assistant as RemoteEntity</summary>
    public IEnumerable<RemoteEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("remote.")).Select(e => new RemoteEntity(e));
    ///<summary>Projector</summary>
    public RemoteEntity SnugProjector => new(_haContext, "remote.snug_projector");
}

public partial class SceneEntities
{
    private readonly IHaContext _haContext;
    public SceneEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all scene entities currently registered (at runtime) in Home Assistant as SceneEntity</summary>
    public IEnumerable<SceneEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("scene.")).Select(e => new SceneEntity(e));
    ///<summary>Awake</summary>
    public SceneEntity Awake => new(_haContext, "scene.awake");
    ///<summary>Bathroom Normal</summary>
    public SceneEntity BathroomNormal => new(_haContext, "scene.bathroom_normal");
    ///<summary>Cleaning</summary>
    public SceneEntity Cleaning => new(_haContext, "scene.cleaning");
    ///<summary>Feed the cats</summary>
    public SceneEntity FeedTheCats => new(_haContext, "scene.feed_the_cats");
    ///<summary>Get Ready For Bed</summary>
    public SceneEntity GetReadyForBed => new(_haContext, "scene.get_ready_for_bed");
    ///<summary>Get Up</summary>
    public SceneEntity GetUp => new(_haContext, "scene.get_up");
    ///<summary>Lighting Ambient</summary>
    public SceneEntity LightingAmbient => new(_haContext, "scene.lighting_ambient");
    ///<summary>Lighting Automatic</summary>
    public SceneEntity LightingAutomatic => new(_haContext, "scene.lighting_automatic");
    ///<summary>Lighting Bright</summary>
    public SceneEntity LightingBright => new(_haContext, "scene.lighting_bright");
    ///<summary>Lighting Day</summary>
    public SceneEntity LightingDay => new(_haContext, "scene.lighting_day");
    ///<summary>Lighting Evening</summary>
    public SceneEntity LightingEvening => new(_haContext, "scene.lighting_evening");
    ///<summary>Lighting Manual</summary>
    public SceneEntity LightingManual => new(_haContext, "scene.lighting_manual");
    ///<summary>Lighting Night</summary>
    public SceneEntity LightingNight => new(_haContext, "scene.lighting_night");
    ///<summary>Lights Up</summary>
    public SceneEntity LightsUp => new(_haContext, "scene.lights_up");
    ///<summary>Lounge Normal</summary>
    public SceneEntity LoungeNormal => new(_haContext, "scene.lounge_normal");
    ///<summary>Pre Movie</summary>
    public SceneEntity PreMovie => new(_haContext, "scene.pre_movie");
    ///<summary>Showering</summary>
    public SceneEntity Showering => new(_haContext, "scene.showering");
    ///<summary>Sleeping</summary>
    public SceneEntity Sleeping => new(_haContext, "scene.sleeping");
    ///<summary>Waking</summary>
    public SceneEntity Waking => new(_haContext, "scene.waking");
    ///<summary>Watch Movie</summary>
    public SceneEntity WatchMovie => new(_haContext, "scene.watch_movie");
    ///<summary>Watch TV</summary>
    public SceneEntity WatchTv => new(_haContext, "scene.watch_tv");
}

public partial class ScriptEntities
{
    private readonly IHaContext _haContext;
    public ScriptEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all script entities currently registered (at runtime) in Home Assistant as ScriptEntity</summary>
    public IEnumerable<ScriptEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("script.")).Select(e => new ScriptEntity(e));
    ///<summary>Alarm Triggered</summary>
    public ScriptEntity AlarmTriggered => new(_haContext, "script.alarm_triggered");
    ///<summary>Camera - shed - Snapshot, AI &amp; Notification</summary>
    public ScriptEntity CameraShedSnapshotAiNotification => new(_haContext, "script.camera_shed_snapshot_ai_notification");
    ///<summary>Feed Cats</summary>
    public ScriptEntity FeedCats => new(_haContext, "script.feed_cats");
    ///<summary>activate_alexa_actionable_notification</summary>
    public ScriptEntity NewScript => new(_haContext, "script.new_script");
    ///<summary>Notify Alexa Everywhere</summary>
    public ScriptEntity NotifyAlexaEverywhere => new(_haContext, "script.notify_alexa_everywhere");
    ///<summary>Notify All</summary>
    public ScriptEntity NotifyAll => new(_haContext, "script.notify_all");
    ///<summary>Room Controller Reset</summary>
    public ScriptEntity RoomControllerReset => new(_haContext, "script.room_controller_reset");
    ///<summary>Yeelight Dimmer Down</summary>
    public ScriptEntity YeelightDimmerDown => new(_haContext, "script.yeelight_dimmer_down");
    ///<summary>Yeelight Dimmer Up</summary>
    public ScriptEntity YeelightDimmerUp => new(_haContext, "script.yeelight_dimmer_up");
}

public partial class SelectEntities
{
    private readonly IHaContext _haContext;
    public SelectEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all select entities currently registered (at runtime) in Home Assistant as SelectEntity</summary>
    public IEnumerable<SelectEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("select.")).Select(e => new SelectEntity(e));
    ///<summary>Brewery Temperature Display Units</summary>
    public SelectEntity BreweryTemperatureDisplayUnits => new(_haContext, "select.brewery_temperature_display_units");
    ///<summary>Coffee Machine Power-on behavior</summary>
    public SelectEntity CoffeeMachinePowerOnBehavior2 => new(_haContext, "select.coffee_machine_power_on_behavior_2");
    ///<summary>Display Cabinet Light Power-on behavior</summary>
    public SelectEntity DisplayCabinetLightPowerOnBehavior => new(_haContext, "select.display_cabinet_light_power_on_behavior");
    ///<summary>Guest Room Lamp Power-on behavior</summary>
    public SelectEntity GuestRoomLampPowerOnBehavior => new(_haContext, "select.guest_room_lamp_power_on_behavior");
    ///<summary>Snug Led Strip Audio effect</summary>
    public SelectEntity SnugLedStripAudioEffect => new(_haContext, "select.snug_led_strip_audio_effect");
    ///<summary>Snug Led Strip Audio sensitivity</summary>
    public SelectEntity SnugLedStripAudioSensitivity => new(_haContext, "select.snug_led_strip_audio_sensitivity");
    ///<summary>Snug Led Strip Power on behavior</summary>
    public SelectEntity SnugLedStripPowerOnBehavior => new(_haContext, "select.snug_led_strip_power_on_behavior");
    ///<summary>Zigbee2MQTT Bridge Log level</summary>
    public SelectEntity Zigbee2mqttBridgeLogLevel => new(_haContext, "select.zigbee2mqtt_bridge_log_level");
}

public partial class SensorEntities
{
    private readonly IHaContext _haContext;
    public SensorEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all sensor entities currently registered (at runtime) in Home Assistant as SensorEntity</summary>
    public IEnumerable<SensorEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("sensor.")).Select(e => new SensorEntity(e));
    /// <summary>Enumerates all non-numeric sensor entities currently registered (at runtime) in Home Assistant as SensorEntity</summary>
    public IEnumerable<SensorEntity> EnumerateAllNonNumeric() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("sensor.") && !(e.EntityState?.AttributesJson?.TryGetProperty("unit_of_measurement", out _) ?? false)).Select(e => new SensorEntity(e));
    /// <summary>Enumerates all numeric sensor entities currently registered (at runtime) in Home Assistant as NumericSensorEntity</summary>
    public IEnumerable<NumericSensorEntity> EnumerateAllNumeric() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("sensor.") && (e.EntityState?.AttributesJson?.TryGetProperty("unit_of_measurement", out _) ?? false)).Select(e => new NumericSensorEntity(e));
    ///<summary>Drawing Room Switch Update state</summary>
    public SensorEntity _0x8c6fb9fffe454fdaUpdateState => new(_haContext, "sensor.0x8c6fb9fffe454fda_update_state");
    ///<summary>Bedside Switch Action</summary>
    public SensorEntity _0xf082c0fffe3d9a0fAction => new(_haContext, "sensor.0xf082c0fffe3d9a0f_action");
    ///<summary>Bedside Switch Click</summary>
    public SensorEntity _0xf082c0fffe3d9a0fClick => new(_haContext, "sensor.0xf082c0fffe3d9a0f_click");
    ///<summary>192.168.1.1 Last scan</summary>
    public SensorEntity _19216811LastScan => new(_haContext, "sensor.192_168_1_1_last_scan");
    ///<summary>Andrew&apos;s Echo Buds next Reminder</summary>
    public SensorEntity AndrewSEchoBudsNextReminder => new(_haContext, "sensor.andrew_s_echo_buds_next_reminder");
    ///<summary>Andrew&apos;s Echo Buds next Reminder</summary>
    public SensorEntity AndrewSEchoBudsNextReminder2 => new(_haContext, "sensor.andrew_s_echo_buds_next_reminder_2");
    ///<summary>Andrew&apos;s Echo Buds next Reminder</summary>
    public SensorEntity AndrewSEchoBudsNextReminder3 => new(_haContext, "sensor.andrew_s_echo_buds_next_reminder_3");
    ///<summary>Andrew&apos;s Echo Buds next Reminder</summary>
    public SensorEntity AndrewSEchoBudsNextReminder4 => new(_haContext, "sensor.andrew_s_echo_buds_next_reminder_4");
    ///<summary>Andrew&apos;s Samsung TV 2020-U next Alarm</summary>
    public SensorEntity AndrewSSamsungTv2020UNextAlarm => new(_haContext, "sensor.andrew_s_samsung_tv_2020_u_next_alarm");
    ///<summary>Andrew&apos;s Samsung TV 2020-U next Reminder</summary>
    public SensorEntity AndrewSSamsungTv2020UNextReminder => new(_haContext, "sensor.andrew_s_samsung_tv_2020_u_next_reminder");
    ///<summary>Andrew&apos;s Samsung TV 2020-U next Timer</summary>
    public SensorEntity AndrewSSamsungTv2020UNextTimer => new(_haContext, "sensor.andrew_s_samsung_tv_2020_u_next_timer");
    ///<summary>Andy Breathing disturbances intensity</summary>
    public SensorEntity AndyBreathingDisturbancesIntensity => new(_haContext, "sensor.andy_breathing_disturbances_intensity");
    ///<summary>Andy Class</summary>
    public SensorEntity AndyClass => new(_haContext, "sensor.andy_class");
    ///<summary>Andy Display name</summary>
    public SensorEntity AndyDisplayName => new(_haContext, "sensor.andy_display_name");
    ///<summary>Andy Last workout intensity</summary>
    public SensorEntity AndyLastWorkoutIntensity => new(_haContext, "sensor.andy_last_workout_intensity");
    ///<summary>Andy Last workout type</summary>
    public SensorEntity AndyLastWorkoutType => new(_haContext, "sensor.andy_last_workout_type");
    ///<summary>Andy Level</summary>
    public SensorEntity AndyLevel => new(_haContext, "sensor.andy_level");
    ///<summary>Andy Snoring</summary>
    public SensorEntity AndySnoring => new(_haContext, "sensor.andy_snoring");
    ///<summary>Andy Snoring episode count</summary>
    public SensorEntity AndySnoringEpisodeCount => new(_haContext, "sensor.andy_snoring_episode_count");
    ///<summary>Aura Sensor V2 Battery</summary>
    public SensorEntity AuraSensorV2Battery => new(_haContext, "sensor.aura_sensor_v2_battery");
    ///<summary>Aura Sensor V2 Battery</summary>
    public SensorEntity AuraSensorV2Battery2 => new(_haContext, "sensor.aura_sensor_v2_battery_2");
    ///<summary>Backup State</summary>
    public SensorEntity BackupState => new(_haContext, "sensor.backup_state");
    ///<summary>Basement Hall Camera Infrared mode</summary>
    public SensorEntity BasementHallCameraInfraredMode => new(_haContext, "sensor.basement_hall_camera_infrared_mode");
    ///<summary>Basement Hall Camera Last motion detected</summary>
    public SensorEntity BasementHallCameraLastMotionDetected => new(_haContext, "sensor.basement_hall_camera_last_motion_detected");
    ///<summary>Basement Hall Camera Recording mode</summary>
    public SensorEntity BasementHallCameraRecordingMode => new(_haContext, "sensor.basement_hall_camera_recording_mode");
    ///<summary>Bathroom Switch Action</summary>
    public SensorEntity BathroomSwitchAction => new(_haContext, "sensor.bathroom_switch_action");
    ///<summary>Bedroom Echo Show next Alarm</summary>
    public SensorEntity BedroomEchoShowNextAlarm => new(_haContext, "sensor.bedroom_echo_show_next_alarm");
    ///<summary>Bedroom Echo Show next Reminder</summary>
    public SensorEntity BedroomEchoShowNextReminder => new(_haContext, "sensor.bedroom_echo_show_next_reminder");
    ///<summary>Bedroom Echo Show next Timer</summary>
    public SensorEntity BedroomEchoShowNextTimer => new(_haContext, "sensor.bedroom_echo_show_next_timer");
    ///<summary>Bedroom Switch Action</summary>
    public SensorEntity BedroomSwitchAction => new(_haContext, "sensor.bedroom_switch_action");
    ///<summary>Black bin</summary>
    public SensorEntity BlackBin => new(_haContext, "sensor.black_bin");
    ///<summary>Blue bin</summary>
    public SensorEntity BlueBin => new(_haContext, "sensor.blue_bin");
    ///<summary>Body+ Battery</summary>
    public SensorEntity BodyBattery => new(_haContext, "sensor.body_battery");
    ///<summary>Brother MFC-J5910DW CUPS</summary>
    public SensorEntity BrotherMfcJ5910dwCups => new(_haContext, "sensor.brother_mfc_j5910dw_cups");
    ///<summary>Brown bin</summary>
    public SensorEntity BrownBin => new(_haContext, "sensor.brown_bin");
    ///<summary>claire Breathing disturbances intensity</summary>
    public SensorEntity ClaireBreathingDisturbancesIntensity => new(_haContext, "sensor.claire_breathing_disturbances_intensity");
    ///<summary>claire Last workout intensity</summary>
    public SensorEntity ClaireLastWorkoutIntensity => new(_haContext, "sensor.claire_last_workout_intensity");
    ///<summary>claire Last workout type</summary>
    public SensorEntity ClaireLastWorkoutType => new(_haContext, "sensor.claire_last_workout_type");
    ///<summary>claire Snoring</summary>
    public SensorEntity ClaireSnoring => new(_haContext, "sensor.claire_snoring");
    ///<summary>claire Snoring episode count</summary>
    public SensorEntity ClaireSnoringEpisodeCount => new(_haContext, "sensor.claire_snoring_episode_count");
    ///<summary>claireiphone App Version</summary>
    public SensorEntity ClaireiphoneAppVersion => new(_haContext, "sensor.claireiphone_app_version");
    ///<summary>claireiphone Location permission</summary>
    public SensorEntity ClaireiphoneLocationPermission => new(_haContext, "sensor.claireiphone_location_permission");
    ///<summary>claireiphone SIM 2</summary>
    public SensorEntity ClaireiphoneSim2 => new(_haContext, "sensor.claireiphone_sim_2");
    ///<summary>Claire’s iPhone Activity</summary>
    public SensorEntity ClairesIphoneActivity => new(_haContext, "sensor.claires_iphone_activity");
    ///<summary>Claire’s iPhone Battery State</summary>
    public SensorEntity ClairesIphoneBatteryState => new(_haContext, "sensor.claires_iphone_battery_state");
    ///<summary>Claire’s iPhone BSSID</summary>
    public SensorEntity ClairesIphoneBssid => new(_haContext, "sensor.claires_iphone_bssid");
    ///<summary>Claire’s iPhone Connection Type</summary>
    public SensorEntity ClairesIphoneConnectionType => new(_haContext, "sensor.claires_iphone_connection_type");
    ///<summary>Claire’s iPhone Geocoded Location</summary>
    public SensorEntity ClairesIphoneGeocodedLocation => new(_haContext, "sensor.claires_iphone_geocoded_location");
    ///<summary>Claire’s iPhone Last Update Trigger</summary>
    public SensorEntity ClairesIphoneLastUpdateTrigger => new(_haContext, "sensor.claires_iphone_last_update_trigger");
    ///<summary>Claire’s iPhone SIM 1</summary>
    public SensorEntity ClairesIphoneSim1 => new(_haContext, "sensor.claires_iphone_sim_1");
    ///<summary>Claire’s iPhone SSID</summary>
    public SensorEntity ClairesIphoneSsid => new(_haContext, "sensor.claires_iphone_ssid");
    ///<summary>Dining Room Echo Input next Alarm</summary>
    public SensorEntity DiningRoomEchoInputNextAlarm => new(_haContext, "sensor.dining_room_echo_input_next_alarm");
    ///<summary>Dining Room Echo Input next Reminder</summary>
    public SensorEntity DiningRoomEchoInputNextReminder => new(_haContext, "sensor.dining_room_echo_input_next_reminder");
    ///<summary>Dining Room Echo Input next Timer</summary>
    public SensorEntity DiningRoomEchoInputNextTimer => new(_haContext, "sensor.dining_room_echo_input_next_timer");
    ///<summary>Dining Room Switch Action</summary>
    public SensorEntity DiningRoomSwitchAction => new(_haContext, "sensor.dining_room_switch_action");
    ///<summary>Doorbell Doorbell BSSID</summary>
    public SensorEntity DoorbellBssid => new(_haContext, "sensor.doorbell_bssid");
    ///<summary>Doorbell Doorbell ESPHome Version</summary>
    public SensorEntity DoorbellEsphomeVersion => new(_haContext, "sensor.doorbell_esphome_version");
    ///<summary>Doorbell Doorbell IP</summary>
    public SensorEntity DoorbellIp => new(_haContext, "sensor.doorbell_ip");
    ///<summary>Doorbell Doorbell SSID</summary>
    public SensorEntity DoorbellSsid => new(_haContext, "sensor.doorbell_ssid");
    ///<summary>Drawing Room Echo Dot next Alarm</summary>
    public SensorEntity DrawingRoomEchoDotNextAlarm => new(_haContext, "sensor.drawing_room_echo_dot_next_alarm");
    ///<summary>Drawing Room Echo Dot next Reminder</summary>
    public SensorEntity DrawingRoomEchoDotNextReminder => new(_haContext, "sensor.drawing_room_echo_dot_next_reminder");
    ///<summary>Drawing Room Echo Dot next Timer</summary>
    public SensorEntity DrawingRoomEchoDotNextTimer => new(_haContext, "sensor.drawing_room_echo_dot_next_timer");
    ///<summary>Drawing Room Switch Action</summary>
    public SensorEntity DrawingRoomSwitchAction => new(_haContext, "sensor.drawing_room_switch_action");
    ///<summary>Dressing Room Echo Spot next Alarm</summary>
    public SensorEntity DressingRoomEchoSpotNextAlarm => new(_haContext, "sensor.dressing_room_echo_spot_next_alarm");
    ///<summary>Dressing Room Echo Spot next Reminder</summary>
    public SensorEntity DressingRoomEchoSpotNextReminder => new(_haContext, "sensor.dressing_room_echo_spot_next_reminder");
    ///<summary>Dressing Room Echo Spot next Timer</summary>
    public SensorEntity DressingRoomEchoSpotNextTimer => new(_haContext, "sensor.dressing_room_echo_spot_next_timer");
    ///<summary>Dressing Room Switch Action</summary>
    public SensorEntity DressingRoomSwitchAction => new(_haContext, "sensor.dressing_room_switch_action");
    public SensorEntity EpsonXp950Series => new(_haContext, "sensor.epson_xp_950_series");
    ///<summary>Uptime</summary>
    public SensorEntity EpsonXp950SeriesUptime => new(_haContext, "sensor.epson_xp_950_series_uptime");
    ///<summary>Garden Tap Current device status</summary>
    public SensorEntity GardenTapCurrentDeviceStatus => new(_haContext, "sensor.garden_tap_current_device_status");
    ///<summary>Garden Tap Cyclic quantitative irrigation</summary>
    public SensorEntity GardenTapCyclicQuantitativeIrrigation => new(_haContext, "sensor.garden_tap_cyclic_quantitative_irrigation");
    ///<summary>Garden Tap Cyclic timed irrigation</summary>
    public SensorEntity GardenTapCyclicTimedIrrigation => new(_haContext, "sensor.garden_tap_cyclic_timed_irrigation");
    ///<summary>Green bin</summary>
    public SensorEntity GreenBin => new(_haContext, "sensor.green_bin");
    ///<summary>Guest Room Bedside Switch Action</summary>
    public SensorEntity GuestRoomBedsideSwitchAction => new(_haContext, "sensor.guest_room_bedside_switch_action");
    ///<summary>Guest Room Echo Show next Alarm</summary>
    public SensorEntity GuestRoomEchoShowNextAlarm => new(_haContext, "sensor.guest_room_echo_show_next_alarm");
    ///<summary>Guest Room Echo Show next Reminder</summary>
    public SensorEntity GuestRoomEchoShowNextReminder => new(_haContext, "sensor.guest_room_echo_show_next_reminder");
    ///<summary>Guest Room Echo Show next Timer</summary>
    public SensorEntity GuestRoomEchoShowNextTimer => new(_haContext, "sensor.guest_room_echo_show_next_timer");
    ///<summary>Guest Room Remote Action</summary>
    public SensorEntity GuestRoomRemoteAction => new(_haContext, "sensor.guest_room_remote_action");
    ///<summary>Guest Room Remote Click</summary>
    public SensorEntity GuestRoomRemoteClick => new(_haContext, "sensor.guest_room_remote_click");
    ///<summary>Guest Room Switch Action</summary>
    public SensorEntity GuestRoomSwitchAction => new(_haContext, "sensor.guest_room_switch_action");
    ///<summary>Hall Tablet next Alarm</summary>
    public SensorEntity HallTabletNextAlarm => new(_haContext, "sensor.hall_tablet_next_alarm");
    ///<summary>Hall Tablet next Reminder</summary>
    public SensorEntity HallTabletNextReminder => new(_haContext, "sensor.hall_tablet_next_reminder");
    ///<summary>Hall Tablet next Timer</summary>
    public SensorEntity HallTabletNextTimer => new(_haContext, "sensor.hall_tablet_next_timer");
    ///<summary>Hallway Camera Infrared mode</summary>
    public SensorEntity HallwayCameraInfraredMode => new(_haContext, "sensor.hallway_camera_infrared_mode");
    ///<summary>Hallway Camera Last motion detected</summary>
    public SensorEntity HallwayCameraLastMotionDetected => new(_haContext, "sensor.hallway_camera_last_motion_detected");
    ///<summary>Hallway Camera Recording mode</summary>
    public SensorEntity HallwayCameraRecordingMode => new(_haContext, "sensor.hallway_camera_recording_mode");
    ///<summary>Hallway Tablet Current page</summary>
    public SensorEntity HallwayTabletCurrentPage => new(_haContext, "sensor.hallway_tablet_current_page");
    ///<summary>Hallway Tablet Foreground app</summary>
    public SensorEntity HallwayTabletForegroundApp => new(_haContext, "sensor.hallway_tablet_foreground_app");
    ///<summary>Hallway Tablet Screen orientation</summary>
    public SensorEntity HallwayTabletScreenOrientation => new(_haContext, "sensor.hallway_tablet_screen_orientation");
    ///<summary>Home Air quality day 1</summary>
    public SensorEntity HomeAirQualityDay1 => new(_haContext, "sensor.home_air_quality_day_1");
    ///<summary>Home Air quality day 2</summary>
    public SensorEntity HomeAirQualityDay2 => new(_haContext, "sensor.home_air_quality_day_2");
    ///<summary>Home Air quality day 3</summary>
    public SensorEntity HomeAirQualityDay3 => new(_haContext, "sensor.home_air_quality_day_3");
    ///<summary>Home Air quality day 4</summary>
    public SensorEntity HomeAirQualityDay4 => new(_haContext, "sensor.home_air_quality_day_4");
    ///<summary>Home Air quality day 0</summary>
    public SensorEntity HomeAirQualityToday => new(_haContext, "sensor.home_air_quality_today");
    ///<summary>home.andisoft.co.uk</summary>
    public SensorEntity HomeAndisoftCoUk => new(_haContext, "sensor.home_andisoft_co_uk");
    ///<summary>Home Andy Direction of travel</summary>
    public SensorEntity HomeAndyDirectionOfTravel => new(_haContext, "sensor.home_andy_direction_of_travel");
    ///<summary>Home Claire Direction of travel</summary>
    public SensorEntity HomeClaireDirectionOfTravel => new(_haContext, "sensor.home_claire_direction_of_travel");
    ///<summary>Home Condition day 1</summary>
    public SensorEntity HomeConditionDay1 => new(_haContext, "sensor.home_condition_day_1");
    ///<summary>Home Condition day 2</summary>
    public SensorEntity HomeConditionDay2 => new(_haContext, "sensor.home_condition_day_2");
    ///<summary>Home Condition day 3</summary>
    public SensorEntity HomeConditionDay3 => new(_haContext, "sensor.home_condition_day_3");
    ///<summary>Home Condition day 4</summary>
    public SensorEntity HomeConditionDay4 => new(_haContext, "sensor.home_condition_day_4");
    ///<summary>Home Condition night 1</summary>
    public SensorEntity HomeConditionNight1 => new(_haContext, "sensor.home_condition_night_1");
    ///<summary>Home Condition night 2</summary>
    public SensorEntity HomeConditionNight2 => new(_haContext, "sensor.home_condition_night_2");
    ///<summary>Home Condition night 3</summary>
    public SensorEntity HomeConditionNight3 => new(_haContext, "sensor.home_condition_night_3");
    ///<summary>Home Condition night 4</summary>
    public SensorEntity HomeConditionNight4 => new(_haContext, "sensor.home_condition_night_4");
    ///<summary>Home Condition day 0</summary>
    public SensorEntity HomeConditionToday => new(_haContext, "sensor.home_condition_today");
    ///<summary>Home Condition night 0</summary>
    public SensorEntity HomeConditionTonight => new(_haContext, "sensor.home_condition_tonight");
    ///<summary>Home Nearest device</summary>
    public SensorEntity HomeNearestDevice => new(_haContext, "sensor.home_nearest_device");
    ///<summary>Home Nearest direction of travel</summary>
    public SensorEntity HomeNearestDirectionOfTravel => new(_haContext, "sensor.home_nearest_direction_of_travel");
    ///<summary>Home Pressure tendency</summary>
    public SensorEntity HomePressureTendency => new(_haContext, "sensor.home_pressure_tendency");
    ///<summary>homeassistant</summary>
    public SensorEntity Homeassistant => new(_haContext, "sensor.homeassistant");
    ///<summary>Kitchen Air Quality Update state</summary>
    public SensorEntity KitchenAirQualityUpdateState => new(_haContext, "sensor.kitchen_air_quality_update_state");
    ///<summary>Kitchen Air Quality VOC index</summary>
    public SensorEntity KitchenAirQualityVocIndex => new(_haContext, "sensor.kitchen_air_quality_voc_index");
    ///<summary>Kitchen Camera Infrared mode</summary>
    public SensorEntity KitchenCameraInfraredMode => new(_haContext, "sensor.kitchen_camera_infrared_mode");
    ///<summary>Kitchen Camera Last motion detected</summary>
    public SensorEntity KitchenCameraLastMotionDetected => new(_haContext, "sensor.kitchen_camera_last_motion_detected");
    ///<summary>Kitchen Camera Recording mode</summary>
    public SensorEntity KitchenCameraRecordingMode => new(_haContext, "sensor.kitchen_camera_recording_mode");
    ///<summary>Kitchen Echo Show next Alarm</summary>
    public SensorEntity KitchenEchoShowNextAlarm => new(_haContext, "sensor.kitchen_echo_show_next_alarm");
    ///<summary>Kitchen Echo Show next Reminder</summary>
    public SensorEntity KitchenEchoShowNextReminder => new(_haContext, "sensor.kitchen_echo_show_next_reminder");
    ///<summary>Kitchen Echo Show next Timer</summary>
    public SensorEntity KitchenEchoShowNextTimer => new(_haContext, "sensor.kitchen_echo_show_next_timer");
    ///<summary>Kitchen Switch Action</summary>
    public SensorEntity KitchenSwitchAction => new(_haContext, "sensor.kitchen_switch_action");
    ///<summary>Landing Tablet next Alarm</summary>
    public SensorEntity LandingTabletNextAlarm => new(_haContext, "sensor.landing_tablet_next_alarm");
    ///<summary>Landing Tablet next Reminder</summary>
    public SensorEntity LandingTabletNextReminder => new(_haContext, "sensor.landing_tablet_next_reminder");
    ///<summary>Landing Tablet next Timer</summary>
    public SensorEntity LandingTabletNextTimer => new(_haContext, "sensor.landing_tablet_next_timer");
    ///<summary>Left Bedside Switch Action</summary>
    public SensorEntity LeftBedsideSwitchAction => new(_haContext, "sensor.left_bedside_switch_action");
    ///<summary>local_ip</summary>
    public SensorEntity LocalIp => new(_haContext, "sensor.local_ip");
    ///<summary>Lounge Echo Plus next Alarm</summary>
    public SensorEntity LoungeEchoPlusNextAlarm => new(_haContext, "sensor.lounge_echo_plus_next_alarm");
    ///<summary>Lounge Echo Plus next Reminder</summary>
    public SensorEntity LoungeEchoPlusNextReminder => new(_haContext, "sensor.lounge_echo_plus_next_reminder");
    ///<summary>Lounge Echo Plus next Timer</summary>
    public SensorEntity LoungeEchoPlusNextTimer => new(_haContext, "sensor.lounge_echo_plus_next_timer");
    ///<summary>Lounge Fire TV next Alarm</summary>
    public SensorEntity LoungeFireTvNextAlarm => new(_haContext, "sensor.lounge_fire_tv_next_alarm");
    ///<summary>Lounge Fire TV next Reminder</summary>
    public SensorEntity LoungeFireTvNextReminder => new(_haContext, "sensor.lounge_fire_tv_next_reminder");
    ///<summary>Lounge Fire TV next Timer</summary>
    public SensorEntity LoungeFireTvNextTimer => new(_haContext, "sensor.lounge_fire_tv_next_timer");
    ///<summary>Lounge Sofa Switch Action</summary>
    public SensorEntity LoungeSofaSwitchAction => new(_haContext, "sensor.lounge_sofa_switch_action");
    ///<summary>Lounge Switch Action</summary>
    public SensorEntity LoungeSwitchAction => new(_haContext, "sensor.lounge_switch_action");
    ///<summary>Lounge TV Media Input Source</summary>
    public SensorEntity LoungeTvMediaInputSource => new(_haContext, "sensor.lounge_tv_media_input_source");
    ///<summary>Lounge TV Media Playback Status</summary>
    public SensorEntity LoungeTvMediaPlaybackStatus => new(_haContext, "sensor.lounge_tv_media_playback_status");
    ///<summary>Lounge TV Tv Channel</summary>
    public SensorEntity LoungeTvTvChannel => new(_haContext, "sensor.lounge_tv_tv_channel");
    ///<summary>Lounge TV Tv Channel Name</summary>
    public SensorEntity LoungeTvTvChannelName => new(_haContext, "sensor.lounge_tv_tv_channel_name");
    ///<summary>Status</summary>
    public SensorEntity MfcJ5910dwStatus => new(_haContext, "sensor.mfc_j5910dw_status");
    ///<summary>Last restart</summary>
    public SensorEntity MfcJ5910dwUptime => new(_haContext, "sensor.mfc_j5910dw_uptime");
    ///<summary>myip</summary>
    public SensorEntity Myip => new(_haContext, "sensor.myip");
    ///<summary>nspanel currentpage</summary>
    public SensorEntity NspanelCurrentpage => new(_haContext, "sensor.nspanel_currentpage");
    ///<summary>nspanel Display Target Temperature</summary>
    public SensorEntity NspanelDisplayTargetTemperature => new(_haContext, "sensor.nspanel_display_target_temperature");
    ///<summary>nspanel IP</summary>
    public SensorEntity NspanelIp => new(_haContext, "sensor.nspanel_ip");
    ///<summary>nspanel Last Click</summary>
    public SensorEntity NspanelLastClick => new(_haContext, "sensor.nspanel_last_click");
    ///<summary>nspanel last click climatesettings</summary>
    public SensorEntity NspanelLastClickClimatesettings => new(_haContext, "sensor.nspanel_last_click_climatesettings");
    ///<summary>nspanel last click coversettings</summary>
    public SensorEntity NspanelLastClickCoversettings => new(_haContext, "sensor.nspanel_last_click_coversettings");
    ///<summary>nspanel last click lightsettings</summary>
    public SensorEntity NspanelLastClickLightsettings => new(_haContext, "sensor.nspanel_last_click_lightsettings");
    ///<summary>nspanel Notification Label</summary>
    public SensorEntity NspanelNotificationLabel => new(_haContext, "sensor.nspanel_notification_label");
    ///<summary>nspanel Notification Text</summary>
    public SensorEntity NspanelNotificationText => new(_haContext, "sensor.nspanel_notification_text");
    ///<summary>nspanel Settings Entity</summary>
    public SensorEntity NspanelSettingsEntity => new(_haContext, "sensor.nspanel_settings_entity");
    ///<summary>Octoplus Points (A-0A727F9B)</summary>
    public SensorEntity OctopusEnergyA0a727f9bOctoplusPoints => new(_haContext, "sensor.octopus_energy_a_0a727f9b_octoplus_points");
    ///<summary>Wheel Of Fortune Spins Electricity (A-0A727F9B)</summary>
    public SensorEntity OctopusEnergyA0a727f9bWheelOfFortuneSpinsElectricity => new(_haContext, "sensor.octopus_energy_a_0a727f9b_wheel_of_fortune_spins_electricity");
    ///<summary>Wheel Of Fortune Spins Gas (A-0A727F9B)</summary>
    public SensorEntity OctopusEnergyA0a727f9bWheelOfFortuneSpinsGas => new(_haContext, "sensor.octopus_energy_a_0a727f9b_wheel_of_fortune_spins_gas");
    ///<summary>Octopus Energy Saving Session Points</summary>
    public SensorEntity OctopusEnergySavingSessionPoints => new(_haContext, "sensor.octopus_energy_saving_session_points");
    ///<summary>Patio Camera Infrared mode</summary>
    public SensorEntity PatioCameraInfraredMode => new(_haContext, "sensor.patio_camera_infrared_mode");
    ///<summary>Patio Camera Last motion detected</summary>
    public SensorEntity PatioCameraLastMotionDetected => new(_haContext, "sensor.patio_camera_last_motion_detected");
    ///<summary>Patio Camera Recording mode</summary>
    public SensorEntity PatioCameraRecordingMode => new(_haContext, "sensor.patio_camera_recording_mode");
    ///<summary>Pixel 6 Audio mode</summary>
    public SensorEntity Pixel6AudioMode2 => new(_haContext, "sensor.pixel_6_audio_mode_2");
    ///<summary>Pixel 6 Battery health</summary>
    public SensorEntity Pixel6BatteryHealth2 => new(_haContext, "sensor.pixel_6_battery_health_2");
    ///<summary>Pixel 6 Battery state</summary>
    public SensorEntity Pixel6BatteryState2 => new(_haContext, "sensor.pixel_6_battery_state_2");
    ///<summary>Pixel 6 Beacon monitor</summary>
    public SensorEntity Pixel6BeaconMonitor2 => new(_haContext, "sensor.pixel_6_beacon_monitor_2");
    ///<summary>Pixel 6 BLE transmitter</summary>
    public SensorEntity Pixel6BleTransmitter2 => new(_haContext, "sensor.pixel_6_ble_transmitter_2");
    ///<summary>Pixel 6 Charger type</summary>
    public SensorEntity Pixel6ChargerType2 => new(_haContext, "sensor.pixel_6_charger_type_2");
    ///<summary>Pixel 6 Detected activity</summary>
    public SensorEntity Pixel6DetectedActivity2 => new(_haContext, "sensor.pixel_6_detected_activity_2");
    ///<summary>Pixel 6 Geocoded location</summary>
    public SensorEntity Pixel6GeocodedLocation2 => new(_haContext, "sensor.pixel_6_geocoded_location_2");
    ///<summary>Pixel 6 Last notification</summary>
    public SensorEntity Pixel6LastNotification2 => new(_haContext, "sensor.pixel_6_last_notification_2");
    ///<summary>Pixel 6 Last removed notification</summary>
    public SensorEntity Pixel6LastRemovedNotification2 => new(_haContext, "sensor.pixel_6_last_removed_notification_2");
    ///<summary>Pixel 6 Network type</summary>
    public SensorEntity Pixel6NetworkType2 => new(_haContext, "sensor.pixel_6_network_type_2");
    ///<summary>Pixel 6 OS version</summary>
    public SensorEntity Pixel6OsVersion2 => new(_haContext, "sensor.pixel_6_os_version_2");
    ///<summary>Pixel 6 Phone state</summary>
    public SensorEntity Pixel6PhoneState2 => new(_haContext, "sensor.pixel_6_phone_state_2");
    ///<summary>Pixel 6 Proximity sensor</summary>
    public SensorEntity Pixel6ProximitySensor2 => new(_haContext, "sensor.pixel_6_proximity_sensor_2");
    ///<summary>Pixel 6 Public IP address</summary>
    public SensorEntity Pixel6PublicIpAddress2 => new(_haContext, "sensor.pixel_6_public_ip_address_2");
    ///<summary>Pixel 6 Ringer mode</summary>
    public SensorEntity Pixel6RingerMode2 => new(_haContext, "sensor.pixel_6_ringer_mode_2");
    ///<summary>Pixel 6 Security patch</summary>
    public SensorEntity Pixel6SecurityPatch2 => new(_haContext, "sensor.pixel_6_security_patch_2");
    ///<summary>Pixel 6 Volume level alarm</summary>
    public SensorEntity Pixel6VolumeLevelAlarm2 => new(_haContext, "sensor.pixel_6_volume_level_alarm_2");
    ///<summary>Pixel 6 Volume level call</summary>
    public SensorEntity Pixel6VolumeLevelCall2 => new(_haContext, "sensor.pixel_6_volume_level_call_2");
    ///<summary>Pixel 6 Volume level DTMF</summary>
    public SensorEntity Pixel6VolumeLevelDtmf2 => new(_haContext, "sensor.pixel_6_volume_level_dtmf_2");
    ///<summary>Pixel 6 Volume level music</summary>
    public SensorEntity Pixel6VolumeLevelMusic2 => new(_haContext, "sensor.pixel_6_volume_level_music_2");
    ///<summary>Pixel 6 Volume level notification</summary>
    public SensorEntity Pixel6VolumeLevelNotification2 => new(_haContext, "sensor.pixel_6_volume_level_notification_2");
    ///<summary>Pixel 6 Volume level ringer</summary>
    public SensorEntity Pixel6VolumeLevelRinger2 => new(_haContext, "sensor.pixel_6_volume_level_ringer_2");
    ///<summary>Pixel 6 Volume level system</summary>
    public SensorEntity Pixel6VolumeLevelSystem2 => new(_haContext, "sensor.pixel_6_volume_level_system_2");
    ///<summary>Pixel 6 WiFi connection</summary>
    public SensorEntity Pixel6WifiConnection2 => new(_haContext, "sensor.pixel_6_wifi_connection_2");
    ///<summary>Pixel Watch Activity state</summary>
    public SensorEntity PixelWatchActivityState => new(_haContext, "sensor.pixel_watch_activity_state");
    ///<summary>Pixel Watch Audio mode</summary>
    public SensorEntity PixelWatchAudioMode => new(_haContext, "sensor.pixel_watch_audio_mode");
    ///<summary>Pixel Watch Battery health</summary>
    public SensorEntity PixelWatchBatteryHealth => new(_haContext, "sensor.pixel_watch_battery_health");
    ///<summary>Pixel Watch Battery state</summary>
    public SensorEntity PixelWatchBatteryState => new(_haContext, "sensor.pixel_watch_battery_state");
    ///<summary>Pixel Watch Charger type</summary>
    public SensorEntity PixelWatchChargerType => new(_haContext, "sensor.pixel_watch_charger_type");
    ///<summary>Pixel Watch Network type</summary>
    public SensorEntity PixelWatchNetworkType => new(_haContext, "sensor.pixel_watch_network_type");
    ///<summary>Pixel Watch Ringer mode</summary>
    public SensorEntity PixelWatchRingerMode => new(_haContext, "sensor.pixel_watch_ringer_mode");
    ///<summary>Pixel Watch Volume level accessibility</summary>
    public SensorEntity PixelWatchVolumeLevelAccessibility => new(_haContext, "sensor.pixel_watch_volume_level_accessibility");
    ///<summary>Pixel Watch Volume level alarm</summary>
    public SensorEntity PixelWatchVolumeLevelAlarm => new(_haContext, "sensor.pixel_watch_volume_level_alarm");
    ///<summary>Pixel Watch Volume level call</summary>
    public SensorEntity PixelWatchVolumeLevelCall => new(_haContext, "sensor.pixel_watch_volume_level_call");
    ///<summary>Pixel Watch Volume level DTMF</summary>
    public SensorEntity PixelWatchVolumeLevelDtmf => new(_haContext, "sensor.pixel_watch_volume_level_dtmf");
    ///<summary>Pixel Watch Volume level music</summary>
    public SensorEntity PixelWatchVolumeLevelMusic => new(_haContext, "sensor.pixel_watch_volume_level_music");
    ///<summary>Pixel Watch Volume level notification</summary>
    public SensorEntity PixelWatchVolumeLevelNotification => new(_haContext, "sensor.pixel_watch_volume_level_notification");
    ///<summary>Pixel Watch Volume level ringer</summary>
    public SensorEntity PixelWatchVolumeLevelRinger => new(_haContext, "sensor.pixel_watch_volume_level_ringer");
    ///<summary>Pixel Watch Volume level system</summary>
    public SensorEntity PixelWatchVolumeLevelSystem => new(_haContext, "sensor.pixel_watch_volume_level_system");
    ///<summary>Pixel Watch WiFi connection</summary>
    public SensorEntity PixelWatchWifiConnection => new(_haContext, "sensor.pixel_watch_wifi_connection");
    ///<summary>Pixel Watch WiFi IP address</summary>
    public SensorEntity PixelWatchWifiIpAddress => new(_haContext, "sensor.pixel_watch_wifi_ip_address");
    ///<summary>Right Bedside Switch Action</summary>
    public SensorEntity RightBedsideSwitchAction => new(_haContext, "sensor.right_bedside_switch_action");
    ///<summary>Shed Camera Infrared mode</summary>
    public SensorEntity ShedCameraInfraredMode => new(_haContext, "sensor.shed_camera_infrared_mode");
    ///<summary>Shed Camera Last motion detected</summary>
    public SensorEntity ShedCameraLastMotionDetected => new(_haContext, "sensor.shed_camera_last_motion_detected");
    ///<summary>Shed Camera Recording mode</summary>
    public SensorEntity ShedCameraRecordingMode => new(_haContext, "sensor.shed_camera_recording_mode");
    ///<summary>Shed Door Packet Id</summary>
    public SensorEntity ShedDoorPacketId => new(_haContext, "sensor.shed_door_packet_id");
    ///<summary>Shed Echo Input next Alarm</summary>
    public SensorEntity ShedEchoInputNextAlarm => new(_haContext, "sensor.shed_echo_input_next_alarm");
    ///<summary>Shed Echo Input next Reminder</summary>
    public SensorEntity ShedEchoInputNextReminder => new(_haContext, "sensor.shed_echo_input_next_reminder");
    ///<summary>Shed Echo Input next Timer</summary>
    public SensorEntity ShedEchoInputNextTimer => new(_haContext, "sensor.shed_echo_input_next_timer");
    ///<summary>Shed Motion Packet Id</summary>
    public SensorEntity ShedMotionPacketId => new(_haContext, "sensor.shed_motion_packet_id");
    ///<summary>Shelly Shed Lights Uptime</summary>
    public SensorEntity ShellyShedLightsUptime => new(_haContext, "sensor.shelly_shed_lights_uptime");
    ///<summary>Shelly Shed Sockets Uptime</summary>
    public SensorEntity ShellyShedSocketsUptime => new(_haContext, "sensor.shelly_shed_sockets_uptime");
    ///<summary>Mode</summary>
    public SensorEntity SmartSeries700047aeMode => new(_haContext, "sensor.smart_series_7000_47ae_mode");
    ///<summary>Number of sectors</summary>
    public SensorEntity SmartSeries700047aeNumberOfSectors => new(_haContext, "sensor.smart_series_7000_47ae_number_of_sectors");
    ///<summary>Pressure</summary>
    public SensorEntity SmartSeries700047aePressure => new(_haContext, "sensor.smart_series_7000_47ae_pressure");
    ///<summary>Sector</summary>
    public SensorEntity SmartSeries700047aeSector => new(_haContext, "sensor.smart_series_7000_47ae_sector");
    ///<summary>Sector Timer</summary>
    public SensorEntity SmartSeries700047aeSectorTimer => new(_haContext, "sensor.smart_series_7000_47ae_sector_timer");
    ///<summary>Toothbrush State</summary>
    public SensorEntity SmartSeries700047aeToothbrushState => new(_haContext, "sensor.smart_series_7000_47ae_toothbrush_state");
    ///<summary>Snug Desk Switch Action</summary>
    public SensorEntity SnugDeskSwitchAction => new(_haContext, "sensor.snug_desk_switch_action");
    ///<summary>Snug Echo Show next Alarm</summary>
    public SensorEntity SnugEchoShowNextAlarm => new(_haContext, "sensor.snug_echo_show_next_alarm");
    ///<summary>Snug Echo Show next Reminder</summary>
    public SensorEntity SnugEchoShowNextReminder => new(_haContext, "sensor.snug_echo_show_next_reminder");
    ///<summary>Snug Echo Show next Timer</summary>
    public SensorEntity SnugEchoShowNextTimer => new(_haContext, "sensor.snug_echo_show_next_timer");
    ///<summary>Snug Fire TV next Alarm</summary>
    public SensorEntity SnugFireTvNextAlarm => new(_haContext, "sensor.snug_fire_tv_next_alarm");
    ///<summary>Snug Fire TV next Reminder</summary>
    public SensorEntity SnugFireTvNextReminder => new(_haContext, "sensor.snug_fire_tv_next_reminder");
    ///<summary>Snug Fire TV next Timer</summary>
    public SensorEntity SnugFireTvNextTimer => new(_haContext, "sensor.snug_fire_tv_next_timer");
    ///<summary>Snug Led Strip Update state</summary>
    public SensorEntity SnugLedStripUpdateState => new(_haContext, "sensor.snug_led_strip_update_state");
    ///<summary>Snug Switch Action</summary>
    public SensorEntity SnugSwitchAction => new(_haContext, "sensor.snug_switch_action");
    ///<summary>Sonoff Downstairs 1 Sonoff Downstairs 1 BSSID</summary>
    public SensorEntity SonoffDownstairs1Bssid => new(_haContext, "sensor.sonoff_downstairs_1_bssid");
    ///<summary>Sonoff Downstairs 1 Sonoff Downstairs 1 ESPHome Version</summary>
    public SensorEntity SonoffDownstairs1EsphomeVersion => new(_haContext, "sensor.sonoff_downstairs_1_esphome_version");
    ///<summary>Sonoff Downstairs 1 Sonoff Downstairs 1 IP</summary>
    public SensorEntity SonoffDownstairs1Ip => new(_haContext, "sensor.sonoff_downstairs_1_ip");
    ///<summary>Sonoff Downstairs 1 Sonoff Downstairs 1 SSID</summary>
    public SensorEntity SonoffDownstairs1Ssid => new(_haContext, "sensor.sonoff_downstairs_1_ssid");
    ///<summary>Sonoff Downstairs 2 Sonoff Downstairs 2 BSSID</summary>
    public SensorEntity SonoffDownstairs2Bssid => new(_haContext, "sensor.sonoff_downstairs_2_bssid");
    ///<summary>Sonoff Downstairs 2 Sonoff Downstairs 2 ESPHome Version</summary>
    public SensorEntity SonoffDownstairs2EsphomeVersion => new(_haContext, "sensor.sonoff_downstairs_2_esphome_version");
    ///<summary>Sonoff Downstairs 2 Sonoff Downstairs 2 IP</summary>
    public SensorEntity SonoffDownstairs2Ip => new(_haContext, "sensor.sonoff_downstairs_2_ip");
    ///<summary>Sonoff Downstairs 2 Sonoff Downstairs 2 SSID</summary>
    public SensorEntity SonoffDownstairs2Ssid => new(_haContext, "sensor.sonoff_downstairs_2_ssid");
    ///<summary>Store Switch Action</summary>
    public SensorEntity StoreSwitchAction => new(_haContext, "sensor.store_switch_action");
    ///<summary>Studio Bedside Switch Action</summary>
    public SensorEntity StudioBedsideSwitchAction => new(_haContext, "sensor.studio_bedside_switch_action");
    ///<summary>Studio Echo Dot next Alarm</summary>
    public SensorEntity StudioEchoDotNextAlarm => new(_haContext, "sensor.studio_echo_dot_next_alarm");
    ///<summary>Studio Echo Dot next Reminder</summary>
    public SensorEntity StudioEchoDotNextReminder => new(_haContext, "sensor.studio_echo_dot_next_reminder");
    ///<summary>Studio Echo Dot next Timer</summary>
    public SensorEntity StudioEchoDotNextTimer => new(_haContext, "sensor.studio_echo_dot_next_timer");
    ///<summary>Studio Switch Action</summary>
    public SensorEntity StudioSwitchAction => new(_haContext, "sensor.studio_switch_action");
    ///<summary>Sump Alarm Sump Alarm BSSID</summary>
    public SensorEntity SumpAlarmBssid => new(_haContext, "sensor.sump_alarm_bssid");
    ///<summary>Sump Alarm Sump Alarm ESPHome Version</summary>
    public SensorEntity SumpAlarmEsphomeVersion => new(_haContext, "sensor.sump_alarm_esphome_version");
    ///<summary>Sump Alarm Sump Alarm IP</summary>
    public SensorEntity SumpAlarmIp => new(_haContext, "sensor.sump_alarm_ip");
    ///<summary>Sump Alarm Sump Alarm SSID</summary>
    public SensorEntity SumpAlarmSsid => new(_haContext, "sensor.sump_alarm_ssid");
    ///<summary>Sun Next dawn</summary>
    public SensorEntity SunNextDawn => new(_haContext, "sensor.sun_next_dawn");
    ///<summary>Sun Next dusk</summary>
    public SensorEntity SunNextDusk => new(_haContext, "sensor.sun_next_dusk");
    ///<summary>Sun Next midnight</summary>
    public SensorEntity SunNextMidnight => new(_haContext, "sensor.sun_next_midnight");
    ///<summary>Sun Next noon</summary>
    public SensorEntity SunNextNoon => new(_haContext, "sensor.sun_next_noon");
    ///<summary>Sun Next rising</summary>
    public SensorEntity SunNextRising => new(_haContext, "sensor.sun_next_rising");
    ///<summary>Sun Next setting</summary>
    public SensorEntity SunNextSetting => new(_haContext, "sensor.sun_next_setting");
    ///<summary>This Device next Alarm</summary>
    public SensorEntity ThisDeviceNextAlarm2 => new(_haContext, "sensor.this_device_next_alarm_2");
    ///<summary>This Device next Reminder</summary>
    public SensorEntity ThisDeviceNextReminder2 => new(_haContext, "sensor.this_device_next_reminder_2");
    ///<summary>This Device next Timer</summary>
    public SensorEntity ThisDeviceNextTimer2 => new(_haContext, "sensor.this_device_next_timer_2");
    ///<summary>Toilet Switch Action</summary>
    public SensorEntity ToiletSwitchAction => new(_haContext, "sensor.toilet_switch_action");
    ///<summary>UDMPRO Uptime</summary>
    public SensorEntity UdmproUptime => new(_haContext, "sensor.udmpro_uptime");
    ///<summary>UniFi Dream Machine External IP</summary>
    public SensorEntity UnifiDreamMachineExternalIp => new(_haContext, "sensor.unifi_dream_machine_external_ip");
    ///<summary>Utility Room Echo Dot next Alarm</summary>
    public SensorEntity UtilityRoomEchoDotNextAlarm => new(_haContext, "sensor.utility_room_echo_dot_next_alarm");
    ///<summary>Utility Room Echo Dot next Reminder</summary>
    public SensorEntity UtilityRoomEchoDotNextReminder => new(_haContext, "sensor.utility_room_echo_dot_next_reminder");
    ///<summary>Utility Room Echo Dot next Timer</summary>
    public SensorEntity UtilityRoomEchoDotNextTimer => new(_haContext, "sensor.utility_room_echo_dot_next_timer");
    ///<summary>Utility Room Switch Action</summary>
    public SensorEntity UtilityRoomSwitchAction => new(_haContext, "sensor.utility_room_switch_action");
    ///<summary>Weather Station Weather Station Altitude</summary>
    public SensorEntity WeatherStationAltitude => new(_haContext, "sensor.weather_station_altitude");
    ///<summary>Weather Station Weather Station BSSID</summary>
    public SensorEntity WeatherStationBssid => new(_haContext, "sensor.weather_station_bssid");
    ///<summary>Weather Station Weather Station ESPHome Version</summary>
    public SensorEntity WeatherStationEsphomeVersion => new(_haContext, "sensor.weather_station_esphome_version");
    ///<summary>Weather Station Weather Station Humidity</summary>
    public SensorEntity WeatherStationHumidity => new(_haContext, "sensor.weather_station_humidity");
    ///<summary>Weather Station Weather Station IP</summary>
    public SensorEntity WeatherStationIp => new(_haContext, "sensor.weather_station_ip");
    ///<summary>Weather Station Weather Station SSID</summary>
    public SensorEntity WeatherStationSsid => new(_haContext, "sensor.weather_station_ssid");
    ///<summary>Zigbee2MQTT Bridge Version</summary>
    public SensorEntity Zigbee2mqttBridgeVersion => new(_haContext, "sensor.zigbee2mqtt_bridge_version");
    ///<summary>Drawing Room Switch Linkquality</summary>
    public NumericSensorEntity _0x8c6fb9fffe454fdaLinkquality => new(_haContext, "sensor.0x8c6fb9fffe454fda_linkquality");
    ///<summary>Bedside Switch Battery</summary>
    public NumericSensorEntity _0xf082c0fffe3d9a0fBattery => new(_haContext, "sensor.0xf082c0fffe3d9a0f_battery");
    ///<summary>Estimated distance</summary>
    public NumericSensorEntity _10079d748ee848e98a1fE565c9fb73241001EstimatedDistance => new(_haContext, "sensor.10079d74_8ee8_48e9_8a1f_e565c9fb7324_100_1_estimated_distance");
    ///<summary>192.168.1.1 Player count</summary>
    public NumericSensorEntity _19216811PlayerCount => new(_haContext, "sensor.192_168_1_1_player_count");
    ///<summary>192.168.1.1 Player count off service</summary>
    public NumericSensorEntity _19216811PlayerCountOffService => new(_haContext, "sensor.192_168_1_1_player_count_off_service");
    ///<summary>192.168.1.1 Total albums</summary>
    public NumericSensorEntity _19216811TotalAlbums => new(_haContext, "sensor.192_168_1_1_total_albums");
    ///<summary>192.168.1.1 Total artists</summary>
    public NumericSensorEntity _19216811TotalArtists => new(_haContext, "sensor.192_168_1_1_total_artists");
    ///<summary>192.168.1.1 Total duration</summary>
    public NumericSensorEntity _19216811TotalDuration => new(_haContext, "sensor.192_168_1_1_total_duration");
    ///<summary>192.168.1.1 Total genres</summary>
    public NumericSensorEntity _19216811TotalGenres => new(_haContext, "sensor.192_168_1_1_total_genres");
    ///<summary>192.168.1.1 Total songs</summary>
    public NumericSensorEntity _19216811TotalSongs => new(_haContext, "sensor.192_168_1_1_total_songs");
    ///<summary>Estimated Distance</summary>
    public NumericSensorEntity _74278bdaB64445208f0c720eaf059935023646C68bEstimatedDistance => new(_haContext, "sensor.74278bda_b644_4520_8f0c_720eaf059935_0_23646_c68b_estimated_distance");
    ///<summary>Estimated Distance</summary>
    public NumericSensorEntity _74278bdaB64445208f0c720eaf059935042355512cEstimatedDistance => new(_haContext, "sensor.74278bda_b644_4520_8f0c_720eaf059935_0_42355_512c_estimated_distance");
    ///<summary>Estimated Distance</summary>
    public NumericSensorEntity _74278bdaB64445208f0c720eaf0599350447404a03EstimatedDistance => new(_haContext, "sensor.74278bda_b644_4520_8f0c_720eaf059935_0_44740_4a03_estimated_distance");
    ///<summary>Estimated Distance</summary>
    public NumericSensorEntity _74278bdaB64445208f0c720eaf059935095650951EstimatedDistance => new(_haContext, "sensor.74278bda_b644_4520_8f0c_720eaf059935_0_9565_0951_estimated_distance");
    ///<summary>Estimated Distance</summary>
    public NumericSensorEntity _9d41000035d6F4ddBa60E7bd8dc491c027118791269eeEstimatedDistance => new(_haContext, "sensor.9d410000_35d6_f4dd_ba60_e7bd8dc491c0_27118_7912_69ee_estimated_distance");
    ///<summary>Estimated Distance</summary>
    public NumericSensorEntity _9d41000035d6F4ddBa60E7bd8dc491c06538525776Ff69EstimatedDistance => new(_haContext, "sensor.9d410000_35d6_f4dd_ba60_e7bd8dc491c0_65385_25776_ff69_estimated_distance");
    ///<summary>AdGuard Home Average processing speed</summary>
    public NumericSensorEntity AdguardAverageProcessingSpeed => new(_haContext, "sensor.adguard_average_processing_speed");
    ///<summary>AdGuard Home DNS queries</summary>
    public NumericSensorEntity AdguardDnsQueries => new(_haContext, "sensor.adguard_dns_queries");
    ///<summary>AdGuard Home DNS queries blocked</summary>
    public NumericSensorEntity AdguardDnsQueriesBlocked => new(_haContext, "sensor.adguard_dns_queries_blocked");
    ///<summary>AdGuard Home DNS queries blocked ratio</summary>
    public NumericSensorEntity AdguardDnsQueriesBlockedRatio => new(_haContext, "sensor.adguard_dns_queries_blocked_ratio");
    ///<summary>AdGuard Home Parental control blocked</summary>
    public NumericSensorEntity AdguardParentalControlBlocked => new(_haContext, "sensor.adguard_parental_control_blocked");
    ///<summary>AdGuard Home Rules count</summary>
    public NumericSensorEntity AdguardRulesCount => new(_haContext, "sensor.adguard_rules_count");
    ///<summary>AdGuard Home Safe browsing blocked</summary>
    public NumericSensorEntity AdguardSafeBrowsingBlocked => new(_haContext, "sensor.adguard_safe_browsing_blocked");
    ///<summary>Andy Active calories burnt today</summary>
    public NumericSensorEntity AndyActiveCaloriesBurntToday => new(_haContext, "sensor.andy_active_calories_burnt_today");
    ///<summary>Andy Active time today</summary>
    public NumericSensorEntity AndyActiveTimeToday => new(_haContext, "sensor.andy_active_time_today");
    ///<summary>Andy Average heart rate</summary>
    public NumericSensorEntity AndyAverageHeartRate => new(_haContext, "sensor.andy_average_heart_rate");
    ///<summary>Andy Average respiratory rate</summary>
    public NumericSensorEntity AndyAverageRespiratoryRate => new(_haContext, "sensor.andy_average_respiratory_rate");
    ///<summary>Body temperature</summary>
    public NumericSensorEntity AndyBodyTemperature => new(_haContext, "sensor.andy_body_temperature");
    ///<summary>Bone mass</summary>
    public NumericSensorEntity AndyBoneMass => new(_haContext, "sensor.andy_bone_mass");
    ///<summary>Andy Calories burnt last workout</summary>
    public NumericSensorEntity AndyCaloriesBurntLastWorkout => new(_haContext, "sensor.andy_calories_burnt_last_workout");
    ///<summary>Andy Dailies</summary>
    public NumericSensorEntity AndyDailies => new(_haContext, "sensor.andy_dailies");
    ///<summary>Andy Deep sleep</summary>
    public NumericSensorEntity AndyDeepSleep => new(_haContext, "sensor.andy_deep_sleep");
    ///<summary>Diastolic blood pressure</summary>
    public NumericSensorEntity AndyDiastolicBloodPressure => new(_haContext, "sensor.andy_diastolic_blood_pressure");
    ///<summary>Andy Distance travelled last workout</summary>
    public NumericSensorEntity AndyDistanceTravelledLastWorkout => new(_haContext, "sensor.andy_distance_travelled_last_workout");
    ///<summary>Andy Distance travelled today</summary>
    public NumericSensorEntity AndyDistanceTravelledToday => new(_haContext, "sensor.andy_distance_travelled_today");
    ///<summary>Andy Experience</summary>
    public NumericSensorEntity AndyExperience => new(_haContext, "sensor.andy_experience");
    ///<summary>Fat free mass</summary>
    public NumericSensorEntity AndyFatFreeMass => new(_haContext, "sensor.andy_fat_free_mass");
    ///<summary>Fat mass</summary>
    public NumericSensorEntity AndyFatMass => new(_haContext, "sensor.andy_fat_mass");
    ///<summary>Fat ratio</summary>
    public NumericSensorEntity AndyFatRatio => new(_haContext, "sensor.andy_fat_ratio");
    ///<summary>Andy Elevation change last workout</summary>
    public NumericSensorEntity AndyFloorsClimbedLastWorkout => new(_haContext, "sensor.andy_floors_climbed_last_workout");
    ///<summary>Andy Elevation change today</summary>
    public NumericSensorEntity AndyFloorsClimbedToday => new(_haContext, "sensor.andy_floors_climbed_today");
    ///<summary>Andy Gems</summary>
    public NumericSensorEntity AndyGems => new(_haContext, "sensor.andy_gems");
    ///<summary>Andy Gold</summary>
    public NumericSensorEntity AndyGold => new(_haContext, "sensor.andy_gold");
    ///<summary>Andy Habits</summary>
    public NumericSensorEntity AndyHabits => new(_haContext, "sensor.andy_habits");
    ///<summary>Andy Health</summary>
    public NumericSensorEntity AndyHealth => new(_haContext, "sensor.andy_health");
    ///<summary>Heart pulse</summary>
    public NumericSensorEntity AndyHeartPulse => new(_haContext, "sensor.andy_heart_pulse");
    ///<summary>Height</summary>
    public NumericSensorEntity AndyHeight => new(_haContext, "sensor.andy_height");
    ///<summary>Hydration</summary>
    public NumericSensorEntity AndyHydration => new(_haContext, "sensor.andy_hydration");
    ///<summary>Andy Intense activity today</summary>
    public NumericSensorEntity AndyIntenseActivityToday => new(_haContext, "sensor.andy_intense_activity_today");
    ///<summary>Andy Last workout duration</summary>
    public NumericSensorEntity AndyLastWorkoutDuration => new(_haContext, "sensor.andy_last_workout_duration");
    ///<summary>Andy Light sleep</summary>
    public NumericSensorEntity AndyLightSleep => new(_haContext, "sensor.andy_light_sleep");
    ///<summary>Andy Mana</summary>
    public NumericSensorEntity AndyMana => new(_haContext, "sensor.andy_mana");
    ///<summary>Andy Max. health</summary>
    public NumericSensorEntity AndyMaxHealth => new(_haContext, "sensor.andy_max_health");
    ///<summary>Andy Max. mana</summary>
    public NumericSensorEntity AndyMaxMana => new(_haContext, "sensor.andy_max_mana");
    ///<summary>Andy Maximum heart rate</summary>
    public NumericSensorEntity AndyMaximumHeartRate => new(_haContext, "sensor.andy_maximum_heart_rate");
    ///<summary>Andy Maximum respiratory rate</summary>
    public NumericSensorEntity AndyMaximumRespiratoryRate => new(_haContext, "sensor.andy_maximum_respiratory_rate");
    ///<summary>Andy Minimum heart rate</summary>
    public NumericSensorEntity AndyMinimumHeartRate => new(_haContext, "sensor.andy_minimum_heart_rate");
    ///<summary>Andy Minimum respiratory rate</summary>
    public NumericSensorEntity AndyMinimumRespiratoryRate => new(_haContext, "sensor.andy_minimum_respiratory_rate");
    ///<summary>Andy Moderate activity today</summary>
    public NumericSensorEntity AndyModerateActivityToday => new(_haContext, "sensor.andy_moderate_activity_today");
    ///<summary>Muscle mass</summary>
    public NumericSensorEntity AndyMuscleMass => new(_haContext, "sensor.andy_muscle_mass");
    ///<summary>Andy Mystic hourglasses</summary>
    public NumericSensorEntity AndyMysticHourglasses => new(_haContext, "sensor.andy_mystic_hourglasses");
    ///<summary>Andy Next level</summary>
    public NumericSensorEntity AndyNextLevel => new(_haContext, "sensor.andy_next_level");
    ///<summary>Andy Pause during last workout</summary>
    public NumericSensorEntity AndyPauseDuringLastWorkout => new(_haContext, "sensor.andy_pause_during_last_workout");
    ///<summary>Pulse wave velocity</summary>
    public NumericSensorEntity AndyPulseWaveVelocity => new(_haContext, "sensor.andy_pulse_wave_velocity");
    ///<summary>Andy REM sleep</summary>
    public NumericSensorEntity AndyRemSleep => new(_haContext, "sensor.andy_rem_sleep");
    ///<summary>Andy Rewards</summary>
    public NumericSensorEntity AndyRewards => new(_haContext, "sensor.andy_rewards");
    ///<summary>Skin temperature</summary>
    public NumericSensorEntity AndySkinTemperature => new(_haContext, "sensor.andy_skin_temperature");
    ///<summary>Andy Sleep score</summary>
    public NumericSensorEntity AndySleepScore => new(_haContext, "sensor.andy_sleep_score");
    ///<summary>Andy Soft activity today</summary>
    public NumericSensorEntity AndySoftActivityToday => new(_haContext, "sensor.andy_soft_activity_today");
    ///<summary>SpO2</summary>
    public NumericSensorEntity AndySpo2 => new(_haContext, "sensor.andy_spo2");
    ///<summary>Andy Step goal</summary>
    public NumericSensorEntity AndyStepGoal => new(_haContext, "sensor.andy_step_goal");
    ///<summary>Andy Steps today</summary>
    public NumericSensorEntity AndyStepsToday => new(_haContext, "sensor.andy_steps_today");
    ///<summary>Systolic blood pressure</summary>
    public NumericSensorEntity AndySystolicBloodPressure => new(_haContext, "sensor.andy_systolic_blood_pressure");
    ///<summary>Temperature</summary>
    public NumericSensorEntity AndyTemperature => new(_haContext, "sensor.andy_temperature");
    ///<summary>Andy Time to sleep</summary>
    public NumericSensorEntity AndyTimeToSleep => new(_haContext, "sensor.andy_time_to_sleep");
    ///<summary>Andy Time to wakeup</summary>
    public NumericSensorEntity AndyTimeToWakeup => new(_haContext, "sensor.andy_time_to_wakeup");
    ///<summary>Andy To-Do&apos;s</summary>
    public NumericSensorEntity AndyToDoS => new(_haContext, "sensor.andy_to_do_s");
    ///<summary>Andy Total calories burnt today</summary>
    public NumericSensorEntity AndyTotalCaloriesBurntToday => new(_haContext, "sensor.andy_total_calories_burnt_today");
    ///<summary>Andy Wakeup count</summary>
    public NumericSensorEntity AndyWakeupCount => new(_haContext, "sensor.andy_wakeup_count");
    ///<summary>Andy Wakeup time</summary>
    public NumericSensorEntity AndyWakeupTime => new(_haContext, "sensor.andy_wakeup_time");
    ///<summary>Andy Weight</summary>
    public NumericSensorEntity AndyWeight => new(_haContext, "sensor.andy_weight");
    ///<summary>Andy Weight goal</summary>
    public NumericSensorEntity AndyWeightGoal => new(_haContext, "sensor.andy_weight_goal");
    ///<summary>Backdoor Light Current</summary>
    public NumericSensorEntity BackdoorLightCurrent => new(_haContext, "sensor.backdoor_light_current");
    ///<summary>Backdoor Light Energy</summary>
    public NumericSensorEntity BackdoorLightEnergy => new(_haContext, "sensor.backdoor_light_energy");
    public NumericSensorEntity BackdoorLightEnergyCost => new(_haContext, "sensor.backdoor_light_energy_cost");
    ///<summary>Backdoor Light Frequency</summary>
    public NumericSensorEntity BackdoorLightFrequency => new(_haContext, "sensor.backdoor_light_frequency");
    ///<summary>Backdoor Light Power</summary>
    public NumericSensorEntity BackdoorLightPower => new(_haContext, "sensor.backdoor_light_power");
    ///<summary>Backdoor Light Temperature</summary>
    public NumericSensorEntity BackdoorLightTemperature => new(_haContext, "sensor.backdoor_light_temperature");
    ///<summary>Backdoor Light Voltage</summary>
    public NumericSensorEntity BackdoorLightVoltage => new(_haContext, "sensor.backdoor_light_voltage");
    ///<summary>Basement Hall Camera Disk write rate</summary>
    public NumericSensorEntity BasementHallCameraDiskWriteRate => new(_haContext, "sensor.basement_hall_camera_disk_write_rate");
    ///<summary>Basement Hall Camera Microphone level</summary>
    public NumericSensorEntity BasementHallCameraMicrophoneLevel => new(_haContext, "sensor.basement_hall_camera_microphone_level");
    ///<summary>Basement Hall Camera Storage used</summary>
    public NumericSensorEntity BasementHallCameraStorageUsed => new(_haContext, "sensor.basement_hall_camera_storage_used");
    ///<summary>Basement Hall Light current</summary>
    public NumericSensorEntity BasementHallLightCurrent => new(_haContext, "sensor.basement_hall_light_current");
    ///<summary>Basement Hall Light device temperature</summary>
    public NumericSensorEntity BasementHallLightDeviceTemperature => new(_haContext, "sensor.basement_hall_light_device_temperature");
    ///<summary>Basement Hall Light energy</summary>
    public NumericSensorEntity BasementHallLightEnergy => new(_haContext, "sensor.basement_hall_light_energy");
    ///<summary>Basement Hall Light frequency</summary>
    public NumericSensorEntity BasementHallLightFrequency => new(_haContext, "sensor.basement_hall_light_frequency");
    ///<summary>Basement Hall Light power</summary>
    public NumericSensorEntity BasementHallLightPower => new(_haContext, "sensor.basement_hall_light_power");
    ///<summary>Basement Hall Light voltage</summary>
    public NumericSensorEntity BasementHallLightVoltage => new(_haContext, "sensor.basement_hall_light_voltage");
    ///<summary>Shelly Basement Hall Lights rssi</summary>
    public NumericSensorEntity BasementHallLightsRssi => new(_haContext, "sensor.basement_hall_lights_rssi");
    ///<summary>Basement Humidity</summary>
    public NumericSensorEntity BasementHumidity => new(_haContext, "sensor.basement_humidity");
    ///<summary>Toilet Light current</summary>
    public NumericSensorEntity BasementLights1Switch0Current => new(_haContext, "sensor.basement_lights_1_switch_0_current");
    ///<summary>Toilet Light device temperature</summary>
    public NumericSensorEntity BasementLights1Switch0DeviceTemperature => new(_haContext, "sensor.basement_lights_1_switch_0_device_temperature");
    ///<summary>Toilet Light energy</summary>
    public NumericSensorEntity BasementLights1Switch0Energy => new(_haContext, "sensor.basement_lights_1_switch_0_energy");
    ///<summary>Toilet Light frequency</summary>
    public NumericSensorEntity BasementLights1Switch0Frequency => new(_haContext, "sensor.basement_lights_1_switch_0_frequency");
    ///<summary>Toilet Light power</summary>
    public NumericSensorEntity BasementLights1Switch0Power => new(_haContext, "sensor.basement_lights_1_switch_0_power");
    ///<summary>Toilet Light voltage</summary>
    public NumericSensorEntity BasementLights1Switch0Voltage => new(_haContext, "sensor.basement_lights_1_switch_0_voltage");
    ///<summary>shellypro4pm-34987a68fc0c Switch 1 current</summary>
    public NumericSensorEntity BasementLights1Switch1Current => new(_haContext, "sensor.basement_lights_1_switch_1_current");
    ///<summary>shellypro4pm-34987a68fc0c Switch 1 device temperature</summary>
    public NumericSensorEntity BasementLights1Switch1DeviceTemperature => new(_haContext, "sensor.basement_lights_1_switch_1_device_temperature");
    ///<summary>Basement Lights 1 switch_1 energy</summary>
    public NumericSensorEntity BasementLights1Switch1Energy => new(_haContext, "sensor.basement_lights_1_switch_1_energy");
    ///<summary>shellypro4pm-34987a68fc0c Switch 1 frequency</summary>
    public NumericSensorEntity BasementLights1Switch1Frequency => new(_haContext, "sensor.basement_lights_1_switch_1_frequency");
    ///<summary>Basement Lights 1 switch_1 power</summary>
    public NumericSensorEntity BasementLights1Switch1Power => new(_haContext, "sensor.basement_lights_1_switch_1_power");
    ///<summary>shellypro4pm-34987a68fc0c Switch 1 voltage</summary>
    public NumericSensorEntity BasementLights1Switch1Voltage => new(_haContext, "sensor.basement_lights_1_switch_1_voltage");
    ///<summary>Utility Room Light current</summary>
    public NumericSensorEntity BasementLights1Switch2Current => new(_haContext, "sensor.basement_lights_1_switch_2_current");
    ///<summary>Utility Room Light device temperature</summary>
    public NumericSensorEntity BasementLights1Switch2DeviceTemperature => new(_haContext, "sensor.basement_lights_1_switch_2_device_temperature");
    ///<summary>Utility Room Light energy</summary>
    public NumericSensorEntity BasementLights1Switch2Energy => new(_haContext, "sensor.basement_lights_1_switch_2_energy");
    ///<summary>Utility Room Light frequency</summary>
    public NumericSensorEntity BasementLights1Switch2Frequency => new(_haContext, "sensor.basement_lights_1_switch_2_frequency");
    ///<summary>Utility Room Light power</summary>
    public NumericSensorEntity BasementLights1Switch2Power => new(_haContext, "sensor.basement_lights_1_switch_2_power");
    ///<summary>Utility Room Light voltage</summary>
    public NumericSensorEntity BasementLights1Switch2Voltage => new(_haContext, "sensor.basement_lights_1_switch_2_voltage");
    ///<summary>Store Light current</summary>
    public NumericSensorEntity BasementLights1Switch3Current => new(_haContext, "sensor.basement_lights_1_switch_3_current");
    ///<summary>Store Light device temperature</summary>
    public NumericSensorEntity BasementLights1Switch3DeviceTemperature => new(_haContext, "sensor.basement_lights_1_switch_3_device_temperature");
    ///<summary>Store Light energy</summary>
    public NumericSensorEntity BasementLights1Switch3Energy => new(_haContext, "sensor.basement_lights_1_switch_3_energy");
    ///<summary>Store Light frequency</summary>
    public NumericSensorEntity BasementLights1Switch3Frequency => new(_haContext, "sensor.basement_lights_1_switch_3_frequency");
    ///<summary>Store Light power</summary>
    public NumericSensorEntity BasementLights1Switch3Power => new(_haContext, "sensor.basement_lights_1_switch_3_power");
    ///<summary>Store Light voltage</summary>
    public NumericSensorEntity BasementLights1Switch3Voltage => new(_haContext, "sensor.basement_lights_1_switch_3_voltage");
    ///<summary>BL2 Unused 3 energy</summary>
    public NumericSensorEntity BasementLights2Switch0Energy => new(_haContext, "sensor.basement_lights_2_switch_0_energy");
    ///<summary>BL2 Unused 3 power</summary>
    public NumericSensorEntity BasementLights2Switch0Power => new(_haContext, "sensor.basement_lights_2_switch_0_power");
    ///<summary>BL2 Unused 4 energy</summary>
    public NumericSensorEntity BasementLights2Switch1Energy => new(_haContext, "sensor.basement_lights_2_switch_1_energy");
    ///<summary>BL2 Unused 4 power</summary>
    public NumericSensorEntity BasementLights2Switch1Power => new(_haContext, "sensor.basement_lights_2_switch_1_power");
    ///<summary>Dining Room Light current</summary>
    public NumericSensorEntity BasementLights2Switch2Current => new(_haContext, "sensor.basement_lights_2_switch_2_current");
    ///<summary>Dining Room Light device temperature</summary>
    public NumericSensorEntity BasementLights2Switch2DeviceTemperature => new(_haContext, "sensor.basement_lights_2_switch_2_device_temperature");
    ///<summary>Dining Room Light energy</summary>
    public NumericSensorEntity BasementLights2Switch2Energy => new(_haContext, "sensor.basement_lights_2_switch_2_energy");
    ///<summary>Dining Room Light frequency</summary>
    public NumericSensorEntity BasementLights2Switch2Frequency => new(_haContext, "sensor.basement_lights_2_switch_2_frequency");
    ///<summary>Dining Room Light power</summary>
    public NumericSensorEntity BasementLights2Switch2Power => new(_haContext, "sensor.basement_lights_2_switch_2_power");
    ///<summary>Dining Room Light voltage</summary>
    public NumericSensorEntity BasementLights2Switch2Voltage => new(_haContext, "sensor.basement_lights_2_switch_2_voltage");
    ///<summary>Snug Light current</summary>
    public NumericSensorEntity BasementLights2Switch3Current => new(_haContext, "sensor.basement_lights_2_switch_3_current");
    ///<summary>Snug Light device temperature</summary>
    public NumericSensorEntity BasementLights2Switch3DeviceTemperature => new(_haContext, "sensor.basement_lights_2_switch_3_device_temperature");
    ///<summary>Snug Light energy</summary>
    public NumericSensorEntity BasementLights2Switch3Energy => new(_haContext, "sensor.basement_lights_2_switch_3_energy");
    ///<summary>Snug Light frequency</summary>
    public NumericSensorEntity BasementLights2Switch3Frequency => new(_haContext, "sensor.basement_lights_2_switch_3_frequency");
    ///<summary>Snug Light power</summary>
    public NumericSensorEntity BasementLights2Switch3Power => new(_haContext, "sensor.basement_lights_2_switch_3_power");
    ///<summary>Snug Light voltage</summary>
    public NumericSensorEntity BasementLights2Switch3Voltage => new(_haContext, "sensor.basement_lights_2_switch_3_voltage");
    ///<summary>Basement Stairs Motion Battery</summary>
    public NumericSensorEntity BasementStairsMotionBattery => new(_haContext, "sensor.basement_stairs_motion_battery");
    ///<summary>Basement Stairs Motion Linkquality</summary>
    public NumericSensorEntity BasementStairsMotionLinkquality => new(_haContext, "sensor.basement_stairs_motion_linkquality");
    ///<summary>Basement Stairs Motion Voltage</summary>
    public NumericSensorEntity BasementStairsMotionVoltage => new(_haContext, "sensor.basement_stairs_motion_voltage");
    ///<summary>Basement Target Temperature</summary>
    public NumericSensorEntity BasementTargetTemperature => new(_haContext, "sensor.basement_target_temperature");
    ///<summary>Basement Temperature</summary>
    public NumericSensorEntity BasementTemperature => new(_haContext, "sensor.basement_temperature");
    ///<summary>Bathroom Door Battery</summary>
    public NumericSensorEntity BathroomDoorBattery => new(_haContext, "sensor.bathroom_door_battery");
    ///<summary>Bathroom Door Linkquality</summary>
    public NumericSensorEntity BathroomDoorLinkquality => new(_haContext, "sensor.bathroom_door_linkquality");
    ///<summary>Bathroom Door Voltage</summary>
    public NumericSensorEntity BathroomDoorVoltage => new(_haContext, "sensor.bathroom_door_voltage");
    ///<summary>Bathroom Fan current</summary>
    public NumericSensorEntity BathroomFanCurrent => new(_haContext, "sensor.bathroom_fan_current");
    ///<summary>Bathroom Fan device temperature</summary>
    public NumericSensorEntity BathroomFanDeviceTemperature => new(_haContext, "sensor.bathroom_fan_device_temperature");
    ///<summary>Bathroom Fan energy</summary>
    public NumericSensorEntity BathroomFanEnergy => new(_haContext, "sensor.bathroom_fan_energy");
    ///<summary>Bathroom Fan frequency</summary>
    public NumericSensorEntity BathroomFanFrequency => new(_haContext, "sensor.bathroom_fan_frequency");
    ///<summary>Bathroom Fan power</summary>
    public NumericSensorEntity BathroomFanPower => new(_haContext, "sensor.bathroom_fan_power");
    ///<summary>Bathroom Fan voltage</summary>
    public NumericSensorEntity BathroomFanVoltage => new(_haContext, "sensor.bathroom_fan_voltage");
    ///<summary>Bathroom Humidistat Battery</summary>
    public NumericSensorEntity BathroomHumidistatBattery => new(_haContext, "sensor.bathroom_humidistat_battery");
    ///<summary>Bathroom Humidistat Humidity</summary>
    public NumericSensorEntity BathroomHumidistatHumidity => new(_haContext, "sensor.bathroom_humidistat_humidity");
    ///<summary>Bathroom Humidistat Linkquality</summary>
    public NumericSensorEntity BathroomHumidistatLinkquality => new(_haContext, "sensor.bathroom_humidistat_linkquality");
    ///<summary>Bathroom Humidistat Temperature</summary>
    public NumericSensorEntity BathroomHumidistatTemperature => new(_haContext, "sensor.bathroom_humidistat_temperature");
    ///<summary>Bathroom Light current</summary>
    public NumericSensorEntity BathroomLightCurrent => new(_haContext, "sensor.bathroom_light_current");
    ///<summary>Bathroom Light device temperature</summary>
    public NumericSensorEntity BathroomLightDeviceTemperature => new(_haContext, "sensor.bathroom_light_device_temperature");
    ///<summary>Bathroom Light energy</summary>
    public NumericSensorEntity BathroomLightEnergy => new(_haContext, "sensor.bathroom_light_energy");
    ///<summary>Bathroom Light frequency</summary>
    public NumericSensorEntity BathroomLightFrequency => new(_haContext, "sensor.bathroom_light_frequency");
    ///<summary>Bathroom Light power</summary>
    public NumericSensorEntity BathroomLightPower => new(_haContext, "sensor.bathroom_light_power");
    ///<summary>Bathroom Light voltage</summary>
    public NumericSensorEntity BathroomLightVoltage => new(_haContext, "sensor.bathroom_light_voltage");
    ///<summary>Bathroom Switch Battery</summary>
    public NumericSensorEntity BathroomSwitchBattery => new(_haContext, "sensor.bathroom_switch_battery");
    ///<summary>Bed Socket current</summary>
    public NumericSensorEntity BedSocketCurrent => new(_haContext, "sensor.bed_socket_current");
    ///<summary>Bed Socket device temperature</summary>
    public NumericSensorEntity BedSocketDeviceTemperature => new(_haContext, "sensor.bed_socket_device_temperature");
    ///<summary>Bed Socket energy</summary>
    public NumericSensorEntity BedSocketEnergy => new(_haContext, "sensor.bed_socket_energy");
    ///<summary>Bed Socket frequency</summary>
    public NumericSensorEntity BedSocketFrequency => new(_haContext, "sensor.bed_socket_frequency");
    ///<summary>Bed Socket power</summary>
    public NumericSensorEntity BedSocketPower => new(_haContext, "sensor.bed_socket_power");
    ///<summary>Bed Socket voltage</summary>
    public NumericSensorEntity BedSocketVoltage => new(_haContext, "sensor.bed_socket_voltage");
    ///<summary>Bedroom Light current</summary>
    public NumericSensorEntity BedroomLightCurrent => new(_haContext, "sensor.bedroom_light_current");
    ///<summary>Bedroom Light device temperature</summary>
    public NumericSensorEntity BedroomLightDeviceTemperature => new(_haContext, "sensor.bedroom_light_device_temperature");
    ///<summary>Bedroom Light energy</summary>
    public NumericSensorEntity BedroomLightEnergy => new(_haContext, "sensor.bedroom_light_energy");
    ///<summary>Bedroom Light frequency</summary>
    public NumericSensorEntity BedroomLightFrequency => new(_haContext, "sensor.bedroom_light_frequency");
    ///<summary>Bedroom Light power</summary>
    public NumericSensorEntity BedroomLightPower => new(_haContext, "sensor.bedroom_light_power");
    ///<summary>Bedroom Light voltage</summary>
    public NumericSensorEntity BedroomLightVoltage => new(_haContext, "sensor.bedroom_light_voltage");
    ///<summary>Bedroom Switch Battery</summary>
    public NumericSensorEntity BedroomSwitchBattery => new(_haContext, "sensor.bedroom_switch_battery");
    ///<summary>Brewery Current Temperature</summary>
    public NumericSensorEntity BreweryCurrentTemperature => new(_haContext, "sensor.brewery_current_temperature");
    ///<summary>Brewery Floor Temperature</summary>
    public NumericSensorEntity BreweryFloorTemperature => new(_haContext, "sensor.brewery_floor_temperature");
    ///<summary>Brewery Light current</summary>
    public NumericSensorEntity BreweryLightCurrent => new(_haContext, "sensor.brewery_light_current");
    ///<summary>Brewery Light device temperature</summary>
    public NumericSensorEntity BreweryLightDeviceTemperature => new(_haContext, "sensor.brewery_light_device_temperature");
    ///<summary>Brewery Light energy</summary>
    public NumericSensorEntity BreweryLightEnergy => new(_haContext, "sensor.brewery_light_energy");
    ///<summary>Brewery Light frequency</summary>
    public NumericSensorEntity BreweryLightFrequency => new(_haContext, "sensor.brewery_light_frequency");
    ///<summary>Brewery Light power</summary>
    public NumericSensorEntity BreweryLightPower => new(_haContext, "sensor.brewery_light_power");
    ///<summary>Brewery Light voltage</summary>
    public NumericSensorEntity BreweryLightVoltage => new(_haContext, "sensor.brewery_light_voltage");
    ///<summary>Brother MFC-J5910DW CUPS Black</summary>
    public NumericSensorEntity BrotherMfcJ5910dwCupsBlack => new(_haContext, "sensor.brother_mfc_j5910dw_cups_black");
    ///<summary>Brother MFC-J5910DW CUPS Cyan</summary>
    public NumericSensorEntity BrotherMfcJ5910dwCupsCyan => new(_haContext, "sensor.brother_mfc_j5910dw_cups_cyan");
    ///<summary>Brother MFC-J5910DW CUPS Magenta</summary>
    public NumericSensorEntity BrotherMfcJ5910dwCupsMagenta => new(_haContext, "sensor.brother_mfc_j5910dw_cups_magenta");
    ///<summary>Brother MFC-J5910DW CUPS Yellow</summary>
    public NumericSensorEntity BrotherMfcJ5910dwCupsYellow => new(_haContext, "sensor.brother_mfc_j5910dw_cups_yellow");
    ///<summary>Cellar Door Light Current</summary>
    public NumericSensorEntity CellarDoorLightCurrent => new(_haContext, "sensor.cellar_door_light_current");
    ///<summary>Cellar Door Light Energy</summary>
    public NumericSensorEntity CellarDoorLightEnergy => new(_haContext, "sensor.cellar_door_light_energy");
    ///<summary>Cellar Door Light Frequency</summary>
    public NumericSensorEntity CellarDoorLightFrequency => new(_haContext, "sensor.cellar_door_light_frequency");
    ///<summary>Cellar Door Light Power</summary>
    public NumericSensorEntity CellarDoorLightPower => new(_haContext, "sensor.cellar_door_light_power");
    ///<summary>Cellar Door Light Temperature</summary>
    public NumericSensorEntity CellarDoorLightTemperature => new(_haContext, "sensor.cellar_door_light_temperature");
    ///<summary>Cellar Door Light Voltage</summary>
    public NumericSensorEntity CellarDoorLightVoltage => new(_haContext, "sensor.cellar_door_light_voltage");
    ///<summary>claire Active calories burnt today</summary>
    public NumericSensorEntity ClaireActiveCaloriesBurntToday => new(_haContext, "sensor.claire_active_calories_burnt_today");
    ///<summary>claire Active time today</summary>
    public NumericSensorEntity ClaireActiveTimeToday => new(_haContext, "sensor.claire_active_time_today");
    ///<summary>claire Average heart rate</summary>
    public NumericSensorEntity ClaireAverageHeartRate => new(_haContext, "sensor.claire_average_heart_rate");
    ///<summary>claire Average respiratory rate</summary>
    public NumericSensorEntity ClaireAverageRespiratoryRate => new(_haContext, "sensor.claire_average_respiratory_rate");
    ///<summary>claire Calories burnt last workout</summary>
    public NumericSensorEntity ClaireCaloriesBurntLastWorkout => new(_haContext, "sensor.claire_calories_burnt_last_workout");
    ///<summary>claire Deep sleep</summary>
    public NumericSensorEntity ClaireDeepSleep => new(_haContext, "sensor.claire_deep_sleep");
    ///<summary>claire Distance travelled last workout</summary>
    public NumericSensorEntity ClaireDistanceTravelledLastWorkout => new(_haContext, "sensor.claire_distance_travelled_last_workout");
    ///<summary>claire Distance travelled today</summary>
    public NumericSensorEntity ClaireDistanceTravelledToday => new(_haContext, "sensor.claire_distance_travelled_today");
    ///<summary>claire Elevation change last workout</summary>
    public NumericSensorEntity ClaireElevationChangeLastWorkout => new(_haContext, "sensor.claire_elevation_change_last_workout");
    ///<summary>claire Elevation change today</summary>
    public NumericSensorEntity ClaireElevationChangeToday => new(_haContext, "sensor.claire_elevation_change_today");
    ///<summary>claire Intense activity today</summary>
    public NumericSensorEntity ClaireIntenseActivityToday => new(_haContext, "sensor.claire_intense_activity_today");
    ///<summary>claire Last workout duration</summary>
    public NumericSensorEntity ClaireLastWorkoutDuration => new(_haContext, "sensor.claire_last_workout_duration");
    ///<summary>claire Light sleep</summary>
    public NumericSensorEntity ClaireLightSleep => new(_haContext, "sensor.claire_light_sleep");
    ///<summary>claire Maximum heart rate</summary>
    public NumericSensorEntity ClaireMaximumHeartRate => new(_haContext, "sensor.claire_maximum_heart_rate");
    ///<summary>claire Maximum respiratory rate</summary>
    public NumericSensorEntity ClaireMaximumRespiratoryRate => new(_haContext, "sensor.claire_maximum_respiratory_rate");
    ///<summary>claire Minimum heart rate</summary>
    public NumericSensorEntity ClaireMinimumHeartRate => new(_haContext, "sensor.claire_minimum_heart_rate");
    ///<summary>claire Minimum respiratory rate</summary>
    public NumericSensorEntity ClaireMinimumRespiratoryRate => new(_haContext, "sensor.claire_minimum_respiratory_rate");
    ///<summary>claire Moderate activity today</summary>
    public NumericSensorEntity ClaireModerateActivityToday => new(_haContext, "sensor.claire_moderate_activity_today");
    ///<summary>claire Pause during last workout</summary>
    public NumericSensorEntity ClairePauseDuringLastWorkout => new(_haContext, "sensor.claire_pause_during_last_workout");
    ///<summary>claire REM sleep</summary>
    public NumericSensorEntity ClaireRemSleep => new(_haContext, "sensor.claire_rem_sleep");
    ///<summary>claire Sleep score</summary>
    public NumericSensorEntity ClaireSleepScore => new(_haContext, "sensor.claire_sleep_score");
    ///<summary>claire Soft activity today</summary>
    public NumericSensorEntity ClaireSoftActivityToday => new(_haContext, "sensor.claire_soft_activity_today");
    ///<summary>claire Steps today</summary>
    public NumericSensorEntity ClaireStepsToday => new(_haContext, "sensor.claire_steps_today");
    ///<summary>claire Time to sleep</summary>
    public NumericSensorEntity ClaireTimeToSleep => new(_haContext, "sensor.claire_time_to_sleep");
    ///<summary>claire Time to wakeup</summary>
    public NumericSensorEntity ClaireTimeToWakeup => new(_haContext, "sensor.claire_time_to_wakeup");
    ///<summary>claire Total calories burnt today</summary>
    public NumericSensorEntity ClaireTotalCaloriesBurntToday => new(_haContext, "sensor.claire_total_calories_burnt_today");
    ///<summary>claire Wakeup count</summary>
    public NumericSensorEntity ClaireWakeupCount => new(_haContext, "sensor.claire_wakeup_count");
    ///<summary>claire Wakeup time</summary>
    public NumericSensorEntity ClaireWakeupTime => new(_haContext, "sensor.claire_wakeup_time");
    ///<summary>claireiphone Watch Battery</summary>
    public NumericSensorEntity ClaireiphoneWatchBattery => new(_haContext, "sensor.claireiphone_watch_battery");
    ///<summary>Claire’s iPhone Average Active Pace</summary>
    public NumericSensorEntity ClairesIphoneAverageActivePace => new(_haContext, "sensor.claires_iphone_average_active_pace");
    ///<summary>Claire’s iPhone Battery Level</summary>
    public NumericSensorEntity ClairesIphoneBatteryLevel => new(_haContext, "sensor.claires_iphone_battery_level");
    ///<summary>Claire’s iPhone Distance</summary>
    public NumericSensorEntity ClairesIphoneDistance => new(_haContext, "sensor.claires_iphone_distance");
    ///<summary>Claire’s iPhone Floors Ascended</summary>
    public NumericSensorEntity ClairesIphoneFloorsAscended => new(_haContext, "sensor.claires_iphone_floors_ascended");
    ///<summary>Claire’s iPhone Floors Descended</summary>
    public NumericSensorEntity ClairesIphoneFloorsDescended => new(_haContext, "sensor.claires_iphone_floors_descended");
    ///<summary>Claire’s iPhone Steps</summary>
    public NumericSensorEntity ClairesIphoneSteps => new(_haContext, "sensor.claires_iphone_steps");
    ///<summary>Claire’s iPhone Storage</summary>
    public NumericSensorEntity ClairesIphoneStorage => new(_haContext, "sensor.claires_iphone_storage");
    ///<summary>Electricity Maps CO2 intensity</summary>
    public NumericSensorEntity Co2Intensity => new(_haContext, "sensor.co2_intensity");
    ///<summary>Cold Frame current</summary>
    public NumericSensorEntity ColdFrameCurrent => new(_haContext, "sensor.cold_frame_current");
    ///<summary>Cold Frame device temperature</summary>
    public NumericSensorEntity ColdFrameDeviceTemperature => new(_haContext, "sensor.cold_frame_device_temperature");
    ///<summary>Cold Frame energy</summary>
    public NumericSensorEntity ColdFrameEnergy => new(_haContext, "sensor.cold_frame_energy");
    ///<summary>Cold Frame frequency</summary>
    public NumericSensorEntity ColdFrameFrequency => new(_haContext, "sensor.cold_frame_frequency");
    ///<summary>Cold Frame power</summary>
    public NumericSensorEntity ColdFramePower => new(_haContext, "sensor.cold_frame_power");
    ///<summary>Cold Frame voltage</summary>
    public NumericSensorEntity ColdFrameVoltage => new(_haContext, "sensor.cold_frame_voltage");
    ///<summary>Decking Socket Current</summary>
    public NumericSensorEntity DeckingSocketCurrent => new(_haContext, "sensor.decking_socket_current");
    ///<summary>Decking Socket device temperature</summary>
    public NumericSensorEntity DeckingSocketDeviceTemperature => new(_haContext, "sensor.decking_socket_device_temperature");
    ///<summary>Decking Socket energy</summary>
    public NumericSensorEntity DeckingSocketEnergy => new(_haContext, "sensor.decking_socket_energy");
    ///<summary>Decking Socket Frequency</summary>
    public NumericSensorEntity DeckingSocketFrequency => new(_haContext, "sensor.decking_socket_frequency");
    ///<summary>Decking Socket power</summary>
    public NumericSensorEntity DeckingSocketPower => new(_haContext, "sensor.decking_socket_power");
    ///<summary>Decking Socket Voltage</summary>
    public NumericSensorEntity DeckingSocketVoltage => new(_haContext, "sensor.decking_socket_voltage");
    ///<summary>Decking Wall Light current</summary>
    public NumericSensorEntity DeckingWallLightCurrent => new(_haContext, "sensor.decking_wall_light_current");
    ///<summary>Decking Wall Light device temperature</summary>
    public NumericSensorEntity DeckingWallLightDeviceTemperature => new(_haContext, "sensor.decking_wall_light_device_temperature");
    ///<summary>Decking Wall Light energy</summary>
    public NumericSensorEntity DeckingWallLightEnergy => new(_haContext, "sensor.decking_wall_light_energy");
    ///<summary>Decking Wall Light frequency</summary>
    public NumericSensorEntity DeckingWallLightFrequency => new(_haContext, "sensor.decking_wall_light_frequency");
    ///<summary>Decking Wall Light power</summary>
    public NumericSensorEntity DeckingWallLightPower => new(_haContext, "sensor.decking_wall_light_power");
    ///<summary>Decking Wall Light voltage</summary>
    public NumericSensorEntity DeckingWallLightVoltage => new(_haContext, "sensor.decking_wall_light_voltage");
    ///<summary>Dining Room Switch Battery</summary>
    public NumericSensorEntity DiningRoomSwitchBattery => new(_haContext, "sensor.dining_room_switch_battery");
    ///<summary>Doorbell Doorbell Uptime</summary>
    public NumericSensorEntity DoorbellUptime => new(_haContext, "sensor.doorbell_uptime");
    ///<summary>Doorbell Doorbell WiFi Signal</summary>
    public NumericSensorEntity DoorbellWifiSignal => new(_haContext, "sensor.doorbell_wifi_signal");
    ///<summary>Downstairs Humidity</summary>
    public NumericSensorEntity DownstairsHumidity => new(_haContext, "sensor.downstairs_humidity");
    ///<summary>Downstairs Target Temperature</summary>
    public NumericSensorEntity DownstairsTargetTemperature => new(_haContext, "sensor.downstairs_target_temperature");
    ///<summary>Downstairs Temperature</summary>
    public NumericSensorEntity DownstairsTemperature => new(_haContext, "sensor.downstairs_temperature");
    ///<summary>Drawing Room Switch Battery</summary>
    public NumericSensorEntity DrawingRoomSwitchBattery => new(_haContext, "sensor.drawing_room_switch_battery");
    ///<summary>Dressing Room Light current</summary>
    public NumericSensorEntity DressingRoomLightCurrent => new(_haContext, "sensor.dressing_room_light_current");
    ///<summary>Dressing Room Light device temperature</summary>
    public NumericSensorEntity DressingRoomLightDeviceTemperature => new(_haContext, "sensor.dressing_room_light_device_temperature");
    ///<summary>Dressing Room Light energy</summary>
    public NumericSensorEntity DressingRoomLightEnergy => new(_haContext, "sensor.dressing_room_light_energy");
    ///<summary>Dressing Room Light frequency</summary>
    public NumericSensorEntity DressingRoomLightFrequency => new(_haContext, "sensor.dressing_room_light_frequency");
    ///<summary>Dressing Room Light power</summary>
    public NumericSensorEntity DressingRoomLightPower => new(_haContext, "sensor.dressing_room_light_power");
    ///<summary>Dressing Room Light voltage</summary>
    public NumericSensorEntity DressingRoomLightVoltage => new(_haContext, "sensor.dressing_room_light_voltage");
    ///<summary>Dressing Room Switch Battery</summary>
    public NumericSensorEntity DressingRoomSwitchBattery => new(_haContext, "sensor.dressing_room_switch_battery");
    ///<summary>Estimated Distance</summary>
    public NumericSensorEntity E20a39f473f54bc4186417d1ad07a962151062235247d4EstimatedDistance => new(_haContext, "sensor.e20a39f4_73f5_4bc4_1864_17d1ad07a962_15106_22352_47d4_estimated_distance");
    ///<summary>Estimated Distance</summary>
    public NumericSensorEntity E20a39f473f54bc4186417d1ad07a9623810829772C6d1EstimatedDistance => new(_haContext, "sensor.e20a39f4_73f5_4bc4_1864_17d1ad07a962_38108_29772_c6d1_estimated_distance");
    ///<summary>Estimated Distance</summary>
    public NumericSensorEntity E20a39f473f54bc4186417d1ad07a9623941038168df7EstimatedDistance => new(_haContext, "sensor.e20a39f4_73f5_4bc4_1864_17d1ad07a962_39410_3816_8df7_estimated_distance");
    ///<summary>Estimated Distance</summary>
    public NumericSensorEntity E20a39f473f54bc4186417d1ad07a9624040050805F0e9EstimatedDistance => new(_haContext, "sensor.e20a39f4_73f5_4bc4_1864_17d1ad07a962_40400_50805_f0e9_estimated_distance");
    ///<summary>Estimated Distance</summary>
    public NumericSensorEntity E20a39f473f54bc4186417d1ad07a96262393370145f81EstimatedDistance => new(_haContext, "sensor.e20a39f4_73f5_4bc4_1864_17d1ad07a962_62393_37014_5f81_estimated_distance");
    ///<summary>Estimated Distance</summary>
    public NumericSensorEntity E2c56db5Dffb48d2B060D0f5a71096e000EstimatedDistance => new(_haContext, "sensor.e2c56db5_dffb_48d2_b060_d0f5a71096e0_0_0_estimated_distance");
    ///<summary>Electric Cabinet Door Battery</summary>
    public NumericSensorEntity ElectricCabinetDoorBattery => new(_haContext, "sensor.electric_cabinet_door_battery");
    ///<summary>Electric Cabinet Door Linkquality</summary>
    public NumericSensorEntity ElectricCabinetDoorLinkquality => new(_haContext, "sensor.electric_cabinet_door_linkquality");
    ///<summary>Electric Cabinet Door Voltage</summary>
    public NumericSensorEntity ElectricCabinetDoorVoltage => new(_haContext, "sensor.electric_cabinet_door_voltage");
    ///<summary>Electric Cabinet Light current</summary>
    public NumericSensorEntity ElectricCabinetLightCurrent => new(_haContext, "sensor.electric_cabinet_light_current");
    ///<summary>Electric Cabinet Light device temperature</summary>
    public NumericSensorEntity ElectricCabinetLightDeviceTemperature => new(_haContext, "sensor.electric_cabinet_light_device_temperature");
    ///<summary>Electric Cabinet Light energy</summary>
    public NumericSensorEntity ElectricCabinetLightEnergy => new(_haContext, "sensor.electric_cabinet_light_energy");
    ///<summary>Electric Cabinet Light frequency</summary>
    public NumericSensorEntity ElectricCabinetLightFrequency => new(_haContext, "sensor.electric_cabinet_light_frequency");
    ///<summary>Electric Cabinet Light power</summary>
    public NumericSensorEntity ElectricCabinetLightPower => new(_haContext, "sensor.electric_cabinet_light_power");
    ///<summary>Electric Cabinet Light voltage</summary>
    public NumericSensorEntity ElectricCabinetLightVoltage => new(_haContext, "sensor.electric_cabinet_light_voltage");
    ///<summary>Black ink</summary>
    public NumericSensorEntity EpsonXp950SeriesBlackInk => new(_haContext, "sensor.epson_xp_950_series_black_ink");
    ///<summary>Cyan ink</summary>
    public NumericSensorEntity EpsonXp950SeriesCyanInk => new(_haContext, "sensor.epson_xp_950_series_cyan_ink");
    ///<summary>Light Cyan ink</summary>
    public NumericSensorEntity EpsonXp950SeriesLightCyanInk => new(_haContext, "sensor.epson_xp_950_series_light_cyan_ink");
    ///<summary>Light Magenta ink</summary>
    public NumericSensorEntity EpsonXp950SeriesLightMagentaInk => new(_haContext, "sensor.epson_xp_950_series_light_magenta_ink");
    ///<summary>Magenta ink</summary>
    public NumericSensorEntity EpsonXp950SeriesMagentaInk => new(_haContext, "sensor.epson_xp_950_series_magenta_ink");
    ///<summary>Yellow ink</summary>
    public NumericSensorEntity EpsonXp950SeriesYellowInk => new(_haContext, "sensor.epson_xp_950_series_yellow_ink");
    ///<summary>ESPresense Bedroom ESPresense Bedroom Free Mem</summary>
    public NumericSensorEntity EspresenseBedroomFreeMemory => new(_haContext, "sensor.espresense_bedroom_free_memory");
    ///<summary>ESPresense Bedroom ESPresense Bedroom Uptime</summary>
    public NumericSensorEntity EspresenseBedroomUptime => new(_haContext, "sensor.espresense_bedroom_uptime");
    ///<summary>ESPresense Kitchen Free Mem</summary>
    public NumericSensorEntity EspresenseKitchenFreeMemory => new(_haContext, "sensor.espresense_kitchen_free_memory");
    ///<summary>ESPresense Kitchen Uptime</summary>
    public NumericSensorEntity EspresenseKitchenUptime => new(_haContext, "sensor.espresense_kitchen_uptime");
    ///<summary>ESPresense Lounge ESPresense Lounge Free Mem</summary>
    public NumericSensorEntity EspresenseLoungeFreeMemory => new(_haContext, "sensor.espresense_lounge_free_memory");
    ///<summary>ESPresense Lounge ESPresense Lounge Uptime</summary>
    public NumericSensorEntity EspresenseLoungeUptime => new(_haContext, "sensor.espresense_lounge_uptime");
    ///<summary>ESPresense Snug ESPresense Snug Free Mem</summary>
    public NumericSensorEntity EspresenseSnugFreeMem => new(_haContext, "sensor.espresense_snug_free_mem");
    ///<summary>ESPresense Snug ESPresense Snug Uptime</summary>
    public NumericSensorEntity EspresenseSnugUptime => new(_haContext, "sensor.espresense_snug_uptime");
    ///<summary>Fence Lights Current</summary>
    public NumericSensorEntity FenceLightsCurrent => new(_haContext, "sensor.fence_lights_current");
    ///<summary>Fence Lights device temperature</summary>
    public NumericSensorEntity FenceLightsDeviceTemperature => new(_haContext, "sensor.fence_lights_device_temperature");
    ///<summary>Fence Lights energy</summary>
    public NumericSensorEntity FenceLightsEnergy => new(_haContext, "sensor.fence_lights_energy");
    ///<summary>Fence Lights Frequency</summary>
    public NumericSensorEntity FenceLightsFrequency => new(_haContext, "sensor.fence_lights_frequency");
    ///<summary>Fence Lights power</summary>
    public NumericSensorEntity FenceLightsPower => new(_haContext, "sensor.fence_lights_power");
    ///<summary>Fence Lights Voltage</summary>
    public NumericSensorEntity FenceLightsVoltage => new(_haContext, "sensor.fence_lights_voltage");
    ///<summary>Fermenter Current Temperature</summary>
    public NumericSensorEntity FermenterCurrentTemperature => new(_haContext, "sensor.fermenter_current_temperature");
    ///<summary>Fermenter Target Temperature</summary>
    public NumericSensorEntity FermenterTargetTemperature => new(_haContext, "sensor.fermenter_target_temperature");
    ///<summary>Front Door Battery</summary>
    public NumericSensorEntity FrontDoorBattery => new(_haContext, "sensor.front_door_battery");
    ///<summary>Front Door Linkquality</summary>
    public NumericSensorEntity FrontDoorLinkquality => new(_haContext, "sensor.front_door_linkquality");
    ///<summary>Front Door Voltage</summary>
    public NumericSensorEntity FrontDoorVoltage => new(_haContext, "sensor.front_door_voltage");
    ///<summary>Garden Sockets Current</summary>
    public NumericSensorEntity GardenSocketsCurrent => new(_haContext, "sensor.garden_sockets_current");
    ///<summary>Garden Sockets device temperature</summary>
    public NumericSensorEntity GardenSocketsDeviceTemperature => new(_haContext, "sensor.garden_sockets_device_temperature");
    ///<summary>Garden Sockets energy</summary>
    public NumericSensorEntity GardenSocketsEnergy => new(_haContext, "sensor.garden_sockets_energy");
    ///<summary>Garden Sockets Frequency</summary>
    public NumericSensorEntity GardenSocketsFrequency => new(_haContext, "sensor.garden_sockets_frequency");
    ///<summary>Garden Sockets power</summary>
    public NumericSensorEntity GardenSocketsPower => new(_haContext, "sensor.garden_sockets_power");
    ///<summary>Garden Sockets Voltage</summary>
    public NumericSensorEntity GardenSocketsVoltage => new(_haContext, "sensor.garden_sockets_voltage");
    ///<summary>Garden Tap Battery</summary>
    public NumericSensorEntity GardenTapBattery => new(_haContext, "sensor.garden_tap_battery");
    ///<summary>Garden Tap Flow</summary>
    public NumericSensorEntity GardenTapFlow => new(_haContext, "sensor.garden_tap_flow");
    ///<summary>Gate Socket Current</summary>
    public NumericSensorEntity GateSocketCurrent => new(_haContext, "sensor.gate_socket_current");
    ///<summary>Gate Socket device temperature</summary>
    public NumericSensorEntity GateSocketDeviceTemperature => new(_haContext, "sensor.gate_socket_device_temperature");
    ///<summary>Gate Socket energy</summary>
    public NumericSensorEntity GateSocketEnergy => new(_haContext, "sensor.gate_socket_energy");
    ///<summary>Gate Socket Frequency</summary>
    public NumericSensorEntity GateSocketFrequency => new(_haContext, "sensor.gate_socket_frequency");
    ///<summary>Gate Socket power</summary>
    public NumericSensorEntity GateSocketPower => new(_haContext, "sensor.gate_socket_power");
    ///<summary>Gate Socket Voltage</summary>
    public NumericSensorEntity GateSocketVoltage => new(_haContext, "sensor.gate_socket_voltage");
    ///<summary>Battery</summary>
    public NumericSensorEntity GeniusX47aeBattery => new(_haContext, "sensor.genius_x_47ae_battery");
    ///<summary>Electricity Maps Grid fossil fuel percentage</summary>
    public NumericSensorEntity GridFossilFuelPercentage => new(_haContext, "sensor.grid_fossil_fuel_percentage");
    ///<summary>Guest Room Bedside Switch Battery</summary>
    public NumericSensorEntity GuestRoomBedsideSwitchBattery => new(_haContext, "sensor.guest_room_bedside_switch_battery");
    ///<summary>Guest Room Illuminence</summary>
    public NumericSensorEntity GuestRoomIlluminence => new(_haContext, "sensor.guest_room_illuminence");
    ///<summary>Guest Room Light current</summary>
    public NumericSensorEntity GuestRoomLightCurrent => new(_haContext, "sensor.guest_room_light_current");
    ///<summary>Guest Room Light device temperature</summary>
    public NumericSensorEntity GuestRoomLightDeviceTemperature => new(_haContext, "sensor.guest_room_light_device_temperature");
    ///<summary>Guest Room Light energy</summary>
    public NumericSensorEntity GuestRoomLightEnergy => new(_haContext, "sensor.guest_room_light_energy");
    ///<summary>Guest Room Light frequency</summary>
    public NumericSensorEntity GuestRoomLightFrequency => new(_haContext, "sensor.guest_room_light_frequency");
    ///<summary>Guest Room Light power</summary>
    public NumericSensorEntity GuestRoomLightPower => new(_haContext, "sensor.guest_room_light_power");
    ///<summary>Guest Room Light voltage</summary>
    public NumericSensorEntity GuestRoomLightVoltage => new(_haContext, "sensor.guest_room_light_voltage");
    ///<summary>Guest Room Remote Battery</summary>
    public NumericSensorEntity GuestRoomRemoteBattery => new(_haContext, "sensor.guest_room_remote_battery");
    ///<summary>Guest Room Switch Battery</summary>
    public NumericSensorEntity GuestRoomSwitchBattery => new(_haContext, "sensor.guest_room_switch_battery");
    ///<summary>Hallway Camera Disk write rate</summary>
    public NumericSensorEntity HallwayCameraDiskWriteRate => new(_haContext, "sensor.hallway_camera_disk_write_rate");
    ///<summary>Hallway Camera Microphone level</summary>
    public NumericSensorEntity HallwayCameraMicrophoneLevel => new(_haContext, "sensor.hallway_camera_microphone_level");
    ///<summary>Hallway Camera Storage used</summary>
    public NumericSensorEntity HallwayCameraStorageUsed => new(_haContext, "sensor.hallway_camera_storage_used");
    ///<summary>Hallway Light current</summary>
    public NumericSensorEntity HallwayLightCurrent => new(_haContext, "sensor.hallway_light_current");
    ///<summary>Hallway Light device temperature</summary>
    public NumericSensorEntity HallwayLightDeviceTemperature => new(_haContext, "sensor.hallway_light_device_temperature");
    ///<summary>Hallway Light energy</summary>
    public NumericSensorEntity HallwayLightEnergy => new(_haContext, "sensor.hallway_light_energy");
    ///<summary>Hallway Light frequency</summary>
    public NumericSensorEntity HallwayLightFrequency => new(_haContext, "sensor.hallway_light_frequency");
    ///<summary>Hallway Light power</summary>
    public NumericSensorEntity HallwayLightPower => new(_haContext, "sensor.hallway_light_power");
    ///<summary>Hallway Light voltage</summary>
    public NumericSensorEntity HallwayLightVoltage => new(_haContext, "sensor.hallway_light_voltage");
    ///<summary>Hallway Tablet Battery</summary>
    public NumericSensorEntity HallwayTabletBattery => new(_haContext, "sensor.hallway_tablet_battery");
    ///<summary>Hallway Tablet Free memory</summary>
    public NumericSensorEntity HallwayTabletFreeMemory => new(_haContext, "sensor.hallway_tablet_free_memory");
    ///<summary>Hallway Tablet Internal storage free space</summary>
    public NumericSensorEntity HallwayTabletInternalStorageFreeSpace => new(_haContext, "sensor.hallway_tablet_internal_storage_free_space");
    ///<summary>Hallway Tablet Internal storage total space</summary>
    public NumericSensorEntity HallwayTabletInternalStorageTotalSpace => new(_haContext, "sensor.hallway_tablet_internal_storage_total_space");
    ///<summary>Hallway Tablet Total memory</summary>
    public NumericSensorEntity HallwayTabletTotalMemory => new(_haContext, "sensor.hallway_tablet_total_memory");
    ///<summary>Hifi Socket current</summary>
    public NumericSensorEntity HifiSocketCurrent => new(_haContext, "sensor.hifi_socket_current");
    ///<summary>Hifi Socket device temperature</summary>
    public NumericSensorEntity HifiSocketDeviceTemperature => new(_haContext, "sensor.hifi_socket_device_temperature");
    ///<summary>Hifi Socket energy</summary>
    public NumericSensorEntity HifiSocketEnergy => new(_haContext, "sensor.hifi_socket_energy");
    ///<summary>Hifi Socket frequency</summary>
    public NumericSensorEntity HifiSocketFrequency => new(_haContext, "sensor.hifi_socket_frequency");
    ///<summary>Hifi Socket power</summary>
    public NumericSensorEntity HifiSocketPower => new(_haContext, "sensor.hifi_socket_power");
    ///<summary>Hifi Socket voltage</summary>
    public NumericSensorEntity HifiSocketVoltage => new(_haContext, "sensor.hifi_socket_voltage");
    ///<summary>Home Andy Distance</summary>
    public NumericSensorEntity HomeAndyDistance => new(_haContext, "sensor.home_andy_distance");
    ///<summary>Home Apparent temperature</summary>
    public NumericSensorEntity HomeApparentTemperature => new(_haContext, "sensor.home_apparent_temperature");
    ///<summary>Home Assistant Supervisor CPU percent</summary>
    public NumericSensorEntity HomeAssistantSupervisorCpuPercent => new(_haContext, "sensor.home_assistant_supervisor_cpu_percent");
    ///<summary>Home Assistant Supervisor Memory percent</summary>
    public NumericSensorEntity HomeAssistantSupervisorMemoryPercent => new(_haContext, "sensor.home_assistant_supervisor_memory_percent");
    ///<summary>Home Claire Distance</summary>
    public NumericSensorEntity HomeClaireDistance => new(_haContext, "sensor.home_claire_distance");
    ///<summary>Home Cloud ceiling</summary>
    public NumericSensorEntity HomeCloudCeiling => new(_haContext, "sensor.home_cloud_ceiling");
    ///<summary>Home Cloud cover</summary>
    public NumericSensorEntity HomeCloudCover => new(_haContext, "sensor.home_cloud_cover");
    ///<summary>Home Cloud cover day 1</summary>
    public NumericSensorEntity HomeCloudCoverDay1 => new(_haContext, "sensor.home_cloud_cover_day_1");
    ///<summary>Home Cloud cover day 2</summary>
    public NumericSensorEntity HomeCloudCoverDay2 => new(_haContext, "sensor.home_cloud_cover_day_2");
    ///<summary>Home Cloud cover day 3</summary>
    public NumericSensorEntity HomeCloudCoverDay3 => new(_haContext, "sensor.home_cloud_cover_day_3");
    ///<summary>Home Cloud cover day 4</summary>
    public NumericSensorEntity HomeCloudCoverDay4 => new(_haContext, "sensor.home_cloud_cover_day_4");
    ///<summary>Home Cloud cover night 1</summary>
    public NumericSensorEntity HomeCloudCoverNight1 => new(_haContext, "sensor.home_cloud_cover_night_1");
    ///<summary>Home Cloud cover night 2</summary>
    public NumericSensorEntity HomeCloudCoverNight2 => new(_haContext, "sensor.home_cloud_cover_night_2");
    ///<summary>Home Cloud cover night 3</summary>
    public NumericSensorEntity HomeCloudCoverNight3 => new(_haContext, "sensor.home_cloud_cover_night_3");
    ///<summary>Home Cloud cover night 4</summary>
    public NumericSensorEntity HomeCloudCoverNight4 => new(_haContext, "sensor.home_cloud_cover_night_4");
    ///<summary>Home Cloud cover day 0</summary>
    public NumericSensorEntity HomeCloudCoverToday => new(_haContext, "sensor.home_cloud_cover_today");
    ///<summary>Home Cloud cover night 0</summary>
    public NumericSensorEntity HomeCloudCoverTonight => new(_haContext, "sensor.home_cloud_cover_tonight");
    ///<summary>Home Dew point</summary>
    public NumericSensorEntity HomeDewPoint => new(_haContext, "sensor.home_dew_point");
    ///<summary>Home Grass pollen day 1</summary>
    public NumericSensorEntity HomeGrassPollenDay1 => new(_haContext, "sensor.home_grass_pollen_day_1");
    ///<summary>Home Grass pollen day 2</summary>
    public NumericSensorEntity HomeGrassPollenDay2 => new(_haContext, "sensor.home_grass_pollen_day_2");
    ///<summary>Home Grass pollen day 3</summary>
    public NumericSensorEntity HomeGrassPollenDay3 => new(_haContext, "sensor.home_grass_pollen_day_3");
    ///<summary>Home Grass pollen day 4</summary>
    public NumericSensorEntity HomeGrassPollenDay4 => new(_haContext, "sensor.home_grass_pollen_day_4");
    ///<summary>Home Grass pollen day 0</summary>
    public NumericSensorEntity HomeGrassPollenToday => new(_haContext, "sensor.home_grass_pollen_today");
    ///<summary>Home Hours of sun day 1</summary>
    public NumericSensorEntity HomeHoursOfSunDay1 => new(_haContext, "sensor.home_hours_of_sun_day_1");
    ///<summary>Home Hours of sun day 2</summary>
    public NumericSensorEntity HomeHoursOfSunDay2 => new(_haContext, "sensor.home_hours_of_sun_day_2");
    ///<summary>Home Hours of sun day 3</summary>
    public NumericSensorEntity HomeHoursOfSunDay3 => new(_haContext, "sensor.home_hours_of_sun_day_3");
    ///<summary>Home Hours of sun day 4</summary>
    public NumericSensorEntity HomeHoursOfSunDay4 => new(_haContext, "sensor.home_hours_of_sun_day_4");
    ///<summary>Home Hours of sun day 0</summary>
    public NumericSensorEntity HomeHoursOfSunToday => new(_haContext, "sensor.home_hours_of_sun_today");
    ///<summary>Home Mold pollen day 1</summary>
    public NumericSensorEntity HomeMoldPollenDay1 => new(_haContext, "sensor.home_mold_pollen_day_1");
    ///<summary>Home Mold pollen day 2</summary>
    public NumericSensorEntity HomeMoldPollenDay2 => new(_haContext, "sensor.home_mold_pollen_day_2");
    ///<summary>Home Mold pollen day 3</summary>
    public NumericSensorEntity HomeMoldPollenDay3 => new(_haContext, "sensor.home_mold_pollen_day_3");
    ///<summary>Home Mold pollen day 4</summary>
    public NumericSensorEntity HomeMoldPollenDay4 => new(_haContext, "sensor.home_mold_pollen_day_4");
    ///<summary>Home Mold pollen day 0</summary>
    public NumericSensorEntity HomeMoldPollenToday => new(_haContext, "sensor.home_mold_pollen_today");
    ///<summary>Home Nearest distance</summary>
    public NumericSensorEntity HomeNearestDistance => new(_haContext, "sensor.home_nearest_distance");
    ///<summary>Home Precipitation</summary>
    public NumericSensorEntity HomePrecipitation => new(_haContext, "sensor.home_precipitation");
    ///<summary>Home Ragweed pollen day 1</summary>
    public NumericSensorEntity HomeRagweedPollenDay1 => new(_haContext, "sensor.home_ragweed_pollen_day_1");
    ///<summary>Home Ragweed pollen day 2</summary>
    public NumericSensorEntity HomeRagweedPollenDay2 => new(_haContext, "sensor.home_ragweed_pollen_day_2");
    ///<summary>Home Ragweed pollen day 3</summary>
    public NumericSensorEntity HomeRagweedPollenDay3 => new(_haContext, "sensor.home_ragweed_pollen_day_3");
    ///<summary>Home Ragweed pollen day 4</summary>
    public NumericSensorEntity HomeRagweedPollenDay4 => new(_haContext, "sensor.home_ragweed_pollen_day_4");
    ///<summary>Home Ragweed pollen day 0</summary>
    public NumericSensorEntity HomeRagweedPollenToday => new(_haContext, "sensor.home_ragweed_pollen_today");
    ///<summary>Home RealFeel temperature</summary>
    public NumericSensorEntity HomeRealfeelTemperature => new(_haContext, "sensor.home_realfeel_temperature");
    ///<summary>Home RealFeel temperature max day 1</summary>
    public NumericSensorEntity HomeRealfeelTemperatureMaxDay1 => new(_haContext, "sensor.home_realfeel_temperature_max_day_1");
    ///<summary>Home RealFeel temperature max day 2</summary>
    public NumericSensorEntity HomeRealfeelTemperatureMaxDay2 => new(_haContext, "sensor.home_realfeel_temperature_max_day_2");
    ///<summary>Home RealFeel temperature max day 3</summary>
    public NumericSensorEntity HomeRealfeelTemperatureMaxDay3 => new(_haContext, "sensor.home_realfeel_temperature_max_day_3");
    ///<summary>Home RealFeel temperature max day 4</summary>
    public NumericSensorEntity HomeRealfeelTemperatureMaxDay4 => new(_haContext, "sensor.home_realfeel_temperature_max_day_4");
    ///<summary>Home RealFeel temperature max day 0</summary>
    public NumericSensorEntity HomeRealfeelTemperatureMaxToday => new(_haContext, "sensor.home_realfeel_temperature_max_today");
    ///<summary>Home RealFeel temperature min day 1</summary>
    public NumericSensorEntity HomeRealfeelTemperatureMinDay1 => new(_haContext, "sensor.home_realfeel_temperature_min_day_1");
    ///<summary>Home RealFeel temperature min day 2</summary>
    public NumericSensorEntity HomeRealfeelTemperatureMinDay2 => new(_haContext, "sensor.home_realfeel_temperature_min_day_2");
    ///<summary>Home RealFeel temperature min day 3</summary>
    public NumericSensorEntity HomeRealfeelTemperatureMinDay3 => new(_haContext, "sensor.home_realfeel_temperature_min_day_3");
    ///<summary>Home RealFeel temperature min day 4</summary>
    public NumericSensorEntity HomeRealfeelTemperatureMinDay4 => new(_haContext, "sensor.home_realfeel_temperature_min_day_4");
    ///<summary>Home RealFeel temperature min day 0</summary>
    public NumericSensorEntity HomeRealfeelTemperatureMinToday => new(_haContext, "sensor.home_realfeel_temperature_min_today");
    ///<summary>Home RealFeel temperature shade</summary>
    public NumericSensorEntity HomeRealfeelTemperatureShade => new(_haContext, "sensor.home_realfeel_temperature_shade");
    ///<summary>Home RealFeel temperature shade max day 1</summary>
    public NumericSensorEntity HomeRealfeelTemperatureShadeMaxDay1 => new(_haContext, "sensor.home_realfeel_temperature_shade_max_day_1");
    ///<summary>Home RealFeel temperature shade max day 2</summary>
    public NumericSensorEntity HomeRealfeelTemperatureShadeMaxDay2 => new(_haContext, "sensor.home_realfeel_temperature_shade_max_day_2");
    ///<summary>Home RealFeel temperature shade max day 3</summary>
    public NumericSensorEntity HomeRealfeelTemperatureShadeMaxDay3 => new(_haContext, "sensor.home_realfeel_temperature_shade_max_day_3");
    ///<summary>Home RealFeel temperature shade max day 4</summary>
    public NumericSensorEntity HomeRealfeelTemperatureShadeMaxDay4 => new(_haContext, "sensor.home_realfeel_temperature_shade_max_day_4");
    ///<summary>Home RealFeel temperature shade max day 0</summary>
    public NumericSensorEntity HomeRealfeelTemperatureShadeMaxToday => new(_haContext, "sensor.home_realfeel_temperature_shade_max_today");
    ///<summary>Home RealFeel temperature shade min day 1</summary>
    public NumericSensorEntity HomeRealfeelTemperatureShadeMinDay1 => new(_haContext, "sensor.home_realfeel_temperature_shade_min_day_1");
    ///<summary>Home RealFeel temperature shade min day 2</summary>
    public NumericSensorEntity HomeRealfeelTemperatureShadeMinDay2 => new(_haContext, "sensor.home_realfeel_temperature_shade_min_day_2");
    ///<summary>Home RealFeel temperature shade min day 3</summary>
    public NumericSensorEntity HomeRealfeelTemperatureShadeMinDay3 => new(_haContext, "sensor.home_realfeel_temperature_shade_min_day_3");
    ///<summary>Home RealFeel temperature shade min day 4</summary>
    public NumericSensorEntity HomeRealfeelTemperatureShadeMinDay4 => new(_haContext, "sensor.home_realfeel_temperature_shade_min_day_4");
    ///<summary>Home RealFeel temperature shade min day 0</summary>
    public NumericSensorEntity HomeRealfeelTemperatureShadeMinToday => new(_haContext, "sensor.home_realfeel_temperature_shade_min_today");
    ///<summary>Home Solar irradiance day 1</summary>
    public NumericSensorEntity HomeSolarIrradianceDay1 => new(_haContext, "sensor.home_solar_irradiance_day_1");
    ///<summary>Home Solar irradiance day 2</summary>
    public NumericSensorEntity HomeSolarIrradianceDay2 => new(_haContext, "sensor.home_solar_irradiance_day_2");
    ///<summary>Home Solar irradiance day 3</summary>
    public NumericSensorEntity HomeSolarIrradianceDay3 => new(_haContext, "sensor.home_solar_irradiance_day_3");
    ///<summary>Home Solar irradiance day 4</summary>
    public NumericSensorEntity HomeSolarIrradianceDay4 => new(_haContext, "sensor.home_solar_irradiance_day_4");
    ///<summary>Home Solar irradiance night 1</summary>
    public NumericSensorEntity HomeSolarIrradianceNight1 => new(_haContext, "sensor.home_solar_irradiance_night_1");
    ///<summary>Home Solar irradiance night 2</summary>
    public NumericSensorEntity HomeSolarIrradianceNight2 => new(_haContext, "sensor.home_solar_irradiance_night_2");
    ///<summary>Home Solar irradiance night 3</summary>
    public NumericSensorEntity HomeSolarIrradianceNight3 => new(_haContext, "sensor.home_solar_irradiance_night_3");
    ///<summary>Home Solar irradiance night 4</summary>
    public NumericSensorEntity HomeSolarIrradianceNight4 => new(_haContext, "sensor.home_solar_irradiance_night_4");
    ///<summary>Home Solar irradiance day 0</summary>
    public NumericSensorEntity HomeSolarIrradianceToday => new(_haContext, "sensor.home_solar_irradiance_today");
    ///<summary>Home Solar irradiance night 0</summary>
    public NumericSensorEntity HomeSolarIrradianceTonight => new(_haContext, "sensor.home_solar_irradiance_tonight");
    ///<summary>Home Thunderstorm probability day 1</summary>
    public NumericSensorEntity HomeThunderstormProbabilityDay1 => new(_haContext, "sensor.home_thunderstorm_probability_day_1");
    ///<summary>Home Thunderstorm probability day 2</summary>
    public NumericSensorEntity HomeThunderstormProbabilityDay2 => new(_haContext, "sensor.home_thunderstorm_probability_day_2");
    ///<summary>Home Thunderstorm probability day 3</summary>
    public NumericSensorEntity HomeThunderstormProbabilityDay3 => new(_haContext, "sensor.home_thunderstorm_probability_day_3");
    ///<summary>Home Thunderstorm probability day 4</summary>
    public NumericSensorEntity HomeThunderstormProbabilityDay4 => new(_haContext, "sensor.home_thunderstorm_probability_day_4");
    ///<summary>Home Thunderstorm probability night 1</summary>
    public NumericSensorEntity HomeThunderstormProbabilityNight1 => new(_haContext, "sensor.home_thunderstorm_probability_night_1");
    ///<summary>Home Thunderstorm probability night 2</summary>
    public NumericSensorEntity HomeThunderstormProbabilityNight2 => new(_haContext, "sensor.home_thunderstorm_probability_night_2");
    ///<summary>Home Thunderstorm probability night 3</summary>
    public NumericSensorEntity HomeThunderstormProbabilityNight3 => new(_haContext, "sensor.home_thunderstorm_probability_night_3");
    ///<summary>Home Thunderstorm probability night 4</summary>
    public NumericSensorEntity HomeThunderstormProbabilityNight4 => new(_haContext, "sensor.home_thunderstorm_probability_night_4");
    ///<summary>Home Thunderstorm probability day 0</summary>
    public NumericSensorEntity HomeThunderstormProbabilityToday => new(_haContext, "sensor.home_thunderstorm_probability_today");
    ///<summary>Home Thunderstorm probability night 0</summary>
    public NumericSensorEntity HomeThunderstormProbabilityTonight => new(_haContext, "sensor.home_thunderstorm_probability_tonight");
    ///<summary>Home Tree pollen day 1</summary>
    public NumericSensorEntity HomeTreePollenDay1 => new(_haContext, "sensor.home_tree_pollen_day_1");
    ///<summary>Home Tree pollen day 2</summary>
    public NumericSensorEntity HomeTreePollenDay2 => new(_haContext, "sensor.home_tree_pollen_day_2");
    ///<summary>Home Tree pollen day 3</summary>
    public NumericSensorEntity HomeTreePollenDay3 => new(_haContext, "sensor.home_tree_pollen_day_3");
    ///<summary>Home Tree pollen day 4</summary>
    public NumericSensorEntity HomeTreePollenDay4 => new(_haContext, "sensor.home_tree_pollen_day_4");
    ///<summary>Home Tree pollen day 0</summary>
    public NumericSensorEntity HomeTreePollenToday => new(_haContext, "sensor.home_tree_pollen_today");
    ///<summary>Home UV index</summary>
    public NumericSensorEntity HomeUvIndex => new(_haContext, "sensor.home_uv_index");
    ///<summary>Home UV index day 1</summary>
    public NumericSensorEntity HomeUvIndexDay1 => new(_haContext, "sensor.home_uv_index_day_1");
    ///<summary>Home UV index day 2</summary>
    public NumericSensorEntity HomeUvIndexDay2 => new(_haContext, "sensor.home_uv_index_day_2");
    ///<summary>Home UV index day 3</summary>
    public NumericSensorEntity HomeUvIndexDay3 => new(_haContext, "sensor.home_uv_index_day_3");
    ///<summary>Home UV index day 4</summary>
    public NumericSensorEntity HomeUvIndexDay4 => new(_haContext, "sensor.home_uv_index_day_4");
    ///<summary>Home UV index day 0</summary>
    public NumericSensorEntity HomeUvIndexToday => new(_haContext, "sensor.home_uv_index_today");
    ///<summary>Home Wet bulb temperature</summary>
    public NumericSensorEntity HomeWetBulbTemperature => new(_haContext, "sensor.home_wet_bulb_temperature");
    ///<summary>Home Wind chill temperature</summary>
    public NumericSensorEntity HomeWindChillTemperature => new(_haContext, "sensor.home_wind_chill_temperature");
    ///<summary>Home Wind gust speed</summary>
    public NumericSensorEntity HomeWindGustSpeed => new(_haContext, "sensor.home_wind_gust_speed");
    ///<summary>Home Wind gust speed day 1</summary>
    public NumericSensorEntity HomeWindGustSpeedDay1 => new(_haContext, "sensor.home_wind_gust_speed_day_1");
    ///<summary>Home Wind gust speed day 2</summary>
    public NumericSensorEntity HomeWindGustSpeedDay2 => new(_haContext, "sensor.home_wind_gust_speed_day_2");
    ///<summary>Home Wind gust speed day 3</summary>
    public NumericSensorEntity HomeWindGustSpeedDay3 => new(_haContext, "sensor.home_wind_gust_speed_day_3");
    ///<summary>Home Wind gust speed day 4</summary>
    public NumericSensorEntity HomeWindGustSpeedDay4 => new(_haContext, "sensor.home_wind_gust_speed_day_4");
    ///<summary>Home Wind gust speed night 1</summary>
    public NumericSensorEntity HomeWindGustSpeedNight1 => new(_haContext, "sensor.home_wind_gust_speed_night_1");
    ///<summary>Home Wind gust speed night 2</summary>
    public NumericSensorEntity HomeWindGustSpeedNight2 => new(_haContext, "sensor.home_wind_gust_speed_night_2");
    ///<summary>Home Wind gust speed night 3</summary>
    public NumericSensorEntity HomeWindGustSpeedNight3 => new(_haContext, "sensor.home_wind_gust_speed_night_3");
    ///<summary>Home Wind gust speed night 4</summary>
    public NumericSensorEntity HomeWindGustSpeedNight4 => new(_haContext, "sensor.home_wind_gust_speed_night_4");
    ///<summary>Home Wind gust speed day 0</summary>
    public NumericSensorEntity HomeWindGustSpeedToday => new(_haContext, "sensor.home_wind_gust_speed_today");
    ///<summary>Home Wind gust speed night 0</summary>
    public NumericSensorEntity HomeWindGustSpeedTonight => new(_haContext, "sensor.home_wind_gust_speed_tonight");
    ///<summary>Home Wind speed</summary>
    public NumericSensorEntity HomeWindSpeed => new(_haContext, "sensor.home_wind_speed");
    ///<summary>Home Wind speed day 1</summary>
    public NumericSensorEntity HomeWindSpeedDay1 => new(_haContext, "sensor.home_wind_speed_day_1");
    ///<summary>Home Wind speed day 2</summary>
    public NumericSensorEntity HomeWindSpeedDay2 => new(_haContext, "sensor.home_wind_speed_day_2");
    ///<summary>Home Wind speed day 3</summary>
    public NumericSensorEntity HomeWindSpeedDay3 => new(_haContext, "sensor.home_wind_speed_day_3");
    ///<summary>Home Wind speed day 4</summary>
    public NumericSensorEntity HomeWindSpeedDay4 => new(_haContext, "sensor.home_wind_speed_day_4");
    ///<summary>Home Wind speed night 1</summary>
    public NumericSensorEntity HomeWindSpeedNight1 => new(_haContext, "sensor.home_wind_speed_night_1");
    ///<summary>Home Wind speed night 2</summary>
    public NumericSensorEntity HomeWindSpeedNight2 => new(_haContext, "sensor.home_wind_speed_night_2");
    ///<summary>Home Wind speed night 3</summary>
    public NumericSensorEntity HomeWindSpeedNight3 => new(_haContext, "sensor.home_wind_speed_night_3");
    ///<summary>Home Wind speed night 4</summary>
    public NumericSensorEntity HomeWindSpeedNight4 => new(_haContext, "sensor.home_wind_speed_night_4");
    ///<summary>Home Wind speed day 0</summary>
    public NumericSensorEntity HomeWindSpeedToday => new(_haContext, "sensor.home_wind_speed_today");
    ///<summary>Home Wind speed night 0</summary>
    public NumericSensorEntity HomeWindSpeedTonight => new(_haContext, "sensor.home_wind_speed_tonight");
    ///<summary>Kitchen Air Quality Humidity</summary>
    public NumericSensorEntity KitchenAirQualityHumidity => new(_haContext, "sensor.kitchen_air_quality_humidity");
    ///<summary>Kitchen Air Quality Linkquality</summary>
    public NumericSensorEntity KitchenAirQualityLinkquality => new(_haContext, "sensor.kitchen_air_quality_linkquality");
    ///<summary>Kitchen Air Quality PM2.5</summary>
    public NumericSensorEntity KitchenAirQualityPm25 => new(_haContext, "sensor.kitchen_air_quality_pm25");
    ///<summary>Kitchen Air Quality Temperature</summary>
    public NumericSensorEntity KitchenAirQualityTemperature => new(_haContext, "sensor.kitchen_air_quality_temperature");
    ///<summary>Kitchen Camera Disk write rate</summary>
    public NumericSensorEntity KitchenCameraDiskWriteRate => new(_haContext, "sensor.kitchen_camera_disk_write_rate");
    ///<summary>Kitchen Camera Microphone level</summary>
    public NumericSensorEntity KitchenCameraMicrophoneLevel => new(_haContext, "sensor.kitchen_camera_microphone_level");
    ///<summary>Kitchen Camera Storage used</summary>
    public NumericSensorEntity KitchenCameraStorageUsed => new(_haContext, "sensor.kitchen_camera_storage_used");
    ///<summary>Kitchen Switch Battery</summary>
    public NumericSensorEntity KitchenSwitchBattery => new(_haContext, "sensor.kitchen_switch_battery");
    ///<summary>Upstairs Spare Light current</summary>
    public NumericSensorEntity LandingLightCurrent => new(_haContext, "sensor.landing_light_current");
    ///<summary>Upstairs Spare Light device temperature</summary>
    public NumericSensorEntity LandingLightDeviceTemperature => new(_haContext, "sensor.landing_light_device_temperature");
    ///<summary>Upstairs Spare Light energy</summary>
    public NumericSensorEntity LandingLightEnergy => new(_haContext, "sensor.landing_light_energy");
    ///<summary>Upstairs Spare Light frequency</summary>
    public NumericSensorEntity LandingLightFrequency => new(_haContext, "sensor.landing_light_frequency");
    ///<summary>Upstairs Spare Light power</summary>
    public NumericSensorEntity LandingLightPower => new(_haContext, "sensor.landing_light_power");
    ///<summary>Upstairs Spare Light voltage</summary>
    public NumericSensorEntity LandingLightVoltage => new(_haContext, "sensor.landing_light_voltage");
    ///<summary>Left Bedside Switch Battery</summary>
    public NumericSensorEntity LeftBedsideSwitchBattery => new(_haContext, "sensor.left_bedside_switch_battery");
    ///<summary>Loft Hatch battery</summary>
    public NumericSensorEntity LoftHatchBattery => new(_haContext, "sensor.loft_hatch_battery");
    ///<summary>Loft Hatch linkquality</summary>
    public NumericSensorEntity LoftHatchLinkquality => new(_haContext, "sensor.loft_hatch_linkquality");
    ///<summary>Loft Hatch voltage</summary>
    public NumericSensorEntity LoftHatchVoltage => new(_haContext, "sensor.loft_hatch_voltage");
    ///<summary>Lounge Illuminance</summary>
    public NumericSensorEntity LoungeIlluminance => new(_haContext, "sensor.lounge_illuminance");
    ///<summary>Lounge Sofa Switch Battery</summary>
    public NumericSensorEntity LoungeSofaSwitchBattery => new(_haContext, "sensor.lounge_sofa_switch_battery");
    ///<summary>Lounge Switch Battery</summary>
    public NumericSensorEntity LoungeSwitchBattery => new(_haContext, "sensor.lounge_switch_battery");
    ///<summary>Lounge TV Energy Meter</summary>
    public NumericSensorEntity LoungeTvEnergyMeter => new(_haContext, "sensor.lounge_tv_energy_meter");
    ///<summary>Lounge TV Power Meter</summary>
    public NumericSensorEntity LoungeTvPowerMeter => new(_haContext, "sensor.lounge_tv_power_meter");
    ///<summary>Lounge TV Volume</summary>
    public NumericSensorEntity LoungeTvVolume => new(_haContext, "sensor.lounge_tv_volume");
    ///<summary>Battery</summary>
    public NumericSensorEntity MarkBattery => new(_haContext, "sensor.mark_battery");
    ///<summary>Black ink remaining</summary>
    public NumericSensorEntity MfcJ5910dwBlackInkRemaining => new(_haContext, "sensor.mfc_j5910dw_black_ink_remaining");
    ///<summary>Cyan ink remaining</summary>
    public NumericSensorEntity MfcJ5910dwCyanInkRemaining => new(_haContext, "sensor.mfc_j5910dw_cyan_ink_remaining");
    ///<summary>Magenta ink remaining</summary>
    public NumericSensorEntity MfcJ5910dwMagentaInkRemaining => new(_haContext, "sensor.mfc_j5910dw_magenta_ink_remaining");
    ///<summary>Page counter</summary>
    public NumericSensorEntity MfcJ5910dwPageCounter => new(_haContext, "sensor.mfc_j5910dw_page_counter");
    ///<summary>Yellow ink remaining</summary>
    public NumericSensorEntity MfcJ5910dwYellowInkRemaining => new(_haContext, "sensor.mfc_j5910dw_yellow_ink_remaining");
    ///<summary>Mirror Light current</summary>
    public NumericSensorEntity MirrorLightCurrent => new(_haContext, "sensor.mirror_light_current");
    ///<summary>Mirror Light device temperature</summary>
    public NumericSensorEntity MirrorLightDeviceTemperature => new(_haContext, "sensor.mirror_light_device_temperature");
    ///<summary>Mirror Light energy</summary>
    public NumericSensorEntity MirrorLightEnergy => new(_haContext, "sensor.mirror_light_energy");
    ///<summary>Mirror Light frequency</summary>
    public NumericSensorEntity MirrorLightFrequency => new(_haContext, "sensor.mirror_light_frequency");
    ///<summary>Mirror Light power</summary>
    public NumericSensorEntity MirrorLightPower => new(_haContext, "sensor.mirror_light_power");
    ///<summary>Mirror Light voltage</summary>
    public NumericSensorEntity MirrorLightVoltage => new(_haContext, "sensor.mirror_light_voltage");
    ///<summary>Mixing Desk current</summary>
    public NumericSensorEntity MixingDeskCurrent => new(_haContext, "sensor.mixing_desk_current");
    ///<summary>Mixing Desk device temperature</summary>
    public NumericSensorEntity MixingDeskDeviceTemperature => new(_haContext, "sensor.mixing_desk_device_temperature");
    ///<summary>Mixing Desk energy</summary>
    public NumericSensorEntity MixingDeskEnergy => new(_haContext, "sensor.mixing_desk_energy");
    ///<summary>Mixing Desk frequency</summary>
    public NumericSensorEntity MixingDeskFrequency => new(_haContext, "sensor.mixing_desk_frequency");
    ///<summary>Mixing Desk power</summary>
    public NumericSensorEntity MixingDeskPower => new(_haContext, "sensor.mixing_desk_power");
    ///<summary>Mixing Desk voltage</summary>
    public NumericSensorEntity MixingDeskVoltage => new(_haContext, "sensor.mixing_desk_voltage");
    ///<summary>nspanel RSSI</summary>
    public NumericSensorEntity NspanelRssi => new(_haContext, "sensor.nspanel_rssi");
    ///<summary>nspanel Temperature</summary>
    public NumericSensorEntity NspanelTemperature => new(_haContext, "sensor.nspanel_temperature");
    ///<summary>Current Accumulative Consumption Electricity (22J0181544/1610019557951)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951CurrentAccumulativeConsumption => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_current_accumulative_consumption");
    ///<summary>Electricity 22J0181544 1610019557951 Current Accumulative Consumption (Off Peak)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951CurrentAccumulativeConsumptionOffPeak => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_current_accumulative_consumption_off_peak");
    ///<summary>Electricity 22J0181544 1610019557951 Current Accumulative Consumption (Peak)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951CurrentAccumulativeConsumptionPeak => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_current_accumulative_consumption_peak");
    ///<summary>Current Accumulative Cost Electricity (22J0181544/1610019557951)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951CurrentAccumulativeCost => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_current_accumulative_cost");
    ///<summary>Electricity 22J0181544 1610019557951 Current Accumulative Cost (Off Peak)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951CurrentAccumulativeCostOffPeak => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_current_accumulative_cost_off_peak");
    ///<summary>Electricity 22J0181544 1610019557951 Current Accumulative Cost (Peak)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951CurrentAccumulativeCostPeak => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_current_accumulative_cost_peak");
    ///<summary>Current Consumption Electricity (22J0181544/1610019557951)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951CurrentConsumption => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_current_consumption");
    ///<summary>Current Demand Electricity (22J0181544/1610019557951)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951CurrentDemand => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_current_demand");
    ///<summary>Current Interval Accumulative Consumption Electricity (22J0181544/1610019557951)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951CurrentIntervalAccumulativeConsumption => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_current_interval_accumulative_consumption");
    ///<summary>Current Rate Electricity (22J0181544 1610019557951)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951CurrentRate => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_current_rate");
    ///<summary>Current Standing Charge Electricity (22J0181544/1610019557951)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951CurrentStandingCharge => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_current_standing_charge");
    ///<summary>Current Total Consumption Electricity (22J0181544/1610019557951)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951CurrentTotalConsumption => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_current_total_consumption");
    ///<summary>Next Rate Electricity (22J0181544/1610019557951)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951NextRate => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_next_rate");
    ///<summary>Octoplus Saving Session Baseline Electricity (22J0181544/1610019557951)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951OctoplusSavingSessionBaseline => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_octoplus_saving_session_baseline");
    ///<summary>Previous Accumulative Consumption Electricity (22J0181544/1610019557951)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951PreviousAccumulativeConsumption => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_previous_accumulative_consumption");
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951PreviousAccumulativeConsumptionCost => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_previous_accumulative_consumption_cost");
    ///<summary>Electricity 22J0181544 1610019557951 Previous Accumulative Consumption (Off Peak)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951PreviousAccumulativeConsumptionOffPeak => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_previous_accumulative_consumption_off_peak");
    ///<summary>Electricity 22J0181544 1610019557951 Previous Accumulative Consumption (Peak)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951PreviousAccumulativeConsumptionPeak => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_previous_accumulative_consumption_peak");
    ///<summary>Previous Accumulative Cost Electricity (22J0181544/1610019557951)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951PreviousAccumulativeCost => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_previous_accumulative_cost");
    ///<summary>Electricity 22J0181544 1610019557951 Previous Accumulative Cost (Off Peak)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951PreviousAccumulativeCostOffPeak => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_previous_accumulative_cost_off_peak");
    ///<summary>Previous Accumulative Cost Override Electricity (22J0181544/1610019557951)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951PreviousAccumulativeCostOverride => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_previous_accumulative_cost_override");
    ///<summary>Electricity 22J0181544 1610019557951 Previous Accumulative Cost (Peak)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951PreviousAccumulativeCostPeak => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_previous_accumulative_cost_peak");
    ///<summary>Previous Rate Electricity (22J0181544/1610019557951)</summary>
    public NumericSensorEntity OctopusEnergyElectricity22j01815441610019557951PreviousRate => new(_haContext, "sensor.octopus_energy_electricity_22j0181544_1610019557951_previous_rate");
    ///<summary>Gas E6E09476682323 1590806503 Current Accumulative Consumption</summary>
    public NumericSensorEntity OctopusEnergyGasE6e094766823231590806503CurrentAccumulativeConsumption => new(_haContext, "sensor.octopus_energy_gas_e6e09476682323_1590806503_current_accumulative_consumption");
    ///<summary>Current Accumulative Consumption Gas (E6E09476682323/1590806503)</summary>
    public NumericSensorEntity OctopusEnergyGasE6e094766823231590806503CurrentAccumulativeConsumptionKwh => new(_haContext, "sensor.octopus_energy_gas_e6e09476682323_1590806503_current_accumulative_consumption_kwh");
    ///<summary>Current Accumulative Consumption (m³) Gas (E6E09476682323/1590806503)</summary>
    public NumericSensorEntity OctopusEnergyGasE6e094766823231590806503CurrentAccumulativeConsumptionM3 => new(_haContext, "sensor.octopus_energy_gas_e6e09476682323_1590806503_current_accumulative_consumption_m3");
    ///<summary>Current Accumulative Cost Gas (E6E09476682323/1590806503)</summary>
    public NumericSensorEntity OctopusEnergyGasE6e094766823231590806503CurrentAccumulativeCost => new(_haContext, "sensor.octopus_energy_gas_e6e09476682323_1590806503_current_accumulative_cost");
    ///<summary>Current Consumption Gas (E6E09476682323/1590806503)</summary>
    public NumericSensorEntity OctopusEnergyGasE6e094766823231590806503CurrentConsumption => new(_haContext, "sensor.octopus_energy_gas_e6e09476682323_1590806503_current_consumption");
    ///<summary>Current Rate Gas (E6E09476682323/1590806503)</summary>
    public NumericSensorEntity OctopusEnergyGasE6e094766823231590806503CurrentRate => new(_haContext, "sensor.octopus_energy_gas_e6e09476682323_1590806503_current_rate");
    ///<summary>Current Standing Charge Gas (E6E09476682323/1590806503)</summary>
    public NumericSensorEntity OctopusEnergyGasE6e094766823231590806503CurrentStandingCharge => new(_haContext, "sensor.octopus_energy_gas_e6e09476682323_1590806503_current_standing_charge");
    ///<summary>Current Total Consumption (kWh) Gas (E6E09476682323/1590806503)</summary>
    public NumericSensorEntity OctopusEnergyGasE6e094766823231590806503CurrentTotalConsumptionKwh => new(_haContext, "sensor.octopus_energy_gas_e6e09476682323_1590806503_current_total_consumption_kwh");
    ///<summary>Current Total Consumption (m3) Gas (E6E09476682323/1590806503)</summary>
    public NumericSensorEntity OctopusEnergyGasE6e094766823231590806503CurrentTotalConsumptionM3 => new(_haContext, "sensor.octopus_energy_gas_e6e09476682323_1590806503_current_total_consumption_m3");
    ///<summary>Next Rate Gas (E6E09476682323/1590806503)</summary>
    public NumericSensorEntity OctopusEnergyGasE6e094766823231590806503NextRate => new(_haContext, "sensor.octopus_energy_gas_e6e09476682323_1590806503_next_rate");
    ///<summary>Gas E6E09476682323 1590806503 Previous Accumulative Consumption</summary>
    public NumericSensorEntity OctopusEnergyGasE6e094766823231590806503PreviousAccumulativeConsumption => new(_haContext, "sensor.octopus_energy_gas_e6e09476682323_1590806503_previous_accumulative_consumption");
    ///<summary>Previous Accumulative Consumption (kWh) Gas (E6E09476682323/1590806503)</summary>
    public NumericSensorEntity OctopusEnergyGasE6e094766823231590806503PreviousAccumulativeConsumptionKwh => new(_haContext, "sensor.octopus_energy_gas_e6e09476682323_1590806503_previous_accumulative_consumption_kwh");
    public NumericSensorEntity OctopusEnergyGasE6e094766823231590806503PreviousAccumulativeConsumptionKwhCost => new(_haContext, "sensor.octopus_energy_gas_e6e09476682323_1590806503_previous_accumulative_consumption_kwh_cost");
    ///<summary>Previous Accumulative Consumption Gas (E6E09476682323/1590806503)</summary>
    public NumericSensorEntity OctopusEnergyGasE6e094766823231590806503PreviousAccumulativeConsumptionM3 => new(_haContext, "sensor.octopus_energy_gas_e6e09476682323_1590806503_previous_accumulative_consumption_m3");
    ///<summary>Previous Accumulative Cost Gas (E6E09476682323/1590806503)</summary>
    public NumericSensorEntity OctopusEnergyGasE6e094766823231590806503PreviousAccumulativeCost => new(_haContext, "sensor.octopus_energy_gas_e6e09476682323_1590806503_previous_accumulative_cost");
    ///<summary>Previous Accumulative Cost Override Gas (E6E09476682323/1590806503)</summary>
    public NumericSensorEntity OctopusEnergyGasE6e094766823231590806503PreviousAccumulativeCostOverride => new(_haContext, "sensor.octopus_energy_gas_e6e09476682323_1590806503_previous_accumulative_cost_override");
    ///<summary>Previous Rate Gas (E6E09476682323/1590806503)</summary>
    public NumericSensorEntity OctopusEnergyGasE6e094766823231590806503PreviousRate => new(_haContext, "sensor.octopus_energy_gas_e6e09476682323_1590806503_previous_rate");
    ///<summary>Patio Camera Disk write rate</summary>
    public NumericSensorEntity PatioCameraDiskWriteRate => new(_haContext, "sensor.patio_camera_disk_write_rate");
    ///<summary>Patio Camera Microphone level</summary>
    public NumericSensorEntity PatioCameraMicrophoneLevel => new(_haContext, "sensor.patio_camera_microphone_level");
    ///<summary>Patio Camera Storage used</summary>
    public NumericSensorEntity PatioCameraStorageUsed => new(_haContext, "sensor.patio_camera_storage_used");
    ///<summary>Patio Light Current</summary>
    public NumericSensorEntity PatioLightCurrent => new(_haContext, "sensor.patio_light_current");
    ///<summary>Patio Light Energy</summary>
    public NumericSensorEntity PatioLightEnergy => new(_haContext, "sensor.patio_light_energy");
    ///<summary>Patio Light Frequency</summary>
    public NumericSensorEntity PatioLightFrequency => new(_haContext, "sensor.patio_light_frequency");
    ///<summary>Patio Light Power</summary>
    public NumericSensorEntity PatioLightPower => new(_haContext, "sensor.patio_light_power");
    ///<summary>Patio Light Temperature</summary>
    public NumericSensorEntity PatioLightTemperature => new(_haContext, "sensor.patio_light_temperature");
    ///<summary>Patio Light Voltage</summary>
    public NumericSensorEntity PatioLightVoltage => new(_haContext, "sensor.patio_light_voltage");
    ///<summary>Pixel 6 Active notification count</summary>
    public NumericSensorEntity Pixel6ActiveNotificationCount2 => new(_haContext, "sensor.pixel_6_active_notification_count_2");
    ///<summary>Pixel 6 Battery level</summary>
    public NumericSensorEntity Pixel6BatteryLevel2 => new(_haContext, "sensor.pixel_6_battery_level_2");
    ///<summary>Pixel 6 Battery power</summary>
    public NumericSensorEntity Pixel6BatteryPower2 => new(_haContext, "sensor.pixel_6_battery_power_2");
    ///<summary>Pixel 6 Battery temperature</summary>
    public NumericSensorEntity Pixel6BatteryTemperature2 => new(_haContext, "sensor.pixel_6_battery_temperature_2");
    ///<summary>Pixel 6 Bluetooth connection</summary>
    public NumericSensorEntity Pixel6BluetoothConnection2 => new(_haContext, "sensor.pixel_6_bluetooth_connection_2");
    ///<summary>Pixel 6 High accuracy update interval</summary>
    public NumericSensorEntity Pixel6HighAccuracyUpdateInterval2 => new(_haContext, "sensor.pixel_6_high_accuracy_update_interval_2");
    ///<summary>Pixel 6 Light sensor</summary>
    public NumericSensorEntity Pixel6LightSensor2 => new(_haContext, "sensor.pixel_6_light_sensor_2");
    ///<summary>Pixel 6 Pressure sensor</summary>
    public NumericSensorEntity Pixel6PressureSensor2 => new(_haContext, "sensor.pixel_6_pressure_sensor_2");
    ///<summary>Pixel 6 Sleep confidence</summary>
    public NumericSensorEntity Pixel6SleepConfidence2 => new(_haContext, "sensor.pixel_6_sleep_confidence_2");
    ///<summary>Pixel 6 Sleep segment</summary>
    public NumericSensorEntity Pixel6SleepSegment2 => new(_haContext, "sensor.pixel_6_sleep_segment_2");
    ///<summary>Pixel Watch Battery level</summary>
    public NumericSensorEntity PixelWatchBatteryLevel => new(_haContext, "sensor.pixel_watch_battery_level");
    ///<summary>Pixel Watch Battery power</summary>
    public NumericSensorEntity PixelWatchBatteryPower => new(_haContext, "sensor.pixel_watch_battery_power");
    ///<summary>Pixel Watch Battery temperature</summary>
    public NumericSensorEntity PixelWatchBatteryTemperature => new(_haContext, "sensor.pixel_watch_battery_temperature");
    ///<summary>Pixel Watch Daily calories</summary>
    public NumericSensorEntity PixelWatchDailyCalories => new(_haContext, "sensor.pixel_watch_daily_calories");
    ///<summary>Pixel Watch Daily distance</summary>
    public NumericSensorEntity PixelWatchDailyDistance => new(_haContext, "sensor.pixel_watch_daily_distance");
    ///<summary>Pixel Watch Daily floors</summary>
    public NumericSensorEntity PixelWatchDailyFloors => new(_haContext, "sensor.pixel_watch_daily_floors");
    ///<summary>Pixel Watch Daily steps</summary>
    public NumericSensorEntity PixelWatchDailySteps => new(_haContext, "sensor.pixel_watch_daily_steps");
    ///<summary>Pixel Watch Light sensor</summary>
    public NumericSensorEntity PixelWatchLightSensor => new(_haContext, "sensor.pixel_watch_light_sensor");
    ///<summary>Pixel Watch Pressure sensor</summary>
    public NumericSensorEntity PixelWatchPressureSensor => new(_haContext, "sensor.pixel_watch_pressure_sensor");
    ///<summary>Pixel Watch Steps sensor</summary>
    public NumericSensorEntity PixelWatchStepsSensor => new(_haContext, "sensor.pixel_watch_steps_sensor");
    ///<summary>Porch Light Current</summary>
    public NumericSensorEntity PorchLightCurrent => new(_haContext, "sensor.porch_light_current");
    ///<summary>Porch Light Energy</summary>
    public NumericSensorEntity PorchLightEnergy => new(_haContext, "sensor.porch_light_energy");
    ///<summary>Porch Light Frequency</summary>
    public NumericSensorEntity PorchLightFrequency => new(_haContext, "sensor.porch_light_frequency");
    ///<summary>Porch Light Power</summary>
    public NumericSensorEntity PorchLightPower => new(_haContext, "sensor.porch_light_power");
    ///<summary>Porch Light Temperature</summary>
    public NumericSensorEntity PorchLightTemperature => new(_haContext, "sensor.porch_light_temperature");
    ///<summary>Porch Light Voltage</summary>
    public NumericSensorEntity PorchLightVoltage => new(_haContext, "sensor.porch_light_voltage");
    ///<summary>Right Bedside Switch Battery</summary>
    public NumericSensorEntity RightBedsideSwitchBattery => new(_haContext, "sensor.right_bedside_switch_battery");
    ///<summary>Cat Feeder Last amount</summary>
    public NumericSensorEntity RojecoPetFeederLastAmount => new(_haContext, "sensor.rojeco_pet_feeder_last_amount");
    ///<summary>Estimated Distance</summary>
    public NumericSensorEntity S424d3be485e872ccc483cEstimatedDistance => new(_haContext, "sensor.s424d3be485e872ccc_483c_estimated_distance");
    ///<summary>Estimated Distance</summary>
    public NumericSensorEntity S56bd949cabb74974cCa91EstimatedDistance => new(_haContext, "sensor.s56bd949cabb74974c_ca91_estimated_distance");
    ///<summary>AdGuard Home Safe searches enforced</summary>
    public NumericSensorEntity SearchesSafeSearchEnforced => new(_haContext, "sensor.searches_safe_search_enforced");
    ///<summary>Estimated Distance</summary>
    public NumericSensorEntity Sfd85968e835924d1c6058EstimatedDistance => new(_haContext, "sensor.sfd85968e835924d1c_6058_estimated_distance");
    ///<summary>Shed Camera Disk write rate</summary>
    public NumericSensorEntity ShedCameraDiskWriteRate => new(_haContext, "sensor.shed_camera_disk_write_rate");
    ///<summary>Shed Camera Microphone level</summary>
    public NumericSensorEntity ShedCameraMicrophoneLevel => new(_haContext, "sensor.shed_camera_microphone_level");
    ///<summary>Shed Camera Storage used</summary>
    public NumericSensorEntity ShedCameraStorageUsed => new(_haContext, "sensor.shed_camera_storage_used");
    ///<summary>Shed Door Battery</summary>
    public NumericSensorEntity ShedDoorBattery => new(_haContext, "sensor.shed_door_battery");
    ///<summary>Shed Door Illuminance</summary>
    public NumericSensorEntity ShedDoorIlluminance => new(_haContext, "sensor.shed_door_illuminance");
    ///<summary>Shed Door Rotation</summary>
    public NumericSensorEntity ShedDoorRotation => new(_haContext, "sensor.shed_door_rotation");
    ///<summary>Shed Door Signal Strength</summary>
    public NumericSensorEntity ShedDoorSignalStrength => new(_haContext, "sensor.shed_door_signal_strength");
    ///<summary>Shed Light energy</summary>
    public NumericSensorEntity ShedEnergy => new(_haContext, "sensor.shed_energy");
    ///<summary>Shed Light current</summary>
    public NumericSensorEntity ShedLightCurrent => new(_haContext, "sensor.shed_light_current");
    ///<summary>Shed Light device temperature</summary>
    public NumericSensorEntity ShedLightDeviceTemperature => new(_haContext, "sensor.shed_light_device_temperature");
    ///<summary>Shed Light frequency</summary>
    public NumericSensorEntity ShedLightFrequency => new(_haContext, "sensor.shed_light_frequency");
    ///<summary>Shed Light power</summary>
    public NumericSensorEntity ShedLightPower => new(_haContext, "sensor.shed_light_power");
    ///<summary>Shed Light voltage</summary>
    public NumericSensorEntity ShedLightVoltage => new(_haContext, "sensor.shed_light_voltage");
    ///<summary>Shed Motion Battery</summary>
    public NumericSensorEntity ShedMotionBattery => new(_haContext, "sensor.shed_motion_battery");
    ///<summary>Shed Motion Illuminance</summary>
    public NumericSensorEntity ShedMotionIlluminance => new(_haContext, "sensor.shed_motion_illuminance");
    ///<summary>Shed Motion Signal Strength</summary>
    public NumericSensorEntity ShedMotionSignalStrength => new(_haContext, "sensor.shed_motion_signal_strength");
    ///<summary>Shed Target Temperature</summary>
    public NumericSensorEntity ShedTargetTemperature => new(_haContext, "sensor.shed_target_temperature");
    ///<summary>Shelly Landing Light rssi</summary>
    public NumericSensorEntity ShellyLandingLightRssi => new(_haContext, "sensor.shelly_landing_light_rssi");
    ///<summary>Shelly Landing Light Switch 0 device temperature</summary>
    public NumericSensorEntity ShellyLandingLightSwitch0DeviceTemperature => new(_haContext, "sensor.shelly_landing_light_switch_0_device_temperature");
    ///<summary>Shelly Landing Light switch_0 power</summary>
    public NumericSensorEntity ShellyLandingLightSwitch0Power => new(_haContext, "sensor.shelly_landing_light_switch_0_power");
    ///<summary>Shelly Landing Light Switch Current</summary>
    public NumericSensorEntity ShellyLandingLightSwitchCurrent => new(_haContext, "sensor.shelly_landing_light_switch_current");
    ///<summary>Shelly Landing Light switch energy</summary>
    public NumericSensorEntity ShellyLandingLightSwitchEnergy => new(_haContext, "sensor.shelly_landing_light_switch_energy");
    ///<summary>Shelly Landing Light Switch Frequency</summary>
    public NumericSensorEntity ShellyLandingLightSwitchFrequency => new(_haContext, "sensor.shelly_landing_light_switch_frequency");
    ///<summary>Shelly Landing Light Switch Voltage</summary>
    public NumericSensorEntity ShellyLandingLightSwitchVoltage => new(_haContext, "sensor.shelly_landing_light_switch_voltage");
    ///<summary>Shelly Shed Lights rssi</summary>
    public NumericSensorEntity ShellyShedLightsRssi => new(_haContext, "sensor.shelly_shed_lights_rssi");
    ///<summary>Shelly Upstairs Lights 1 rssi</summary>
    public NumericSensorEntity ShellyUpstairsLights1Rssi => new(_haContext, "sensor.shelly_upstairs_lights_1_rssi");
    ///<summary>Shelly Upstairs Lights 2 rssi</summary>
    public NumericSensorEntity ShellyUpstairsLights2Rssi => new(_haContext, "sensor.shelly_upstairs_lights_2_rssi");
    ///<summary>Shelly Upstairs Sockets 4 rssi</summary>
    public NumericSensorEntity ShellyUpstairsSocket4Rssi => new(_haContext, "sensor.shelly_upstairs_socket_4_rssi");
    ///<summary>Signal Strength</summary>
    public NumericSensorEntity SmartSeries700047aeSignalStrength => new(_haContext, "sensor.smart_series_7000_47ae_signal_strength");
    ///<summary>Time</summary>
    public NumericSensorEntity SmartSeries700047aeTime => new(_haContext, "sensor.smart_series_7000_47ae_time");
    ///<summary>Snug Desk Switch Battery</summary>
    public NumericSensorEntity SnugDeskSwitchBattery => new(_haContext, "sensor.snug_desk_switch_battery");
    ///<summary>Snug Illuminance</summary>
    public NumericSensorEntity SnugIllumenance => new(_haContext, "sensor.snug_illumenance");
    ///<summary>Snug Led Strip Linkquality</summary>
    public NumericSensorEntity SnugLedStripLinkquality => new(_haContext, "sensor.snug_led_strip_linkquality");
    ///<summary>Snug Switch Battery</summary>
    public NumericSensorEntity SnugSwitchBattery => new(_haContext, "sensor.snug_switch_battery");
    ///<summary>Sonoff Bridge 1 Sonoff Bridge 1 status</summary>
    public NumericSensorEntity SonoffBridge1Status => new(_haContext, "sensor.sonoff_bridge_1_status");
    ///<summary>Sonoff Downstairs 1 Sonoff Downstairs 1 Signal</summary>
    public NumericSensorEntity SonoffDownstairs1Signal => new(_haContext, "sensor.sonoff_downstairs_1_signal");
    ///<summary>Sonoff Downstairs 1 Sonoff Downstairs 1 Uptime</summary>
    public NumericSensorEntity SonoffDownstairs1Uptime => new(_haContext, "sensor.sonoff_downstairs_1_uptime");
    ///<summary>Sonoff Downstairs 2 Sonoff Downstairs 2 Signal</summary>
    public NumericSensorEntity SonoffDownstairs2Signal => new(_haContext, "sensor.sonoff_downstairs_2_signal");
    ///<summary>Sonoff Downstairs 2 Sonoff Downstairs 2 Uptime</summary>
    public NumericSensorEntity SonoffDownstairs2Uptime => new(_haContext, "sensor.sonoff_downstairs_2_uptime");
    ///<summary>SpeedTest Download</summary>
    public NumericSensorEntity SpeedtestDownload => new(_haContext, "sensor.speedtest_download");
    ///<summary>SpeedTest Ping</summary>
    public NumericSensorEntity SpeedtestPing => new(_haContext, "sensor.speedtest_ping");
    ///<summary>SpeedTest Upload</summary>
    public NumericSensorEntity SpeedtestUpload => new(_haContext, "sensor.speedtest_upload");
    ///<summary>Store Switch Battery</summary>
    public NumericSensorEntity StoreSwitchBattery => new(_haContext, "sensor.store_switch_battery");
    ///<summary>Studio Bedside Switch Battery</summary>
    public NumericSensorEntity StudioBedsideSwitchBattery => new(_haContext, "sensor.studio_bedside_switch_battery");
    ///<summary>studio-bluetooth-proxy ESPresense Studio Free Mem</summary>
    public NumericSensorEntity StudioBluetoothProxyFreeMem => new(_haContext, "sensor.studio_bluetooth_proxy_free_mem");
    ///<summary>studio-bluetooth-proxy ESPresense Studio Uptime</summary>
    public NumericSensorEntity StudioBluetoothProxyUptime2 => new(_haContext, "sensor.studio_bluetooth_proxy_uptime_2");
    ///<summary>Studio Lamp current</summary>
    public NumericSensorEntity StudioLampCurrent => new(_haContext, "sensor.studio_lamp_current");
    ///<summary>Studio Lamp device temperature</summary>
    public NumericSensorEntity StudioLampDeviceTemperature => new(_haContext, "sensor.studio_lamp_device_temperature");
    ///<summary>Studio Lamp energy</summary>
    public NumericSensorEntity StudioLampEnergy => new(_haContext, "sensor.studio_lamp_energy");
    ///<summary>Studio Lamp frequency</summary>
    public NumericSensorEntity StudioLampFrequency => new(_haContext, "sensor.studio_lamp_frequency");
    ///<summary>Studio Lamp power</summary>
    public NumericSensorEntity StudioLampPower => new(_haContext, "sensor.studio_lamp_power");
    ///<summary>Studio Lamp voltage</summary>
    public NumericSensorEntity StudioLampVoltage => new(_haContext, "sensor.studio_lamp_voltage");
    ///<summary>Studio Light current</summary>
    public NumericSensorEntity StudioLightCurrent => new(_haContext, "sensor.studio_light_current");
    ///<summary>Studio Light device temperature</summary>
    public NumericSensorEntity StudioLightDeviceTemperature => new(_haContext, "sensor.studio_light_device_temperature");
    ///<summary>Studio Light energy</summary>
    public NumericSensorEntity StudioLightEnergy => new(_haContext, "sensor.studio_light_energy");
    ///<summary>Studio Light frequency</summary>
    public NumericSensorEntity StudioLightFrequency => new(_haContext, "sensor.studio_light_frequency");
    ///<summary>Studio Light power</summary>
    public NumericSensorEntity StudioLightPower => new(_haContext, "sensor.studio_light_power");
    ///<summary>Studio Light voltage</summary>
    public NumericSensorEntity StudioLightVoltage => new(_haContext, "sensor.studio_light_voltage");
    ///<summary>Studio Switch Battery</summary>
    public NumericSensorEntity StudioSwitchBattery => new(_haContext, "sensor.studio_switch_battery");
    ///<summary>Sump Alarm Sump Alarm Uptime</summary>
    public NumericSensorEntity SumpAlarmUptime => new(_haContext, "sensor.sump_alarm_uptime");
    ///<summary>Sump Alarm Sump Alarm WiFi Signal</summary>
    public NumericSensorEntity SumpAlarmWifiSignal => new(_haContext, "sensor.sump_alarm_wifi_signal");
    ///<summary>Toilet Door Battery</summary>
    public NumericSensorEntity ToiletDoorBattery => new(_haContext, "sensor.toilet_door_battery");
    ///<summary>Toilet Door Linkquality</summary>
    public NumericSensorEntity ToiletDoorLinkquality => new(_haContext, "sensor.toilet_door_linkquality");
    ///<summary>Toilet Door Voltage</summary>
    public NumericSensorEntity ToiletDoorVoltage => new(_haContext, "sensor.toilet_door_voltage");
    ///<summary>Toilet Switch Battery</summary>
    public NumericSensorEntity ToiletSwitchBattery => new(_haContext, "sensor.toilet_switch_battery");
    ///<summary>UDMPRO CPU temperature</summary>
    public NumericSensorEntity UdmproCpuTemperature => new(_haContext, "sensor.udmpro_cpu_temperature");
    ///<summary>UDMPRO CPU utilization</summary>
    public NumericSensorEntity UdmproCpuUtilization => new(_haContext, "sensor.udmpro_cpu_utilization");
    ///<summary>UDMPRO Memory utilization</summary>
    public NumericSensorEntity UdmproMemoryUtilization => new(_haContext, "sensor.udmpro_memory_utilization");
    ///<summary>UDMPRO Recording capacity</summary>
    public NumericSensorEntity UdmproRecordingCapacity => new(_haContext, "sensor.udmpro_recording_capacity");
    ///<summary>UDMPRO Resolution: 4K video</summary>
    public NumericSensorEntity UdmproResolution4kVideo => new(_haContext, "sensor.udmpro_resolution_4k_video");
    ///<summary>UDMPRO Resolution: free space</summary>
    public NumericSensorEntity UdmproResolutionFreeSpace => new(_haContext, "sensor.udmpro_resolution_free_space");
    ///<summary>UDMPRO Resolution: HD video</summary>
    public NumericSensorEntity UdmproResolutionHdVideo => new(_haContext, "sensor.udmpro_resolution_hd_video");
    ///<summary>UDMPRO Storage utilization</summary>
    public NumericSensorEntity UdmproStorageUtilization => new(_haContext, "sensor.udmpro_storage_utilization");
    ///<summary>UDMPRO Type: continuous video</summary>
    public NumericSensorEntity UdmproTypeContinuousVideo => new(_haContext, "sensor.udmpro_type_continuous_video");
    ///<summary>UDMPRO Type: detections video</summary>
    public NumericSensorEntity UdmproTypeDetectionsVideo => new(_haContext, "sensor.udmpro_type_detections_video");
    ///<summary>UDMPRO Type: timelapse video</summary>
    public NumericSensorEntity UdmproTypeTimelapseVideo => new(_haContext, "sensor.udmpro_type_timelapse_video");
    ///<summary>UniFi Dream Machine Download speed</summary>
    public NumericSensorEntity UnifiDreamMachineKibSReceived => new(_haContext, "sensor.unifi_dream_machine_kib_s_received");
    ///<summary>UniFi Dream Machine Upload speed</summary>
    public NumericSensorEntity UnifiDreamMachineKibSSent => new(_haContext, "sensor.unifi_dream_machine_kib_s_sent");
    ///<summary>Upstairs Humidity</summary>
    public NumericSensorEntity UpstairsHumidity => new(_haContext, "sensor.upstairs_humidity");
    ///<summary>Upstairs Target Temperature</summary>
    public NumericSensorEntity UpstairsTargetTemperature => new(_haContext, "sensor.upstairs_target_temperature");
    ///<summary>Upstairs Temperature</summary>
    public NumericSensorEntity UpstairsTemperature => new(_haContext, "sensor.upstairs_temperature");
    ///<summary>Utility Room Humidistat Battery</summary>
    public NumericSensorEntity UtilityRoomHumidistatBattery => new(_haContext, "sensor.utility_room_humidistat_battery");
    ///<summary>Utility Room Humidistat Humidity</summary>
    public NumericSensorEntity UtilityRoomHumidistatHumidity => new(_haContext, "sensor.utility_room_humidistat_humidity");
    ///<summary>Utility Room Humidistat Temperature</summary>
    public NumericSensorEntity UtilityRoomHumidistatTemperature => new(_haContext, "sensor.utility_room_humidistat_temperature");
    ///<summary>Utility Room Switch Battery</summary>
    public NumericSensorEntity UtilityRoomSwitchBattery => new(_haContext, "sensor.utility_room_switch_battery");
    ///<summary>Weather Station Weather Station Ambient Light</summary>
    public NumericSensorEntity WeatherStationAmbientLight => new(_haContext, "sensor.weather_station_ambient_light");
    ///<summary>Weather Station Weather Station Pressure</summary>
    public NumericSensorEntity WeatherStationPressure => new(_haContext, "sensor.weather_station_pressure");
    ///<summary>Weather Station Weather Station Relative Humidity</summary>
    public NumericSensorEntity WeatherStationRelativeHumidity => new(_haContext, "sensor.weather_station_relative_humidity");
    ///<summary>Weather Station Weather Station Temperature</summary>
    public NumericSensorEntity WeatherStationTemperature => new(_haContext, "sensor.weather_station_temperature");
    ///<summary>Weather Station Weather Station Uptime</summary>
    public NumericSensorEntity WeatherStationUptime => new(_haContext, "sensor.weather_station_uptime");
    ///<summary>Weather Station Weather Station WiFi Signal</summary>
    public NumericSensorEntity WeatherStationWifiSignal => new(_haContext, "sensor.weather_station_wifi_signal");
    ///<summary>WIFI smart CO alarm Battery</summary>
    public NumericSensorEntity WifiSmartCoAlarmBattery => new(_haContext, "sensor.wifi_smart_co_alarm_battery");
    ///<summary>WIFI smart CO alarm Carbon monoxide</summary>
    public NumericSensorEntity WifiSmartCoAlarmCarbonMonoxide => new(_haContext, "sensor.wifi_smart_co_alarm_carbon_monoxide");
    ///<summary>Zigbee2MQTT Bridge Permit join timeout</summary>
    public NumericSensorEntity Zigbee2mqttBridgePermitJoinTimeout => new(_haContext, "sensor.zigbee2mqtt_bridge_permit_join_timeout");
}

public partial class SttEntities
{
    private readonly IHaContext _haContext;
    public SttEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all stt entities currently registered (at runtime) in Home Assistant as SttEntity</summary>
    public IEnumerable<SttEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("stt.")).Select(e => new SttEntity(e));
    ///<summary>Home Assistant Cloud</summary>
    public SttEntity HomeAssistantCloud => new(_haContext, "stt.home_assistant_cloud");
}

public partial class SunEntities
{
    private readonly IHaContext _haContext;
    public SunEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all sun entities currently registered (at runtime) in Home Assistant as SunEntity</summary>
    public IEnumerable<SunEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("sun.")).Select(e => new SunEntity(e));
    ///<summary>Sun</summary>
    public SunEntity Sun => new(_haContext, "sun.sun");
}

public partial class SwitchEntities
{
    private readonly IHaContext _haContext;
    public SwitchEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all switch entities currently registered (at runtime) in Home Assistant as SwitchEntity</summary>
    public IEnumerable<SwitchEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("switch.")).Select(e => new SwitchEntity(e));
    ///<summary>AdGuard Home Filtering</summary>
    public SwitchEntity AdguardFiltering => new(_haContext, "switch.adguard_filtering");
    ///<summary>AdGuard Home Parental control</summary>
    public SwitchEntity AdguardParentalControl => new(_haContext, "switch.adguard_parental_control");
    ///<summary>AdGuard Home Protection</summary>
    public SwitchEntity AdguardProtection => new(_haContext, "switch.adguard_protection");
    ///<summary>AdGuard Home Query log</summary>
    public SwitchEntity AdguardQueryLog => new(_haContext, "switch.adguard_query_log");
    ///<summary>AdGuard Home Safe browsing</summary>
    public SwitchEntity AdguardSafeBrowsing => new(_haContext, "switch.adguard_safe_browsing");
    ///<summary>AdGuard Home Safe search</summary>
    public SwitchEntity AdguardSafeSearch => new(_haContext, "switch.adguard_safe_search");
    ///<summary>Alarmo Card Pre-release</summary>
    public SwitchEntity AlarmoCardPreRelease => new(_haContext, "switch.alarmo_card_pre_release");
    ///<summary>Alarmo Pre-release</summary>
    public SwitchEntity AlarmoPreRelease => new(_haContext, "switch.alarmo_pre_release");
    ///<summary>All Speakers do not disturb switch</summary>
    public SwitchEntity AllSpeakersDoNotDisturbSwitch => new(_haContext, "switch.all_speakers_do_not_disturb_switch");
    ///<summary>All Speakers repeat switch</summary>
    public SwitchEntity AllSpeakersRepeatSwitch => new(_haContext, "switch.all_speakers_repeat_switch");
    ///<summary>All Speakers shuffle switch</summary>
    public SwitchEntity AllSpeakersShuffleSwitch => new(_haContext, "switch.all_speakers_shuffle_switch");
    ///<summary>Analog Clock Pre-release</summary>
    public SwitchEntity AnalogClockPreRelease => new(_haContext, "switch.analog_clock_pre_release");
    ///<summary>Andrew&apos;s Echo Buds do not disturb switch</summary>
    public SwitchEntity AndrewSEchoBudsDoNotDisturbSwitch => new(_haContext, "switch.andrew_s_echo_buds_do_not_disturb_switch");
    ///<summary>Andrew&apos;s Echo Buds do not disturb switch</summary>
    public SwitchEntity AndrewSEchoBudsDoNotDisturbSwitch2 => new(_haContext, "switch.andrew_s_echo_buds_do_not_disturb_switch_2");
    ///<summary>Andrew&apos;s Echo Buds do not disturb switch</summary>
    public SwitchEntity AndrewSEchoBudsDoNotDisturbSwitch3 => new(_haContext, "switch.andrew_s_echo_buds_do_not_disturb_switch_3");
    ///<summary>Andrew&apos;s Echo Buds do not disturb switch</summary>
    public SwitchEntity AndrewSEchoBudsDoNotDisturbSwitch4 => new(_haContext, "switch.andrew_s_echo_buds_do_not_disturb_switch_4");
    ///<summary>Andrew&apos;s Samsung TV 2020-U do not disturb switch</summary>
    public SwitchEntity AndrewSSamsungTv2020UDoNotDisturbSwitch => new(_haContext, "switch.andrew_s_samsung_tv_2020_u_do_not_disturb_switch");
    ///<summary>Andrew&apos;s Samsung TV 2020-U repeat switch</summary>
    public SwitchEntity AndrewSSamsungTv2020URepeatSwitch => new(_haContext, "switch.andrew_s_samsung_tv_2020_u_repeat_switch");
    ///<summary>Andrew&apos;s Samsung TV 2020-U shuffle switch</summary>
    public SwitchEntity AndrewSSamsungTv2020UShuffleSwitch => new(_haContext, "switch.andrew_s_samsung_tv_2020_u_shuffle_switch");
    ///<summary>Andy Rest in the inn</summary>
    public SwitchEntity AndyRestInTheInn => new(_haContext, "switch.andy_rest_in_the_inn");
    ///<summary>Backdoor Light</summary>
    public SwitchEntity BackdoorLight => new(_haContext, "switch.backdoor_light");
    ///<summary>Basement do not disturb switch</summary>
    public SwitchEntity BasementDoNotDisturbSwitch => new(_haContext, "switch.basement_do_not_disturb_switch");
    ///<summary>Basement Hall Light</summary>
    public SwitchEntity BasementHallLight => new(_haContext, "switch.basement_hall_light");
    ///<summary>Basement Hall Lights</summary>
    public SwitchEntity BasementHallLights => new(_haContext, "switch.basement_hall_lights");
    ///<summary>Store Light</summary>
    public SwitchEntity BasementLights1Store => new(_haContext, "switch.basement_lights_1_store");
    ///<summary>Toilet Light</summary>
    public SwitchEntity BasementLights1Toilet => new(_haContext, "switch.basement_lights_1_toilet");
    ///<summary>Utility Room Light</summary>
    public SwitchEntity BasementLights1UtilityRoom => new(_haContext, "switch.basement_lights_1_utility_room");
    ///<summary>Dining Room Light</summary>
    public SwitchEntity BasementLights2DiningRoom => new(_haContext, "switch.basement_lights_2_dining_room");
    ///<summary>Snug Light</summary>
    public SwitchEntity BasementLights2Snug => new(_haContext, "switch.basement_lights_2_snug");
    ///<summary>BL2 Unused 3</summary>
    public SwitchEntity BasementLights2Switch0 => new(_haContext, "switch.basement_lights_2_switch_0");
    ///<summary>BL2 Unused 4</summary>
    public SwitchEntity BasementLights2Switch1 => new(_haContext, "switch.basement_lights_2_switch_1");
    ///<summary>Basement repeat switch</summary>
    public SwitchEntity BasementRepeatSwitch => new(_haContext, "switch.basement_repeat_switch");
    ///<summary>Basement shuffle switch</summary>
    public SwitchEntity BasementShuffleSwitch => new(_haContext, "switch.basement_shuffle_switch");
    ///<summary>Bathroom Fan</summary>
    public SwitchEntity BathroomFan => new(_haContext, "switch.bathroom_fan");
    ///<summary>Bathroom Light</summary>
    public SwitchEntity BathroomLight => new(_haContext, "switch.bathroom_light");
    ///<summary>Bed Socket</summary>
    public SwitchEntity BedSocket => new(_haContext, "switch.bed_socket");
    ///<summary>Bedroom Echo Show do not disturb switch</summary>
    public SwitchEntity BedroomEchoShowDoNotDisturbSwitch => new(_haContext, "switch.bedroom_echo_show_do_not_disturb_switch");
    ///<summary>Bedroom Echo Show repeat switch</summary>
    public SwitchEntity BedroomEchoShowRepeatSwitch => new(_haContext, "switch.bedroom_echo_show_repeat_switch");
    ///<summary>Bedroom Echo Show shuffle switch</summary>
    public SwitchEntity BedroomEchoShowShuffleSwitch => new(_haContext, "switch.bedroom_echo_show_shuffle_switch");
    ///<summary>Bedroom Light</summary>
    public SwitchEntity BedroomLight => new(_haContext, "switch.bedroom_light");
    ///<summary>Better Thermostat UI Pre-release</summary>
    public SwitchEntity BetterThermostatUiPreRelease => new(_haContext, "switch.better_thermostat_ui_pre_release");
    ///<summary>Cellar Door Light</summary>
    public SwitchEntity CellarDoor => new(_haContext, "switch.cellar_door");
    ///<summary>Coffee Machine</summary>
    public SwitchEntity CoffeeMachine => new(_haContext, "switch.coffee_machine");
    ///<summary>Cold Frame</summary>
    public SwitchEntity ColdFrame => new(_haContext, "switch.cold_frame");
    ///<summary>Decking Socket</summary>
    public SwitchEntity DeckingSocket => new(_haContext, "switch.decking_socket");
    ///<summary>Dining Room Echo Input do not disturb switch</summary>
    public SwitchEntity DiningRoomEchoInputDoNotDisturbSwitch => new(_haContext, "switch.dining_room_echo_input_do_not_disturb_switch");
    ///<summary>Dining Room Echo Input repeat switch</summary>
    public SwitchEntity DiningRoomEchoInputRepeatSwitch => new(_haContext, "switch.dining_room_echo_input_repeat_switch");
    ///<summary>Dining Room Echo Input shuffle switch</summary>
    public SwitchEntity DiningRoomEchoInputShuffleSwitch => new(_haContext, "switch.dining_room_echo_input_shuffle_switch");
    ///<summary>Display Cabinet Light</summary>
    public SwitchEntity DisplayCabinetLight => new(_haContext, "switch.display_cabinet_light");
    ///<summary>Doorbell Doorbell Chime</summary>
    public SwitchEntity DoorbellChime => new(_haContext, "switch.doorbell_chime");
    ///<summary>Doorbell Doorbell Chime Active</summary>
    public SwitchEntity DoorbellChimeActive => new(_haContext, "switch.doorbell_chime_active");
    ///<summary>Doorbell Doorbell Restart</summary>
    public SwitchEntity DoorbellRestart => new(_haContext, "switch.doorbell_restart");
    ///<summary>Downstairs do not disturb switch</summary>
    public SwitchEntity DownstairsDoNotDisturbSwitch => new(_haContext, "switch.downstairs_do_not_disturb_switch");
    ///<summary>Downstairs repeat switch</summary>
    public SwitchEntity DownstairsRepeatSwitch => new(_haContext, "switch.downstairs_repeat_switch");
    ///<summary>Downstairs shuffle switch</summary>
    public SwitchEntity DownstairsShuffleSwitch => new(_haContext, "switch.downstairs_shuffle_switch");
    ///<summary>Drawing Room Echo Dot do not disturb switch</summary>
    public SwitchEntity DrawingRoomEchoDotDoNotDisturbSwitch => new(_haContext, "switch.drawing_room_echo_dot_do_not_disturb_switch");
    ///<summary>Drawing Room Echo Dot repeat switch</summary>
    public SwitchEntity DrawingRoomEchoDotRepeatSwitch => new(_haContext, "switch.drawing_room_echo_dot_repeat_switch");
    ///<summary>Drawing Room Echo Dot shuffle switch</summary>
    public SwitchEntity DrawingRoomEchoDotShuffleSwitch => new(_haContext, "switch.drawing_room_echo_dot_shuffle_switch");
    ///<summary>Dressing Room Echo Spot do not disturb switch</summary>
    public SwitchEntity DressingRoomEchoSpotDoNotDisturbSwitch => new(_haContext, "switch.dressing_room_echo_spot_do_not_disturb_switch");
    ///<summary>Dressing Room Echo Spot repeat switch</summary>
    public SwitchEntity DressingRoomEchoSpotRepeatSwitch => new(_haContext, "switch.dressing_room_echo_spot_repeat_switch");
    ///<summary>Dressing Room Echo Spot shuffle switch</summary>
    public SwitchEntity DressingRoomEchoSpotShuffleSwitch => new(_haContext, "switch.dressing_room_echo_spot_shuffle_switch");
    ///<summary>Electric Cabinet Light</summary>
    public SwitchEntity ElectricCabinetLight => new(_haContext, "switch.electric_cabinet_light");
    ///<summary>ESPresense Bedroom ESPresense Bedroom Active Scan</summary>
    public SwitchEntity EspresenseBedroomActiveScan => new(_haContext, "switch.espresense_bedroom_active_scan");
    ///<summary>ESPresense Bedroom ESPresense Bedroom Arduino OTA</summary>
    public SwitchEntity EspresenseBedroomArduinoOta => new(_haContext, "switch.espresense_bedroom_arduino_ota");
    ///<summary>ESPresense Bedroom ESPresense Bedroom Auto Update</summary>
    public SwitchEntity EspresenseBedroomAutoUpdate => new(_haContext, "switch.espresense_bedroom_auto_update");
    ///<summary>ESPresense Bedroom ESPresense Bedroom OTA Update</summary>
    public SwitchEntity EspresenseBedroomOtaUpdate => new(_haContext, "switch.espresense_bedroom_ota_update");
    ///<summary>ESPresense Bedroom ESPresense Bedroom Prerelease</summary>
    public SwitchEntity EspresenseBedroomPrerelease => new(_haContext, "switch.espresense_bedroom_prerelease");
    ///<summary>ESPresense Bedroom ESPresense Bedroom Query</summary>
    public SwitchEntity EspresenseBedroomQuery => new(_haContext, "switch.espresense_bedroom_query");
    ///<summary>ESPresense Bedroom ESPresense Bedroom Status LED</summary>
    public SwitchEntity EspresenseBedroomStatusLed => new(_haContext, "switch.espresense_bedroom_status_led");
    ///<summary>ESPresense DrawingRoom ESPresense DrawingRoom Active Scan</summary>
    public SwitchEntity EspresenseDrawingroomActiveScan => new(_haContext, "switch.espresense_drawingroom_active_scan");
    ///<summary>ESPresense DrawingRoom ESPresense DrawingRoom Query</summary>
    public SwitchEntity EspresenseDrawingroomQuery => new(_haContext, "switch.espresense_drawingroom_query");
    ///<summary>ESPresense Kitchen ESPresense Kitchen Active Scan</summary>
    public SwitchEntity EspresenseKitchenActiveScan => new(_haContext, "switch.espresense_kitchen_active_scan");
    ///<summary>ESPresense Kitchen Arduino OTA</summary>
    public SwitchEntity EspresenseKitchenArduinoOta => new(_haContext, "switch.espresense_kitchen_arduino_ota");
    ///<summary>ESPresense Kitchen Auto Update</summary>
    public SwitchEntity EspresenseKitchenAutoUpdate => new(_haContext, "switch.espresense_kitchen_auto_update");
    ///<summary>ESPresense Kitchen Prerelease</summary>
    public SwitchEntity EspresenseKitchenPrerelease => new(_haContext, "switch.espresense_kitchen_prerelease");
    ///<summary>ESPresense Kitchen ESPresense Kitchen Query</summary>
    public SwitchEntity EspresenseKitchenQuery => new(_haContext, "switch.espresense_kitchen_query");
    ///<summary>ESPresense Kitchen ESPresense Kitchen Status LED</summary>
    public SwitchEntity EspresenseKitchenStatusLed => new(_haContext, "switch.espresense_kitchen_status_led");
    ///<summary>ESPresense Lounge ESPresense Lounge Arduino OTA</summary>
    public SwitchEntity EspresenseLoungeArduinoOta => new(_haContext, "switch.espresense_lounge_arduino_ota");
    ///<summary>ESPresense Lounge ESPresense Lounge Auto Update</summary>
    public SwitchEntity EspresenseLoungeAutoUpdate => new(_haContext, "switch.espresense_lounge_auto_update");
    ///<summary>ESPresense Lounge ESPresense Lounge Active Scan</summary>
    public SwitchEntity EspresenseLoungeEspresenseLoungeActiveScan => new(_haContext, "switch.espresense_lounge_espresense_lounge_active_scan");
    ///<summary>ESPresense Lounge ESPresense Lounge Status LED</summary>
    public SwitchEntity EspresenseLoungeEspresenseLoungeStatusLed => new(_haContext, "switch.espresense_lounge_espresense_lounge_status_led");
    ///<summary>ESPresense Lounge ESPresense Lounge OTA Update</summary>
    public SwitchEntity EspresenseLoungeOtaUpdate => new(_haContext, "switch.espresense_lounge_ota_update");
    ///<summary>ESPresense Lounge ESPresense Lounge Prerelease</summary>
    public SwitchEntity EspresenseLoungePrerelease => new(_haContext, "switch.espresense_lounge_prerelease");
    ///<summary>ESPresense Lounge ESPresense Lounge Query</summary>
    public SwitchEntity EspresenseLoungeQuery => new(_haContext, "switch.espresense_lounge_query");
    ///<summary>ESPresense Snug ESPresense Snug Active Scan</summary>
    public SwitchEntity EspresenseSnugActiveScan => new(_haContext, "switch.espresense_snug_active_scan");
    ///<summary>ESPresense Snug ESPresense Snug Arduino OTA</summary>
    public SwitchEntity EspresenseSnugArduinoOta => new(_haContext, "switch.espresense_snug_arduino_ota");
    ///<summary>ESPresense Snug ESPresense Snug Auto Update</summary>
    public SwitchEntity EspresenseSnugAutoUpdate => new(_haContext, "switch.espresense_snug_auto_update");
    ///<summary>ESPresense Snug ESPresense Snug Prerelease</summary>
    public SwitchEntity EspresenseSnugPrerelease => new(_haContext, "switch.espresense_snug_prerelease");
    ///<summary>ESPresense Snug ESPresense Snug Query</summary>
    public SwitchEntity EspresenseSnugQuery => new(_haContext, "switch.espresense_snug_query");
    ///<summary>ESPresense Snug ESPresense Snug Status LED</summary>
    public SwitchEntity EspresenseSnugStatusLed => new(_haContext, "switch.espresense_snug_status_led");
    ///<summary>studio-bluetooth-proxy ESPresense Studio Query</summary>
    public SwitchEntity EspresenseStudioQuery => new(_haContext, "switch.espresense_studio_query");
    ///<summary>Garden do not disturb switch</summary>
    public SwitchEntity GardenDoNotDisturbSwitch => new(_haContext, "switch.garden_do_not_disturb_switch");
    ///<summary>Garden repeat switch</summary>
    public SwitchEntity GardenRepeatSwitch => new(_haContext, "switch.garden_repeat_switch");
    ///<summary>Garden shuffle switch</summary>
    public SwitchEntity GardenShuffleSwitch => new(_haContext, "switch.garden_shuffle_switch");
    ///<summary>Garden Sockets</summary>
    public SwitchEntity GardenSockets => new(_haContext, "switch.garden_sockets");
    ///<summary>Garden Tap</summary>
    public SwitchEntity GardenTap => new(_haContext, "switch.garden_tap");
    ///<summary>Garden Tap Auto close when water shortage</summary>
    public SwitchEntity GardenTapAutoCloseWhenWaterShortage => new(_haContext, "switch.garden_tap_auto_close_when_water_shortage");
    ///<summary>Gate Socket</summary>
    public SwitchEntity GateSocket => new(_haContext, "switch.gate_socket");
    ///<summary>Guest Room Echo Show do not disturb switch</summary>
    public SwitchEntity GuestRoomEchoShowDoNotDisturbSwitch => new(_haContext, "switch.guest_room_echo_show_do_not_disturb_switch");
    ///<summary>Guest Room Echo Show repeat switch</summary>
    public SwitchEntity GuestRoomEchoShowRepeatSwitch => new(_haContext, "switch.guest_room_echo_show_repeat_switch");
    ///<summary>Guest Room Echo Show shuffle switch</summary>
    public SwitchEntity GuestRoomEchoShowShuffleSwitch => new(_haContext, "switch.guest_room_echo_show_shuffle_switch");
    ///<summary>Guest Room Lamp</summary>
    public SwitchEntity GuestRoomLamp => new(_haContext, "switch.guest_room_lamp");
    ///<summary>Hall Tablet do not disturb switch</summary>
    public SwitchEntity HallTabletDoNotDisturbSwitch => new(_haContext, "switch.hall_tablet_do_not_disturb_switch");
    ///<summary>Hallway Light</summary>
    public SwitchEntity HallwayLightSwitch => new(_haContext, "switch.hallway_light_switch");
    ///<summary>Hallway Tablet Kiosk lock</summary>
    public SwitchEntity HallwayTabletKioskLock => new(_haContext, "switch.hallway_tablet_kiosk_lock");
    ///<summary>Hallway Tablet Maintenance mode</summary>
    public SwitchEntity HallwayTabletMaintenanceMode => new(_haContext, "switch.hallway_tablet_maintenance_mode");
    ///<summary>Hallway Tablet Motion detection</summary>
    public SwitchEntity HallwayTabletMotionDetection => new(_haContext, "switch.hallway_tablet_motion_detection");
    ///<summary>Hallway Tablet Screen</summary>
    public SwitchEntity HallwayTabletScreen => new(_haContext, "switch.hallway_tablet_screen");
    ///<summary>Hallway Tablet Screensaver</summary>
    public SwitchEntity HallwayTabletScreensaver => new(_haContext, "switch.hallway_tablet_screensaver");
    ///<summary>Hifi Socket</summary>
    public SwitchEntity HifiSocket => new(_haContext, "switch.hifi_socket");
    ///<summary>homeassistant</summary>
    public SwitchEntity HomeassistantActive => new(_haContext, "switch.homeassistant_active");
    ///<summary>Kitchen Echo Show do not disturb switch</summary>
    public SwitchEntity KitchenEchoShowDoNotDisturbSwitch => new(_haContext, "switch.kitchen_echo_show_do_not_disturb_switch");
    ///<summary>Kitchen Echo Show repeat switch</summary>
    public SwitchEntity KitchenEchoShowRepeatSwitch => new(_haContext, "switch.kitchen_echo_show_repeat_switch");
    ///<summary>Kitchen Echo Show shuffle switch</summary>
    public SwitchEntity KitchenEchoShowShuffleSwitch => new(_haContext, "switch.kitchen_echo_show_shuffle_switch");
    ///<summary>Landing Tablet do not disturb switch</summary>
    public SwitchEntity LandingTabletDoNotDisturbSwitch => new(_haContext, "switch.landing_tablet_do_not_disturb_switch");
    ///<summary>Light Manager basement hall</summary>
    public SwitchEntity LightManagerBasementHall => new(_haContext, "switch.light_manager_basement_hall");
    ///<summary>Light Manager bathroom</summary>
    public SwitchEntity LightManagerBathroom => new(_haContext, "switch.light_manager_bathroom");
    ///<summary>Light Manager light.bathroom_light</summary>
    public SwitchEntity LightManagerBathroomLight => new(_haContext, "switch.light_manager_bathroom_light");
    ///<summary>Light Manager bedroom</summary>
    public SwitchEntity LightManagerBedroom => new(_haContext, "switch.light_manager_bedroom");
    ///<summary>Light Manager light.bedroom_lamp</summary>
    public SwitchEntity LightManagerBedroomLamp => new(_haContext, "switch.light_manager_bedroom_lamp");
    ///<summary>Light Manager light.bedroom_light</summary>
    public SwitchEntity LightManagerBedroomLight => new(_haContext, "switch.light_manager_bedroom_light");
    ///<summary>Light Manager light.bookshelf_light</summary>
    public SwitchEntity LightManagerBookshelfLight => new(_haContext, "switch.light_manager_bookshelf_light");
    ///<summary>Light Manager light.breakfast_bar_light</summary>
    public SwitchEntity LightManagerBreakfastBarLight => new(_haContext, "switch.light_manager_breakfast_bar_light");
    ///<summary>Light Manager dining room</summary>
    public SwitchEntity LightManagerDiningRoom => new(_haContext, "switch.light_manager_dining_room");
    ///<summary>Light Manager light.dining_room_light</summary>
    public SwitchEntity LightManagerDiningRoomLight => new(_haContext, "switch.light_manager_dining_room_light");
    ///<summary>Light Manager light.display_cabinet_light</summary>
    public SwitchEntity LightManagerDisplayCabinetLight => new(_haContext, "switch.light_manager_display_cabinet_light");
    ///<summary>Light Manager drawing room</summary>
    public SwitchEntity LightManagerDrawingRoom => new(_haContext, "switch.light_manager_drawing_room");
    ///<summary>Light Manager light.drawing_room_light</summary>
    public SwitchEntity LightManagerDrawingRoomLight => new(_haContext, "switch.light_manager_drawing_room_light");
    ///<summary>Light Manager dressing room</summary>
    public SwitchEntity LightManagerDressingRoom => new(_haContext, "switch.light_manager_dressing_room");
    ///<summary>Light Manager light.dressing_room_light</summary>
    public SwitchEntity LightManagerDressingRoomLight => new(_haContext, "switch.light_manager_dressing_room_light");
    ///<summary>Light Manager light.electric_cabinet_light</summary>
    public SwitchEntity LightManagerElectricCabinetLight => new(_haContext, "switch.light_manager_electric_cabinet_light");
    ///<summary>Light Manager guest room</summary>
    public SwitchEntity LightManagerGuestRoom => new(_haContext, "switch.light_manager_guest_room");
    ///<summary>Light Manager light.guest_room_lamp</summary>
    public SwitchEntity LightManagerGuestRoomLamp => new(_haContext, "switch.light_manager_guest_room_lamp");
    ///<summary>Light Manager light.guest_room_light</summary>
    public SwitchEntity LightManagerGuestRoomLight => new(_haContext, "switch.light_manager_guest_room_light");
    ///<summary>Light Manager hallway</summary>
    public SwitchEntity LightManagerHallway => new(_haContext, "switch.light_manager_hallway");
    ///<summary>Light Manager light.hallway_lamp</summary>
    public SwitchEntity LightManagerHallwayLamp => new(_haContext, "switch.light_manager_hallway_lamp");
    ///<summary>Light Manager light.hallway_light</summary>
    public SwitchEntity LightManagerHallwayLight => new(_haContext, "switch.light_manager_hallway_light");
    ///<summary>Light Manager kitchen</summary>
    public SwitchEntity LightManagerKitchen => new(_haContext, "switch.light_manager_kitchen");
    ///<summary>Light Manager light.kitchen_light</summary>
    public SwitchEntity LightManagerKitchenLight => new(_haContext, "switch.light_manager_kitchen_light");
    ///<summary>Light Manager landing</summary>
    public SwitchEntity LightManagerLanding => new(_haContext, "switch.light_manager_landing");
    ///<summary>Light Manager light.landing_light</summary>
    public SwitchEntity LightManagerLandingLight => new(_haContext, "switch.light_manager_landing_light");
    ///<summary>Light Manager lounge</summary>
    public SwitchEntity LightManagerLounge => new(_haContext, "switch.light_manager_lounge");
    ///<summary>Light Manager light.lounge_floor_lamp</summary>
    public SwitchEntity LightManagerLoungeFloorLamp => new(_haContext, "switch.light_manager_lounge_floor_lamp");
    ///<summary>Light Manager light.lounge_lamp</summary>
    public SwitchEntity LightManagerLoungeLamp => new(_haContext, "switch.light_manager_lounge_lamp");
    ///<summary>Light Manager light.lounge_light</summary>
    public SwitchEntity LightManagerLoungeLight => new(_haContext, "switch.light_manager_lounge_light");
    ///<summary>Light Manager light.mirror_light</summary>
    public SwitchEntity LightManagerMirrorLight => new(_haContext, "switch.light_manager_mirror_light");
    ///<summary>Light Manager porch</summary>
    public SwitchEntity LightManagerPorch => new(_haContext, "switch.light_manager_porch");
    ///<summary>Light Manager light.porch_light</summary>
    public SwitchEntity LightManagerPorchLight => new(_haContext, "switch.light_manager_porch_light");
    ///<summary>Light Manager snug</summary>
    public SwitchEntity LightManagerSnug => new(_haContext, "switch.light_manager_snug");
    ///<summary>Light Manager light.snug_lamp</summary>
    public SwitchEntity LightManagerSnugLamp => new(_haContext, "switch.light_manager_snug_lamp");
    ///<summary>Light Manager light.snug_led_strip</summary>
    public SwitchEntity LightManagerSnugLedStrip => new(_haContext, "switch.light_manager_snug_led_strip");
    ///<summary>Light Manager light.snug_light</summary>
    public SwitchEntity LightManagerSnugLight => new(_haContext, "switch.light_manager_snug_light");
    ///<summary>Light Manager studio</summary>
    public SwitchEntity LightManagerStudio => new(_haContext, "switch.light_manager_studio");
    ///<summary>Light Manager light.studio_lamp</summary>
    public SwitchEntity LightManagerStudioLamp => new(_haContext, "switch.light_manager_studio_lamp");
    ///<summary>Light Manager light.studio_light</summary>
    public SwitchEntity LightManagerStudioLight => new(_haContext, "switch.light_manager_studio_light");
    ///<summary>Light Manager toilet</summary>
    public SwitchEntity LightManagerToilet => new(_haContext, "switch.light_manager_toilet");
    ///<summary>Light Manager light.toilet_light</summary>
    public SwitchEntity LightManagerToiletLight => new(_haContext, "switch.light_manager_toilet_light");
    ///<summary>Light Manager utility room</summary>
    public SwitchEntity LightManagerUtilityRoom => new(_haContext, "switch.light_manager_utility_room");
    ///<summary>Light Manager light.utility_room_light</summary>
    public SwitchEntity LightManagerUtilityRoomLight => new(_haContext, "switch.light_manager_utility_room_light");
    ///<summary>Lounge Echo Plus do not disturb switch</summary>
    public SwitchEntity LoungeEchoPlusDoNotDisturbSwitch => new(_haContext, "switch.lounge_echo_plus_do_not_disturb_switch");
    ///<summary>Lounge Echo Plus repeat switch</summary>
    public SwitchEntity LoungeEchoPlusRepeatSwitch => new(_haContext, "switch.lounge_echo_plus_repeat_switch");
    ///<summary>Lounge Echo Plus shuffle switch</summary>
    public SwitchEntity LoungeEchoPlusShuffleSwitch => new(_haContext, "switch.lounge_echo_plus_shuffle_switch");
    ///<summary>Lounge Fire TV do not disturb switch</summary>
    public SwitchEntity LoungeFireTvDoNotDisturbSwitch => new(_haContext, "switch.lounge_fire_tv_do_not_disturb_switch");
    ///<summary>Lounge TV</summary>
    public SwitchEntity LoungeTv => new(_haContext, "switch.lounge_tv");
    ///<summary>Schedule</summary>
    public SwitchEntity MarkSchedule => new(_haContext, "switch.mark_schedule");
    ///<summary>Meross Integration Pre-release</summary>
    public SwitchEntity MerossIntegrationPreRelease => new(_haContext, "switch.meross_integration_pre_release");
    ///<summary>Meross LAN Pre-release</summary>
    public SwitchEntity MerossLanPreRelease => new(_haContext, "switch.meross_lan_pre_release");
    ///<summary>mini-graph-card Pre-release</summary>
    public SwitchEntity MiniGraphCardPreRelease => new(_haContext, "switch.mini_graph_card_pre_release");
    ///<summary>Mirror Light</summary>
    public SwitchEntity MirrorLight => new(_haContext, "switch.mirror_light");
    ///<summary>Mixing Desk</summary>
    public SwitchEntity MixingDesk => new(_haContext, "switch.mixing_desk");
    ///<summary>NetDaemon Pre-release</summary>
    public SwitchEntity NetdaemonPreRelease => new(_haContext, "switch.netdaemon_pre_release");
    ///<summary>nspanel Confirmation Message</summary>
    public SwitchEntity NspanelConfirmationMessage => new(_haContext, "switch.nspanel_confirmation_message");
    ///<summary>nspanel Nextion inited</summary>
    public SwitchEntity NspanelNextionInited => new(_haContext, "switch.nspanel_nextion_inited");
    ///<summary>nspanel Notification sound</summary>
    public SwitchEntity NspanelNotificationSound => new(_haContext, "switch.nspanel_notification_sound");
    ///<summary>nspanel Notification unread</summary>
    public SwitchEntity NspanelNotificationUnread => new(_haContext, "switch.nspanel_notification_unread");
    ///<summary>nspanel Relay 1</summary>
    public SwitchEntity NspanelRelay1 => new(_haContext, "switch.nspanel_relay_1");
    ///<summary>nspanel Relay 1 Local Fallback</summary>
    public SwitchEntity NspanelRelay1LocalFallback => new(_haContext, "switch.nspanel_relay_1_local_fallback");
    ///<summary>nspanel Relay 2</summary>
    public SwitchEntity NspanelRelay2 => new(_haContext, "switch.nspanel_relay_2");
    ///<summary>nspanel Relay 2 Local Fallback</summary>
    public SwitchEntity NspanelRelay2LocalFallback => new(_haContext, "switch.nspanel_relay_2_local_fallback");
    ///<summary>nspanel Sleep Modus</summary>
    public SwitchEntity NspanelSleepModus => new(_haContext, "switch.nspanel_sleep_modus");
    ///<summary>nspanel Update TFT display</summary>
    public SwitchEntity NspanelUpdateTftDisplay => new(_haContext, "switch.nspanel_update_tft_display");
    ///<summary>Octopus Energy Pre-release</summary>
    public SwitchEntity OctopusEnergyPreRelease => new(_haContext, "switch.octopus_energy_pre_release");
    ///<summary>Offices do not disturb switch</summary>
    public SwitchEntity OfficesDoNotDisturbSwitch => new(_haContext, "switch.offices_do_not_disturb_switch");
    ///<summary>Offices repeat switch</summary>
    public SwitchEntity OfficesRepeatSwitch => new(_haContext, "switch.offices_repeat_switch");
    ///<summary>Offices shuffle switch</summary>
    public SwitchEntity OfficesShuffleSwitch => new(_haContext, "switch.offices_shuffle_switch");
    ///<summary>Patio do not disturb switch</summary>
    public SwitchEntity PatioDoNotDisturbSwitch => new(_haContext, "switch.patio_do_not_disturb_switch");
    ///<summary>Patio Light</summary>
    public SwitchEntity PatioLight => new(_haContext, "switch.patio_light");
    ///<summary>Patio repeat switch</summary>
    public SwitchEntity PatioRepeatSwitch => new(_haContext, "switch.patio_repeat_switch");
    ///<summary>Patio shuffle switch</summary>
    public SwitchEntity PatioShuffleSwitch => new(_haContext, "switch.patio_shuffle_switch");
    ///<summary>Porch Light</summary>
    public SwitchEntity PorchLight => new(_haContext, "switch.porch_light");
    ///<summary>Sonoff Downstairs 1 Restart Sonoff Downstairs 1</summary>
    public SwitchEntity RestartSonoffDownstairs1 => new(_haContext, "switch.restart_sonoff_downstairs_1");
    ///<summary>Sonoff Downstairs 2 Restart Sonoff Downstairs 2</summary>
    public SwitchEntity RestartSonoffDownstairs2 => new(_haContext, "switch.restart_sonoff_downstairs_2");
    ///<summary>Weather Station Restart Weather Station</summary>
    public SwitchEntity RestartWeatherStation => new(_haContext, "switch.restart_weather_station");
    ///<summary>Cat Feeder Slow feed</summary>
    public SwitchEntity RojecoPetFeederSlowFeed => new(_haContext, "switch.rojeco_pet_feeder_slow_feed");
    ///<summary>Shed Echo Input do not disturb switch</summary>
    public SwitchEntity ShedEchoInputDoNotDisturbSwitch => new(_haContext, "switch.shed_echo_input_do_not_disturb_switch");
    ///<summary>Shed Echo Input repeat switch</summary>
    public SwitchEntity ShedEchoInputRepeatSwitch => new(_haContext, "switch.shed_echo_input_repeat_switch");
    ///<summary>Shed Echo Input shuffle switch</summary>
    public SwitchEntity ShedEchoInputShuffleSwitch => new(_haContext, "switch.shed_echo_input_shuffle_switch");
    ///<summary>Shelly Landing Light Switch</summary>
    public SwitchEntity ShellyLandingLightSwitch => new(_haContext, "switch.shelly_landing_light_switch");
    ///<summary>Snug Echo Show do not disturb switch</summary>
    public SwitchEntity SnugEchoShowDoNotDisturbSwitch => new(_haContext, "switch.snug_echo_show_do_not_disturb_switch");
    ///<summary>Snug Echo Show repeat switch</summary>
    public SwitchEntity SnugEchoShowRepeatSwitch => new(_haContext, "switch.snug_echo_show_repeat_switch");
    ///<summary>Snug Echo Show shuffle switch</summary>
    public SwitchEntity SnugEchoShowShuffleSwitch => new(_haContext, "switch.snug_echo_show_shuffle_switch");
    ///<summary>Snug Fire TV do not disturb switch</summary>
    public SwitchEntity SnugFireTvDoNotDisturbSwitch => new(_haContext, "switch.snug_fire_tv_do_not_disturb_switch");
    ///<summary>Snug Led Strip Audio</summary>
    public SwitchEntity SnugLedStripAudio => new(_haContext, "switch.snug_led_strip_audio");
    ///<summary>Sonoff Downstairs 1 Sonoff Downstairs 1 Bookshelf Light</summary>
    public SwitchEntity SonoffDownstairs1BookshelfLight => new(_haContext, "switch.sonoff_downstairs_1_bookshelf_light");
    ///<summary>Sonoff Downstairs 1 Sonoff Downstairs 1 Extractor Fan</summary>
    public SwitchEntity SonoffDownstairs1ExtractorFan => new(_haContext, "switch.sonoff_downstairs_1_extractor_fan");
    ///<summary>Sonoff Downstairs 1 Sonoff Downstairs 1 Hallway Light</summary>
    public SwitchEntity SonoffDownstairs1HallwayLight => new(_haContext, "switch.sonoff_downstairs_1_hallway_light");
    ///<summary>Sonoff Downstairs 1 Sonoff Downstairs 1 Lounge Light</summary>
    public SwitchEntity SonoffDownstairs1LoungeLight => new(_haContext, "switch.sonoff_downstairs_1_lounge_light");
    ///<summary>Sonoff Downstairs 2 Sonoff Downstairs 2 Cabinet Light</summary>
    public SwitchEntity SonoffDownstairs2CabinetLight => new(_haContext, "switch.sonoff_downstairs_2_cabinet_light");
    ///<summary>Sonoff Downstairs 2 Sonoff Downstairs 2 Drawing Room Light</summary>
    public SwitchEntity SonoffDownstairs2DrawingRoomLight => new(_haContext, "switch.sonoff_downstairs_2_drawing_room_light");
    ///<summary>Sonoff Downstairs 2 Sonoff Downstairs 2 Kitchen Light</summary>
    public SwitchEntity SonoffDownstairs2KitchenLight => new(_haContext, "switch.sonoff_downstairs_2_kitchen_light");
    ///<summary>Sonoff Downstairs 2 Sonoff Downstairs 2 Spare Ch1</summary>
    public SwitchEntity SonoffDownstairs2SpareCh1 => new(_haContext, "switch.sonoff_downstairs_2_spare_ch1");
    ///<summary>studio-bluetooth-proxy ESPresense Studio Active Scan</summary>
    public SwitchEntity StudioBluetoothProxyActiveScan => new(_haContext, "switch.studio_bluetooth_proxy_active_scan");
    ///<summary>studio-bluetooth-proxy ESPresense Studio Arduino OTA</summary>
    public SwitchEntity StudioBluetoothProxyArduinoOta => new(_haContext, "switch.studio_bluetooth_proxy_arduino_ota");
    ///<summary>studio-bluetooth-proxy ESPresense Studio Auto Update</summary>
    public SwitchEntity StudioBluetoothProxyAutoUpdate => new(_haContext, "switch.studio_bluetooth_proxy_auto_update");
    ///<summary>studio-bluetooth-proxy ESPresense Studio Prerelease</summary>
    public SwitchEntity StudioBluetoothProxyPrerelease => new(_haContext, "switch.studio_bluetooth_proxy_prerelease");
    ///<summary>Studio Echo Dot do not disturb switch</summary>
    public SwitchEntity StudioEchoDotDoNotDisturbSwitch => new(_haContext, "switch.studio_echo_dot_do_not_disturb_switch");
    ///<summary>Studio Echo Dot repeat switch</summary>
    public SwitchEntity StudioEchoDotRepeatSwitch => new(_haContext, "switch.studio_echo_dot_repeat_switch");
    ///<summary>Studio Echo Dot shuffle switch</summary>
    public SwitchEntity StudioEchoDotShuffleSwitch => new(_haContext, "switch.studio_echo_dot_shuffle_switch");
    ///<summary>Studio Lamp</summary>
    public SwitchEntity StudioLamp => new(_haContext, "switch.studio_lamp");
    ///<summary>Studio Light</summary>
    public SwitchEntity StudioLight => new(_haContext, "switch.studio_light");
    ///<summary>Sump Alarm Sump Alarm Reset</summary>
    public SwitchEntity SumpAlarmReset => new(_haContext, "switch.sump_alarm_reset");
    ///<summary>Sump Alarm Sump Alarm Restart</summary>
    public SwitchEntity SumpAlarmRestart => new(_haContext, "switch.sump_alarm_restart");
    ///<summary>This Device do not disturb switch</summary>
    public SwitchEntity ThisDeviceDoNotDisturbSwitch2 => new(_haContext, "switch.this_device_do_not_disturb_switch_2");
    ///<summary>Upstairs do not disturb switch</summary>
    public SwitchEntity UpstairsDoNotDisturbSwitch => new(_haContext, "switch.upstairs_do_not_disturb_switch");
    ///<summary>Upstairs repeat switch</summary>
    public SwitchEntity UpstairsRepeatSwitch => new(_haContext, "switch.upstairs_repeat_switch");
    ///<summary>Upstairs shuffle switch</summary>
    public SwitchEntity UpstairsShuffleSwitch => new(_haContext, "switch.upstairs_shuffle_switch");
    ///<summary>Uptime Card Pre-release</summary>
    public SwitchEntity UptimeCardPreRelease => new(_haContext, "switch.uptime_card_pre_release");
    ///<summary>Utility Room Echo Dot do not disturb switch</summary>
    public SwitchEntity UtilityRoomEchoDotDoNotDisturbSwitch => new(_haContext, "switch.utility_room_echo_dot_do_not_disturb_switch");
    ///<summary>Utility Room Echo Dot repeat switch</summary>
    public SwitchEntity UtilityRoomEchoDotRepeatSwitch => new(_haContext, "switch.utility_room_echo_dot_repeat_switch");
    ///<summary>Utility Room Echo Dot shuffle switch</summary>
    public SwitchEntity UtilityRoomEchoDotShuffleSwitch => new(_haContext, "switch.utility_room_echo_dot_shuffle_switch");
    ///<summary>Vacuum Card Pre-release</summary>
    public SwitchEntity VacuumCardPreRelease => new(_haContext, "switch.vacuum_card_pre_release");
    ///<summary>WallPanel Pre-release</summary>
    public SwitchEntity WallpanelPreRelease => new(_haContext, "switch.wallpanel_pre_release");
    ///<summary>Waste Collection Schedule Pre-release</summary>
    public SwitchEntity WasteCollectionSchedulePreRelease => new(_haContext, "switch.waste_collection_schedule_pre_release");
    ///<summary>Zigbee2MQTT Bridge Permit join</summary>
    public SwitchEntity Zigbee2mqttBridgePermitJoin => new(_haContext, "switch.zigbee2mqtt_bridge_permit_join");
}

public partial class TextEntities
{
    private readonly IHaContext _haContext;
    public TextEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all text entities currently registered (at runtime) in Home Assistant as TextEntity</summary>
    public IEnumerable<TextEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("text.")).Select(e => new TextEntity(e));
    ///<summary>Previous Cost Override Tariff Electricity (22J0181544/1610019557951)</summary>
    public TextEntity OctopusEnergyElectricity22j01815441610019557951PreviousAccumulativeCostOverrideTariff => new(_haContext, "text.octopus_energy_electricity_22j0181544_1610019557951_previous_accumulative_cost_override_tariff");
    ///<summary>Previous Cost Override Tariff Gas (E6E09476682323/1590806503)</summary>
    public TextEntity OctopusEnergyGasE6e094766823231590806503PreviousAccumulativeCostOverrideTariff => new(_haContext, "text.octopus_energy_gas_e6e09476682323_1590806503_previous_accumulative_cost_override_tariff");
}

public partial class TimerEntities
{
    private readonly IHaContext _haContext;
    public TimerEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all timer entities currently registered (at runtime) in Home Assistant as TimerEntity</summary>
    public IEnumerable<TimerEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("timer.")).Select(e => new TimerEntity(e));
    ///<summary>Lounge</summary>
    public TimerEntity Lounge => new(_haContext, "timer.lounge");
    ///<summary>shower</summary>
    public TimerEntity Shower => new(_haContext, "timer.shower");
}

public partial class TodoEntities
{
    private readonly IHaContext _haContext;
    public TodoEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all todo entities currently registered (at runtime) in Home Assistant as TodoEntity</summary>
    public IEnumerable<TodoEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("todo.")).Select(e => new TodoEntity(e));
    ///<summary>Andy Dailies</summary>
    public TodoEntity AndyDailies => new(_haContext, "todo.andy_dailies");
    ///<summary>Andy To-Do&apos;s</summary>
    public TodoEntity AndyToDoS => new(_haContext, "todo.andy_to_do_s");
    ///<summary>Diy tasks</summary>
    public TodoEntity DiyTasks => new(_haContext, "todo.diy_tasks");
    ///<summary>Home automation tasks</summary>
    public TodoEntity HomeAutomationTasks => new(_haContext, "todo.home_automation_tasks");
    ///<summary>Recipe ideas</summary>
    public TodoEntity RecipeIdeas => new(_haContext, "todo.recipe_ideas");
    ///<summary>Shopping List</summary>
    public TodoEntity ShoppingList => new(_haContext, "todo.shopping_list");
    ///<summary>Woodwork</summary>
    public TodoEntity Woodwork => new(_haContext, "todo.woodwork");
}

public partial class TtsEntities
{
    private readonly IHaContext _haContext;
    public TtsEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all tts entities currently registered (at runtime) in Home Assistant as TtsEntity</summary>
    public IEnumerable<TtsEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("tts.")).Select(e => new TtsEntity(e));
    ///<summary>Home Assistant Cloud</summary>
    public TtsEntity HomeAssistantCloud => new(_haContext, "tts.home_assistant_cloud");
}

public partial class UpdateEntities
{
    private readonly IHaContext _haContext;
    public UpdateEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all update entities currently registered (at runtime) in Home Assistant as UpdateEntity</summary>
    public IEnumerable<UpdateEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("update.")).Select(e => new UpdateEntity(e));
    ///<summary>Bedside Switch</summary>
    public UpdateEntity _0xf082c0fffe3d9a0f => new(_haContext, "update.0xf082c0fffe3d9a0f");
    ///<summary>AdGuard Home Update</summary>
    public UpdateEntity AdguardHomeUpdate => new(_haContext, "update.adguard_home_update");
    ///<summary>Alarmo Card update</summary>
    public UpdateEntity AlarmoCardUpdate => new(_haContext, "update.alarmo_card_update");
    ///<summary>Alarmo update</summary>
    public UpdateEntity AlarmoUpdate => new(_haContext, "update.alarmo_update");
    ///<summary>Alexa Media Player update</summary>
    public UpdateEntity AlexaMediaPlayerUpdate => new(_haContext, "update.alexa_media_player_update");
    ///<summary>Analog Clock update</summary>
    public UpdateEntity AnalogClockUpdate => new(_haContext, "update.analog_clock_update");
    ///<summary>apexcharts-card update</summary>
    public UpdateEntity ApexchartsCardUpdate => new(_haContext, "update.apexcharts_card_update");
    ///<summary>auto-entities update</summary>
    public UpdateEntity AutoEntitiesUpdate => new(_haContext, "update.auto_entities_update");
    ///<summary>Banner Card update</summary>
    public UpdateEntity BannerCardUpdate => new(_haContext, "update.banner_card_update");
    ///<summary>Bar Card update</summary>
    public UpdateEntity BarCardUpdate => new(_haContext, "update.bar_card_update");
    ///<summary>Shelly Basement Hall Lights firmware update</summary>
    public UpdateEntity BasementHallLightsFirmwareUpdate => new(_haContext, "update.basement_hall_lights_firmware_update");
    ///<summary>Basement Lights 1 firmware update</summary>
    public UpdateEntity BasementLights1FirmwareUpdate => new(_haContext, "update.basement_lights_1_firmware_update");
    ///<summary>Basement Lights 2 firmware update</summary>
    public UpdateEntity BasementLights2FirmwareUpdate => new(_haContext, "update.basement_lights_2_firmware_update");
    ///<summary>Bathroom Switch</summary>
    public UpdateEntity BathroomSwitch => new(_haContext, "update.bathroom_switch");
    ///<summary>Bedroom Switch</summary>
    public UpdateEntity BedroomSwitch => new(_haContext, "update.bedroom_switch");
    ///<summary>Better Thermostat UI update</summary>
    public UpdateEntity BetterThermostatUiUpdate => new(_haContext, "update.better_thermostat_ui_update");
    ///<summary>browser_mod update</summary>
    public UpdateEntity BrowserModUpdate => new(_haContext, "update.browser_mod_update");
    ///<summary>button-card update</summary>
    public UpdateEntity ButtonCardUpdate => new(_haContext, "update.button_card_update");
    ///<summary>Charger Card update</summary>
    public UpdateEntity ChargerCardUpdate => new(_haContext, "update.charger_card_update");
    ///<summary>Coffee Machine</summary>
    public UpdateEntity CoffeeMachine => new(_haContext, "update.coffee_machine");
    ///<summary>Decluttering Card update</summary>
    public UpdateEntity DeclutteringCardUpdate => new(_haContext, "update.decluttering_card_update");
    ///<summary>Dining Room Switch</summary>
    public UpdateEntity DiningRoomSwitch => new(_haContext, "update.dining_room_switch");
    ///<summary>Display Cabinet Light</summary>
    public UpdateEntity DisplayCabinetLight => new(_haContext, "update.display_cabinet_light");
    ///<summary>Doorbell Firmware</summary>
    public UpdateEntity DoorbellFirmware => new(_haContext, "update.doorbell_firmware");
    ///<summary>Drawing Room Switch</summary>
    public UpdateEntity DrawingRoomSwitch => new(_haContext, "update.drawing_room_switch");
    ///<summary>Dressing Room Switch</summary>
    public UpdateEntity DressingRoomSwitch => new(_haContext, "update.dressing_room_switch");
    ///<summary>ESPHome Update</summary>
    public UpdateEntity EsphomeUpdate => new(_haContext, "update.esphome_update");
    ///<summary>ESPresense Companion Update</summary>
    public UpdateEntity EspresenseCompanionUpdate => new(_haContext, "update.espresense_companion_update");
    ///<summary>Garbage Collection Card update</summary>
    public UpdateEntity GarbageCollectionCardUpdate => new(_haContext, "update.garbage_collection_card_update");
    ///<summary>Garden Tap</summary>
    public UpdateEntity GardenTap => new(_haContext, "update.garden_tap");
    ///<summary>Glances Update</summary>
    public UpdateEntity GlancesUpdate => new(_haContext, "update.glances_update");
    ///<summary>Grafana Update</summary>
    public UpdateEntity GrafanaUpdate2 => new(_haContext, "update.grafana_update_2");
    ///<summary>Grocy Update</summary>
    public UpdateEntity GrocyUpdate => new(_haContext, "update.grocy_update");
    ///<summary>Guest Room Bedside Switch</summary>
    public UpdateEntity GuestRoomBedsideSwitch => new(_haContext, "update.guest_room_bedside_switch");
    ///<summary>Guest Room Lamp</summary>
    public UpdateEntity GuestRoomLamp => new(_haContext, "update.guest_room_lamp");
    ///<summary>Guest Room Remote</summary>
    public UpdateEntity GuestRoomRemote => new(_haContext, "update.guest_room_remote");
    ///<summary>Guest Room Switch</summary>
    public UpdateEntity GuestRoomSwitch => new(_haContext, "update.guest_room_switch");
    ///<summary>HA (Lovelace) Card Waze Travel Time update</summary>
    public UpdateEntity HaLovelaceCardWazeTravelTimeUpdate => new(_haContext, "update.ha_lovelace_card_waze_travel_time_update");
    ///<summary>HACS update</summary>
    public UpdateEntity HacsUpdate => new(_haContext, "update.hacs_update");
    ///<summary>Hallway Light firmware</summary>
    public UpdateEntity HallwayLightFirmware => new(_haContext, "update.hallway_light_firmware");
    ///<summary>Home Assistant Core Update</summary>
    public UpdateEntity HomeAssistantCoreUpdate => new(_haContext, "update.home_assistant_core_update");
    ///<summary>Home Assistant Google Drive Backup Update</summary>
    public UpdateEntity HomeAssistantGoogleDriveBackupUpdate => new(_haContext, "update.home_assistant_google_drive_backup_update");
    ///<summary>Home Assistant Supervisor Update</summary>
    public UpdateEntity HomeAssistantSupervisorUpdate => new(_haContext, "update.home_assistant_supervisor_update");
    ///<summary>InfluxDB Update</summary>
    public UpdateEntity InfluxdbUpdate => new(_haContext, "update.influxdb_update");
    ///<summary>Kitchen Air Quality</summary>
    public UpdateEntity KitchenAirQuality => new(_haContext, "update.kitchen_air_quality");
    ///<summary>Kitchen Switch</summary>
    public UpdateEntity KitchenSwitch => new(_haContext, "update.kitchen_switch");
    ///<summary>Left Bedside Switch</summary>
    public UpdateEntity LeftBedsideSwitch => new(_haContext, "update.left_bedside_switch");
    ///<summary>Light Entity Card update</summary>
    public UpdateEntity LightEntityCardUpdate => new(_haContext, "update.light_entity_card_update");
    ///<summary>Local Tuya update</summary>
    public UpdateEntity LocalTuyaUpdate => new(_haContext, "update.local_tuya_update");
    ///<summary>Lounge Sofa Switch</summary>
    public UpdateEntity LoungeSofaSwitch => new(_haContext, "update.lounge_sofa_switch");
    ///<summary>Lounge Switch</summary>
    public UpdateEntity LoungeSwitch => new(_haContext, "update.lounge_switch");
    ///<summary>Lovelace Card Templater update</summary>
    public UpdateEntity LovelaceCardTemplaterUpdate => new(_haContext, "update.lovelace_card_templater_update");
    ///<summary>Lovelace Grocy Chores Card update</summary>
    public UpdateEntity LovelaceGrocyChoresCardUpdate => new(_haContext, "update.lovelace_grocy_chores_card_update");
    ///<summary>MariaDB Update</summary>
    public UpdateEntity MariadbUpdate => new(_haContext, "update.mariadb_update");
    ///<summary>Matter Server Update</summary>
    public UpdateEntity MatterServerUpdate => new(_haContext, "update.matter_server_update");
    ///<summary>Meross Integration update</summary>
    public UpdateEntity MerossIntegrationUpdate => new(_haContext, "update.meross_integration_update");
    ///<summary>Meross LAN update</summary>
    public UpdateEntity MerossLanUpdate => new(_haContext, "update.meross_lan_update");
    ///<summary>Meross Local Broker Addon Update</summary>
    public UpdateEntity MerossLocalBrokerAddonUpdate => new(_haContext, "update.meross_local_broker_addon_update");
    ///<summary>mini-graph-card update</summary>
    public UpdateEntity MiniGraphCardUpdate => new(_haContext, "update.mini_graph_card_update");
    ///<summary>Mini Media Player update</summary>
    public UpdateEntity MiniMediaPlayerUpdate => new(_haContext, "update.mini_media_player_update");
    ///<summary>Mosquitto broker Update</summary>
    public UpdateEntity MosquittoBrokerUpdate => new(_haContext, "update.mosquitto_broker_update");
    ///<summary>Mushroom update</summary>
    public UpdateEntity MushroomUpdate => new(_haContext, "update.mushroom_update");
    ///<summary>Music Assistant Server Update</summary>
    public UpdateEntity MusicAssistantUpdate => new(_haContext, "update.music_assistant_update");
    ///<summary>NetDaemon update</summary>
    public UpdateEntity NetdaemonUpdate => new(_haContext, "update.netdaemon_update");
    ///<summary>NetDaemon V4 (.NET 8) Update</summary>
    public UpdateEntity NetdaemonV4Net8Update => new(_haContext, "update.netdaemon_v4_net_8_update");
    ///<summary>Nginx Proxy Manager Update</summary>
    public UpdateEntity NginxProxyManagerUpdate => new(_haContext, "update.nginx_proxy_manager_update");
    ///<summary>Firmware</summary>
    public UpdateEntity NspanelFirmware => new(_haContext, "update.nspanel_firmware");
    ///<summary>Octopus Energy update</summary>
    public UpdateEntity OctopusEnergyUpdate => new(_haContext, "update.octopus_energy_update");
    ///<summary>Outside Lights firmware update</summary>
    public UpdateEntity OutsideLightsFirmwareUpdate => new(_haContext, "update.outside_lights_firmware_update");
    ///<summary>Right Bedside Switch</summary>
    public UpdateEntity RightBedsideSwitch => new(_haContext, "update.right_bedside_switch");
    ///<summary>Samba share Update</summary>
    public UpdateEntity SambaShareUpdate => new(_haContext, "update.samba_share_update");
    ///<summary>Shelly Landing Light firmware update</summary>
    public UpdateEntity ShellyLandingLightFirmwareUpdate => new(_haContext, "update.shelly_landing_light_firmware_update");
    ///<summary>Shelly Shed Lights firmware update</summary>
    public UpdateEntity ShellyShedLightsFirmwareUpdate => new(_haContext, "update.shelly_shed_lights_firmware_update");
    ///<summary>Shelly Shed Sockets firmware update</summary>
    public UpdateEntity ShellyShedSocketsFirmwareUpdate => new(_haContext, "update.shelly_shed_sockets_firmware_update");
    ///<summary>Shelly Upstairs Lights 1 firmware</summary>
    public UpdateEntity ShellyUpstairsLights1FirmwareUpdate => new(_haContext, "update.shelly_upstairs_lights_1_firmware_update");
    ///<summary>Shelly Upstairs Lights 2 firmware</summary>
    public UpdateEntity ShellyUpstairsLights2FirmwareUpdate => new(_haContext, "update.shelly_upstairs_lights_2_firmware_update");
    ///<summary>Shelly Upstairs Sockets 4 firmware</summary>
    public UpdateEntity ShellyUpstairsSocket4FirmwareUpdate => new(_haContext, "update.shelly_upstairs_socket_4_firmware_update");
    ///<summary>Snug Desk Switch</summary>
    public UpdateEntity SnugDeskSwitch => new(_haContext, "update.snug_desk_switch");
    ///<summary>Snug Led Strip</summary>
    public UpdateEntity SnugLedStrip => new(_haContext, "update.snug_led_strip");
    ///<summary>Snug Switch</summary>
    public UpdateEntity SnugSwitch => new(_haContext, "update.snug_switch");
    ///<summary>Sonoff Downstairs 1 Firmware</summary>
    public UpdateEntity SonoffDownstairs1Firmware => new(_haContext, "update.sonoff_downstairs_1_firmware");
    ///<summary>Sonoff Downstairs 2 Firmware</summary>
    public UpdateEntity SonoffDownstairs2Firmware => new(_haContext, "update.sonoff_downstairs_2_firmware");
    ///<summary>Spotcast update</summary>
    public UpdateEntity SpotcastUpdate => new(_haContext, "update.spotcast_update");
    ///<summary>Spotify Lovelace Card update</summary>
    public UpdateEntity SpotifyLovelaceCardUpdate => new(_haContext, "update.spotify_lovelace_card_update");
    ///<summary>state-switch update</summary>
    public UpdateEntity StateSwitchUpdate => new(_haContext, "update.state_switch_update");
    ///<summary>Store Switch</summary>
    public UpdateEntity StoreSwitch => new(_haContext, "update.store_switch");
    ///<summary>Studio Bedside Switch</summary>
    public UpdateEntity StudioBedsideSwitch => new(_haContext, "update.studio_bedside_switch");
    ///<summary>Firmware</summary>
    public UpdateEntity StudioBluetoothProxyFirmware => new(_haContext, "update.studio_bluetooth_proxy_firmware");
    ///<summary>Studio Code Server Update</summary>
    public UpdateEntity StudioCodeServerUpdate => new(_haContext, "update.studio_code_server_update");
    ///<summary>Studio Switch</summary>
    public UpdateEntity StudioSwitch => new(_haContext, "update.studio_switch");
    ///<summary>Sump Alarm Firmware</summary>
    public UpdateEntity SumpAlarmFirmware => new(_haContext, "update.sump_alarm_firmware");
    ///<summary>Terminal &amp; SSH Update</summary>
    public UpdateEntity TerminalSshUpdate => new(_haContext, "update.terminal_ssh_update");
    ///<summary>Toilet Switch</summary>
    public UpdateEntity ToiletSwitch => new(_haContext, "update.toilet_switch");
    ///<summary>Travel Time Card update</summary>
    public UpdateEntity TravelTimeCardUpdate => new(_haContext, "update.travel_time_card_update");
    ///<summary>Tuya Local update</summary>
    public UpdateEntity TuyaLocalUpdate => new(_haContext, "update.tuya_local_update");
    ///<summary>Uptime Card update</summary>
    public UpdateEntity UptimeCardUpdate => new(_haContext, "update.uptime_card_update");
    ///<summary>Utility Room Switch</summary>
    public UpdateEntity UtilityRoomSwitch => new(_haContext, "update.utility_room_switch");
    ///<summary>Vacuum Card update</summary>
    public UpdateEntity VacuumCardUpdate => new(_haContext, "update.vacuum_card_update");
    ///<summary>Vertical Stack In Card update</summary>
    public UpdateEntity VerticalStackInCardUpdate => new(_haContext, "update.vertical_stack_in_card_update");
    ///<summary>WallPanel update</summary>
    public UpdateEntity WallpanelUpdate => new(_haContext, "update.wallpanel_update");
    ///<summary>Waste Collection Schedule update</summary>
    public UpdateEntity WasteCollectionScheduleUpdate => new(_haContext, "update.waste_collection_schedule_update");
    ///<summary>Weather Card update</summary>
    public UpdateEntity WeatherCardUpdate => new(_haContext, "update.weather_card_update");
    ///<summary>Weather Station Firmware</summary>
    public UpdateEntity WeatherStationFirmware => new(_haContext, "update.weather_station_firmware");
    ///<summary>WireGuard Update</summary>
    public UpdateEntity WireguardUpdate => new(_haContext, "update.wireguard_update");
    ///<summary>Zigbee2MQTT Update</summary>
    public UpdateEntity Zigbee2mqttUpdate => new(_haContext, "update.zigbee2mqtt_update");
}

public partial class WeatherEntities
{
    private readonly IHaContext _haContext;
    public WeatherEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all weather entities currently registered (at runtime) in Home Assistant as WeatherEntity</summary>
    public IEnumerable<WeatherEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("weather.")).Select(e => new WeatherEntity(e));
    ///<summary>Home</summary>
    public WeatherEntity Home => new(_haContext, "weather.home");
}

public partial class ZoneEntities
{
    private readonly IHaContext _haContext;
    public ZoneEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all zone entities currently registered (at runtime) in Home Assistant as ZoneEntity</summary>
    public IEnumerable<ZoneEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("zone.")).Select(e => new ZoneEntity(e));
    ///<summary>Adam&apos;s</summary>
    public ZoneEntity AdamS => new(_haContext, "zone.adam_s");
    ///<summary>Amy&apos;s</summary>
    public ZoneEntity AmyS => new(_haContext, "zone.amy_s");
    ///<summary>Andy&apos;s Parent&apos;s</summary>
    public ZoneEntity AndySParentS => new(_haContext, "zone.andy_s_parent_s");
    ///<summary>Andy&apos;s Work</summary>
    public ZoneEntity AndyWork => new(_haContext, "zone.andy_work");
    ///<summary>Gym</summary>
    public ZoneEntity Gym => new(_haContext, "zone.gym");
    ///<summary>Heaton Hops</summary>
    public ZoneEntity HeatonHops => new(_haContext, "zone.heaton_hops");
    ///<summary>Heaton moor 1</summary>
    public ZoneEntity HeatonMoor1 => new(_haContext, "zone.heaton_moor_1");
    ///<summary>Heaton Moor 2</summary>
    public ZoneEntity HeatonMoor2 => new(_haContext, "zone.heaton_moor_2");
    ///<summary>Home</summary>
    public ZoneEntity Home => new(_haContext, "zone.home");
    ///<summary>Leanne&apos;s House</summary>
    public ZoneEntity LeanneSHouse => new(_haContext, "zone.leanne_s_house");
    ///<summary>Rachaels</summary>
    public ZoneEntity RachaelAndChris => new(_haContext, "zone.rachael_and_chris");
}

public partial class TagEntities
{
    private readonly IHaContext _haContext;
    public TagEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all tag entities currently registered (at runtime) in Home Assistant as TagEntity</summary>
    public IEnumerable<TagEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("tag.")).Select(e => new TagEntity(e));
    ///<summary>Tag bf42e064-31a0-46ba-b178-b43a3e535eda</summary>
    public TagEntity Bf42e06431a046baB178B43a3e535eda => new(_haContext, "tag.bf42e064_31a0_46ba_b178_b43a3e535eda");
}

public partial class ImageEntities
{
    private readonly IHaContext _haContext;
    public ImageEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all image entities currently registered (at runtime) in Home Assistant as ImageEntity</summary>
    public IEnumerable<ImageEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("image.")).Select(e => new ImageEntity(e));
    ///<summary>Hallway Tablet Screenshot</summary>
    public ImageEntity HallwayTabletScreenshot => new(_haContext, "image.hallway_tablet_screenshot");
}

public partial class NotifyEntities
{
    private readonly IHaContext _haContext;
    public NotifyEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all notify entities currently registered (at runtime) in Home Assistant as NotifyEntity</summary>
    public IEnumerable<NotifyEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("notify.")).Select(e => new NotifyEntity(e));
    ///<summary>Hallway Tablet Overlay message</summary>
    public NotifyEntity HallwayTabletOverlayMessage => new(_haContext, "notify.hallway_tablet_overlay_message");
    ///<summary>Hallway Tablet Text to speech</summary>
    public NotifyEntity HallwayTabletTextToSpeech => new(_haContext, "notify.hallway_tablet_text_to_speech");
}

public partial class VacuumEntities
{
    private readonly IHaContext _haContext;
    public VacuumEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all vacuum entities currently registered (at runtime) in Home Assistant as VacuumEntity</summary>
    public IEnumerable<VacuumEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("vacuum.")).Select(e => new VacuumEntity(e));
    public VacuumEntity Mark => new(_haContext, "vacuum.mark");
}

public partial record LightEntity : Entity<LightEntity, EntityState<LightAttributes>, LightAttributes>, ILightEntityCore
{
    public LightEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public LightEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record LightAttributes
{
    [JsonPropertyName("supported_color_modes")]
    public IReadOnlyList<string>? SupportedColorModes { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("color_mode")]
    public string? ColorMode { get; init; }

    [JsonPropertyName("min_color_temp_kelvin")]
    public double? MinColorTempKelvin { get; init; }

    [JsonPropertyName("max_color_temp_kelvin")]
    public double? MaxColorTempKelvin { get; init; }

    [JsonPropertyName("min_mireds")]
    public double? MinMireds { get; init; }

    [JsonPropertyName("max_mireds")]
    public double? MaxMireds { get; init; }

    [JsonPropertyName("brightness")]
    public double? Brightness { get; init; }

    [JsonPropertyName("color_temp_kelvin")]
    public object? ColorTempKelvin { get; init; }

    [JsonPropertyName("color_temp")]
    public object? ColorTemp { get; init; }

    [JsonPropertyName("hs_color")]
    public object? HsColor { get; init; }

    [JsonPropertyName("rgb_color")]
    public object? RgbColor { get; init; }

    [JsonPropertyName("xy_color")]
    public object? XyColor { get; init; }

    [JsonPropertyName("entity_id")]
    public IReadOnlyList<string>? EntityId { get; init; }

    [JsonPropertyName("effect_list")]
    public IReadOnlyList<string>? EffectList { get; init; }

    [JsonPropertyName("color")]
    public object? Color { get; init; }

    [JsonPropertyName("effect")]
    public object? Effect { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("audio")]
    public string? Audio { get; init; }

    [JsonPropertyName("audio_effect")]
    public string? AudioEffect { get; init; }

    [JsonPropertyName("audio_sensitivity")]
    public string? AudioSensitivity { get; init; }

    [JsonPropertyName("device")]
    public object? Device { get; init; }

    [JsonPropertyName("length")]
    public double? Length { get; init; }

    [JsonPropertyName("linkquality")]
    public double? Linkquality { get; init; }

    [JsonPropertyName("max_brightness")]
    public double? MaxBrightness { get; init; }

    [JsonPropertyName("min_brightness")]
    public double? MinBrightness { get; init; }

    [JsonPropertyName("power_on_behavior")]
    public string? PowerOnBehavior { get; init; }

    [JsonPropertyName("preset")]
    public double? Preset { get; init; }

    [JsonPropertyName("speed")]
    public double? Speed { get; init; }

    [JsonPropertyName("update")]
    public object? Update { get; init; }

    [JsonPropertyName("update_available")]
    public object? UpdateAvailable { get; init; }

    [JsonPropertyName("flowing")]
    public object? Flowing { get; init; }

    [JsonPropertyName("music_mode")]
    public bool? MusicMode { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }
}

public partial record MediaPlayerEntity : Entity<MediaPlayerEntity, EntityState<MediaPlayerAttributes>, MediaPlayerAttributes>, IMediaPlayerEntityCore
{
    public MediaPlayerEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public MediaPlayerEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record MediaPlayerAttributes
{
    [JsonPropertyName("app_id")]
    public string? AppId { get; init; }

    [JsonPropertyName("app_name")]
    public string? AppName { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("entity_picture_local")]
    public string? EntityPictureLocal { get; init; }

    [JsonPropertyName("entity_picture")]
    public string? EntityPicture { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("volume_level")]
    public double? VolumeLevel { get; init; }

    [JsonPropertyName("is_volume_muted")]
    public bool? IsVolumeMuted { get; init; }

    [JsonPropertyName("media_content_id")]
    public string? MediaContentId { get; init; }

    [JsonPropertyName("media_content_type")]
    public string? MediaContentType { get; init; }

    [JsonPropertyName("media_duration")]
    public double? MediaDuration { get; init; }

    [JsonPropertyName("media_position")]
    public double? MediaPosition { get; init; }

    [JsonPropertyName("media_position_updated_at")]
    public string? MediaPositionUpdatedAt { get; init; }

    [JsonPropertyName("media_title")]
    public string? MediaTitle { get; init; }

    [JsonPropertyName("media_album_name")]
    public string? MediaAlbumName { get; init; }

    [JsonPropertyName("media_image_url")]
    public string? MediaImageUrl { get; init; }

    [JsonPropertyName("media_artist")]
    public string? MediaArtist { get; init; }

    [JsonPropertyName("sound_mode_list")]
    public IReadOnlyList<string>? SoundModeList { get; init; }

    [JsonPropertyName("media_track")]
    public object? MediaTrack { get; init; }

    [JsonPropertyName("shuffle")]
    public bool? Shuffle { get; init; }

    [JsonPropertyName("repeat")]
    public string? Repeat { get; init; }

    [JsonPropertyName("source_list")]
    public IReadOnlyList<string>? SourceList { get; init; }

    [JsonPropertyName("source")]
    public string? Source { get; init; }

    [JsonPropertyName("adb_response")]
    public object? AdbResponse { get; init; }

    [JsonPropertyName("hdmi_input")]
    public object? HdmiInput { get; init; }

    [JsonPropertyName("sound_mode")]
    public string? SoundMode { get; init; }

    [JsonPropertyName("sound_mode_raw")]
    public string? SoundModeRaw { get; init; }

    [JsonPropertyName("assumed_state")]
    public bool? AssumedState { get; init; }

    [JsonPropertyName("attribution")]
    public string? Attribution { get; init; }

    [JsonPropertyName("available")]
    public bool? Available { get; init; }

    [JsonPropertyName("last_called")]
    public bool? LastCalled { get; init; }

    [JsonPropertyName("last_called_timestamp")]
    public double? LastCalledTimestamp { get; init; }

    [JsonPropertyName("last_called_summary")]
    public string? LastCalledSummary { get; init; }

    [JsonPropertyName("connected_bluetooth")]
    public object? ConnectedBluetooth { get; init; }

    [JsonPropertyName("bluetooth_list")]
    public IReadOnlyList<string>? BluetoothList { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("media_playlist")]
    public string? MediaPlaylist { get; init; }

    [JsonPropertyName("group_members")]
    public IReadOnlyList<object>? GroupMembers { get; init; }

    [JsonPropertyName("query_result")]
    public object? QueryResult { get; init; }

    [JsonPropertyName("sync_group")]
    public IReadOnlyList<object>? SyncGroup { get; init; }

    [JsonPropertyName("media_channel")]
    public string? MediaChannel { get; init; }
}

public partial record AlarmControlPanelEntity : Entity<AlarmControlPanelEntity, EntityState<AlarmControlPanelAttributes>, AlarmControlPanelAttributes>
{
    public AlarmControlPanelEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public AlarmControlPanelEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record AlarmControlPanelAttributes
{
    [JsonPropertyName("code_format")]
    public string? CodeFormat { get; init; }

    [JsonPropertyName("changed_by")]
    public object? ChangedBy { get; init; }

    [JsonPropertyName("code_arm_required")]
    public bool? CodeArmRequired { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("arm_mode")]
    public object? ArmMode { get; init; }

    [JsonPropertyName("open_sensors")]
    public object? OpenSensors { get; init; }

    [JsonPropertyName("bypassed_sensors")]
    public object? BypassedSensors { get; init; }

    [JsonPropertyName("delay")]
    public object? Delay { get; init; }

    [JsonPropertyName("next_state")]
    public string? NextState { get; init; }

    [JsonPropertyName("previous_state")]
    public object? PreviousState { get; init; }
}

public partial record AutomationEntity : Entity<AutomationEntity, EntityState<AutomationAttributes>, AutomationAttributes>, IAutomationEntityCore
{
    public AutomationEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public AutomationEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record AutomationAttributes
{
    [JsonPropertyName("id")]
    public string? Id { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("last_triggered")]
    public string? LastTriggered { get; init; }

    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("current")]
    public double? Current { get; init; }

    [JsonPropertyName("max")]
    public double? Max { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public partial record BinarySensorEntity : Entity<BinarySensorEntity, EntityState<BinarySensorAttributes>, BinarySensorAttributes>, IBinarySensorEntityCore
{
    public BinarySensorEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public BinarySensorEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record BinarySensorAttributes
{
    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("entity_id")]
    public object? EntityId { get; init; }

    [JsonPropertyName("gradient")]
    public double? Gradient { get; init; }

    [JsonPropertyName("invert")]
    public bool? Invert { get; init; }

    [JsonPropertyName("min_gradient")]
    public double? MinGradient { get; init; }

    [JsonPropertyName("sample_count")]
    public double? SampleCount { get; init; }

    [JsonPropertyName("sample_duration")]
    public double? SampleDuration { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("target")]
    public string? Target { get; init; }

    [JsonPropertyName("attribution")]
    public string? Attribution { get; init; }

    [JsonPropertyName("battery")]
    public double? Battery { get; init; }

    [JsonPropertyName("battery_low")]
    public bool? BatteryLow { get; init; }

    [JsonPropertyName("contact")]
    public bool? Contact { get; init; }

    [JsonPropertyName("device")]
    public object? Device { get; init; }

    [JsonPropertyName("linkquality")]
    public double? Linkquality { get; init; }

    [JsonPropertyName("tamper")]
    public bool? Tamper { get; init; }

    [JsonPropertyName("voltage")]
    public double? Voltage { get; init; }

    [JsonPropertyName("current_joined_event_start")]
    public object? CurrentJoinedEventStart { get; init; }

    [JsonPropertyName("current_joined_event_end")]
    public object? CurrentJoinedEventEnd { get; init; }

    [JsonPropertyName("current_joined_event_duration_in_minutes")]
    public object? CurrentJoinedEventDurationInMinutes { get; init; }

    [JsonPropertyName("next_joined_event_start")]
    public object? NextJoinedEventStart { get; init; }

    [JsonPropertyName("next_joined_event_end")]
    public object? NextJoinedEventEnd { get; init; }

    [JsonPropertyName("next_joined_event_duration_in_minutes")]
    public object? NextJoinedEventDurationInMinutes { get; init; }

    [JsonPropertyName("data_last_retrieved")]
    public string? DataLastRetrieved { get; init; }

    [JsonPropertyName("last_evaluated")]
    public string? LastEvaluated { get; init; }

    [JsonPropertyName("current_start")]
    public object? CurrentStart { get; init; }

    [JsonPropertyName("current_end")]
    public object? CurrentEnd { get; init; }

    [JsonPropertyName("next_start")]
    public object? NextStart { get; init; }

    [JsonPropertyName("next_end")]
    public object? NextEnd { get; init; }

    [JsonPropertyName("ip")]
    public string? Ip { get; init; }

    [JsonPropertyName("uptime")]
    public double? Uptime { get; init; }

    [JsonPropertyName("firm")]
    public string? Firm { get; init; }

    [JsonPropertyName("rssi")]
    public double? Rssi { get; init; }

    [JsonPropertyName("ver")]
    public string? Ver { get; init; }

    [JsonPropertyName("adverts")]
    public double? Adverts { get; init; }

    [JsonPropertyName("seen")]
    public double? Seen { get; init; }

    [JsonPropertyName("reported")]
    public double? Reported { get; init; }

    [JsonPropertyName("freeHeap")]
    public double? FreeHeap { get; init; }

    [JsonPropertyName("maxAllocHeap")]
    public double? MaxAllocHeap { get; init; }

    [JsonPropertyName("memFrag")]
    public double? MemFrag { get; init; }

    [JsonPropertyName("scanHighWater")]
    public double? ScanHighWater { get; init; }

    [JsonPropertyName("maxHeap")]
    public double? MaxHeap { get; init; }

    [JsonPropertyName("scanStack")]
    public double? ScanStack { get; init; }

    [JsonPropertyName("loopStack")]
    public double? LoopStack { get; init; }

    [JsonPropertyName("bleStack")]
    public double? BleStack { get; init; }

    [JsonPropertyName("occupancy")]
    public bool? Occupancy { get; init; }

    [JsonPropertyName("power_on_behavior")]
    public string? PowerOnBehavior { get; init; }

    [JsonPropertyName("update")]
    public object? Update { get; init; }

    [JsonPropertyName("update_available")]
    public bool? UpdateAvailable { get; init; }

    [JsonPropertyName("action")]
    public object? Action { get; init; }

    [JsonPropertyName("click")]
    public object? Click { get; init; }

    [JsonPropertyName("audio")]
    public string? Audio { get; init; }

    [JsonPropertyName("audio_effect")]
    public string? AudioEffect { get; init; }

    [JsonPropertyName("audio_sensitivity")]
    public string? AudioSensitivity { get; init; }

    [JsonPropertyName("brightness")]
    public double? Brightness { get; init; }

    [JsonPropertyName("color")]
    public object? Color { get; init; }

    [JsonPropertyName("color_mode")]
    public string? ColorMode { get; init; }

    [JsonPropertyName("color_temp")]
    public double? ColorTemp { get; init; }

    [JsonPropertyName("length")]
    public double? Length { get; init; }

    [JsonPropertyName("max_brightness")]
    public double? MaxBrightness { get; init; }

    [JsonPropertyName("min_brightness")]
    public double? MinBrightness { get; init; }

    [JsonPropertyName("preset")]
    public double? Preset { get; init; }

    [JsonPropertyName("speed")]
    public double? Speed { get; init; }

    [JsonPropertyName("humidity")]
    public double? Humidity { get; init; }

    [JsonPropertyName("pm25")]
    public double? Pm25 { get; init; }

    [JsonPropertyName("temperature")]
    public double? Temperature { get; init; }

    [JsonPropertyName("voc_index")]
    public double? VocIndex { get; init; }

    [JsonPropertyName("ignoring_battery_optimizations")]
    public bool? IgnoringBatteryOptimizations { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("event_id")]
    public string? EventId { get; init; }

    [JsonPropertyName("event_score")]
    public double? EventScore { get; init; }

    [JsonPropertyName("teleFails")]
    public double? TeleFails { get; init; }
}

public partial record ButtonEntity : Entity<ButtonEntity, EntityState<ButtonAttributes>, ButtonAttributes>, IButtonEntityCore
{
    public ButtonEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public ButtonEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record ButtonAttributes
{
    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("action")]
    public object? Action { get; init; }

    [JsonPropertyName("battery")]
    public double? Battery { get; init; }

    [JsonPropertyName("device")]
    public object? Device { get; init; }

    [JsonPropertyName("linkquality")]
    public double? Linkquality { get; init; }

    [JsonPropertyName("update")]
    public object? Update { get; init; }

    [JsonPropertyName("update_available")]
    public bool? UpdateAvailable { get; init; }

    [JsonPropertyName("power_on_behavior")]
    public string? PowerOnBehavior { get; init; }

    [JsonPropertyName("click")]
    public object? Click { get; init; }

    [JsonPropertyName("humidity")]
    public double? Humidity { get; init; }

    [JsonPropertyName("pm25")]
    public double? Pm25 { get; init; }

    [JsonPropertyName("temperature")]
    public double? Temperature { get; init; }

    [JsonPropertyName("voc_index")]
    public double? VocIndex { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("entity_picture")]
    public string? EntityPicture { get; init; }
}

public partial record CalendarEntity : Entity<CalendarEntity, EntityState<CalendarAttributes>, CalendarAttributes>, ICalendarEntityCore
{
    public CalendarEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public CalendarEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record CalendarAttributes
{
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    [JsonPropertyName("all_day")]
    public bool? AllDay { get; init; }

    [JsonPropertyName("start_time")]
    public string? StartTime { get; init; }

    [JsonPropertyName("end_time")]
    public string? EndTime { get; init; }

    [JsonPropertyName("location")]
    public string? Location { get; init; }

    [JsonPropertyName("description")]
    public string? Description { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("offset_reached")]
    public bool? OffsetReached { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("yesterdaily")]
    public bool? Yesterdaily { get; init; }
}

public partial record CameraEntity : Entity<CameraEntity, EntityState<CameraAttributes>, CameraAttributes>, ICameraEntityCore
{
    public CameraEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public CameraEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record CameraAttributes
{
    [JsonPropertyName("access_token")]
    public string? AccessToken { get; init; }

    [JsonPropertyName("motion_detection")]
    public bool? MotionDetection { get; init; }

    [JsonPropertyName("frontend_stream_type")]
    public string? FrontendStreamType { get; init; }

    [JsonPropertyName("width")]
    public double? Width { get; init; }

    [JsonPropertyName("height")]
    public double? Height { get; init; }

    [JsonPropertyName("fps")]
    public double? Fps { get; init; }

    [JsonPropertyName("bitrate")]
    public double? Bitrate { get; init; }

    [JsonPropertyName("channel_id")]
    public double? ChannelId { get; init; }

    [JsonPropertyName("attribution")]
    public string? Attribution { get; init; }

    [JsonPropertyName("entity_picture")]
    public string? EntityPicture { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("generated_at")]
    public string? GeneratedAt { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }
}

public partial record ClimateEntity : Entity<ClimateEntity, EntityState<ClimateAttributes>, ClimateAttributes>, IClimateEntityCore
{
    public ClimateEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public ClimateEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record ClimateAttributes
{
    [JsonPropertyName("hvac_modes")]
    public IReadOnlyList<string>? HvacModes { get; init; }

    [JsonPropertyName("min_temp")]
    public double? MinTemp { get; init; }

    [JsonPropertyName("max_temp")]
    public double? MaxTemp { get; init; }

    [JsonPropertyName("target_temp_step")]
    public double? TargetTempStep { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("preset_modes")]
    public IReadOnlyList<string>? PresetModes { get; init; }

    [JsonPropertyName("current_temperature")]
    public double? CurrentTemperature { get; init; }

    [JsonPropertyName("temperature")]
    public double? Temperature { get; init; }

    [JsonPropertyName("hvac_action")]
    public string? HvacAction { get; init; }

    [JsonPropertyName("preset_mode")]
    public string? PresetMode { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }
}

public partial record ConversationEntity : Entity<ConversationEntity, EntityState<ConversationAttributes>, ConversationAttributes>
{
    public ConversationEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public ConversationEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record ConversationAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public partial record DeviceTrackerEntity : Entity<DeviceTrackerEntity, EntityState<DeviceTrackerAttributes>, DeviceTrackerAttributes>, IDeviceTrackerEntityCore
{
    public DeviceTrackerEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public DeviceTrackerEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record DeviceTrackerAttributes
{
    [JsonPropertyName("source_type")]
    public string? SourceType { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("x")]
    public double? X { get; init; }

    [JsonPropertyName("y")]
    public double? Y { get; init; }

    [JsonPropertyName("z")]
    public double? Z { get; init; }

    [JsonPropertyName("confidence")]
    public double? Confidence { get; init; }

    [JsonPropertyName("fixes")]
    public double? Fixes { get; init; }

    [JsonPropertyName("best_scenario")]
    public string? BestScenario { get; init; }

    [JsonPropertyName("latitude")]
    public double? Latitude { get; init; }

    [JsonPropertyName("longitude")]
    public double? Longitude { get; init; }

    [JsonPropertyName("gps_accuracy")]
    public double? GpsAccuracy { get; init; }

    [JsonPropertyName("altitude")]
    public double? Altitude { get; init; }

    [JsonPropertyName("is_lost")]
    public bool? IsLost { get; init; }

    [JsonPropertyName("ring_state")]
    public string? RingState { get; init; }

    [JsonPropertyName("voip_state")]
    public string? VoipState { get; init; }

    [JsonPropertyName("last_lost_timestamp")]
    public string? LastLostTimestamp { get; init; }

    [JsonPropertyName("last_timestamp")]
    public string? LastTimestamp { get; init; }

    [JsonPropertyName("battery_level")]
    public double? BatteryLevel { get; init; }

    [JsonPropertyName("vertical_accuracy")]
    public double? VerticalAccuracy { get; init; }

    [JsonPropertyName("course")]
    public double? Course { get; init; }

    [JsonPropertyName("speed")]
    public double? Speed { get; init; }

    [JsonPropertyName("account_fetch_interval")]
    public double? AccountFetchInterval { get; init; }

    [JsonPropertyName("device_name")]
    public string? DeviceName { get; init; }

    [JsonPropertyName("device_status")]
    public string? DeviceStatus { get; init; }

    [JsonPropertyName("owner_fullname")]
    public string? OwnerFullname { get; init; }

    [JsonPropertyName("battery_status")]
    public string? BatteryStatus { get; init; }

    [JsonPropertyName("battery")]
    public double? Battery { get; init; }

    [JsonPropertyName("low_power_mode")]
    public bool? LowPowerMode { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public partial record EventEntity : Entity<EventEntity, EntityState<EventAttributes>, EventAttributes>
{
    public EventEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public EventEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record EventAttributes
{
    [JsonPropertyName("event_types")]
    public IReadOnlyList<string>? EventTypes { get; init; }

    [JsonPropertyName("event_type")]
    public string? EventType { get; init; }

    [JsonPropertyName("account_id")]
    public string? AccountId { get; init; }

    [JsonPropertyName("available_events")]
    public IReadOnlyList<object>? AvailableEvents { get; init; }

    [JsonPropertyName("joined_events")]
    public IReadOnlyList<object>? JoinedEvents { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("rates")]
    public IReadOnlyList<object>? Rates { get; init; }

    [JsonPropertyName("min_rate")]
    public double? MinRate { get; init; }

    [JsonPropertyName("max_rate")]
    public double? MaxRate { get; init; }

    [JsonPropertyName("average_rate")]
    public double? AverageRate { get; init; }

    [JsonPropertyName("mpan")]
    public string? Mpan { get; init; }

    [JsonPropertyName("serial_number")]
    public string? SerialNumber { get; init; }

    [JsonPropertyName("tariff_code")]
    public string? TariffCode { get; init; }

    [JsonPropertyName("mprn")]
    public string? Mprn { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public partial record FanEntity : Entity<FanEntity, EntityState<FanAttributes>, FanAttributes>
{
    public FanEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public FanEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record FanAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public partial record GroupEntity : Entity<GroupEntity, EntityState<GroupAttributes>, GroupAttributes>, IGroupEntityCore
{
    public GroupEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public GroupEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record GroupAttributes
{
    [JsonPropertyName("entity_id")]
    public IReadOnlyList<string>? EntityId { get; init; }

    [JsonPropertyName("order")]
    public double? Order { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record InputBooleanEntity : Entity<InputBooleanEntity, EntityState<InputBooleanAttributes>, InputBooleanAttributes>, IInputBooleanEntityCore
{
    public InputBooleanEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public InputBooleanEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record InputBooleanAttributes
{
    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record InputButtonEntity : Entity<InputButtonEntity, EntityState<InputButtonAttributes>, InputButtonAttributes>, IInputButtonEntityCore
{
    public InputButtonEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public InputButtonEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record InputButtonAttributes
{
    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record InputDatetimeEntity : Entity<InputDatetimeEntity, EntityState<InputDatetimeAttributes>, InputDatetimeAttributes>, IInputDatetimeEntityCore
{
    public InputDatetimeEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public InputDatetimeEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record InputDatetimeAttributes
{
    [JsonPropertyName("has_date")]
    public bool? HasDate { get; init; }

    [JsonPropertyName("has_time")]
    public bool? HasTime { get; init; }

    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("hour")]
    public double? Hour { get; init; }

    [JsonPropertyName("minute")]
    public double? Minute { get; init; }

    [JsonPropertyName("second")]
    public double? Second { get; init; }

    [JsonPropertyName("timestamp")]
    public double? Timestamp { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record InputNumberEntity : NumericEntity<InputNumberEntity, NumericEntityState<InputNumberAttributes>, InputNumberAttributes>, IInputNumberEntityCore
{
    public InputNumberEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public InputNumberEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record InputNumberAttributes
{
    [JsonPropertyName("initial")]
    public object? Initial { get; init; }

    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("min")]
    public double? Min { get; init; }

    [JsonPropertyName("max")]
    public double? Max { get; init; }

    [JsonPropertyName("step")]
    public double? Step { get; init; }

    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("unit_of_measurement")]
    public string? UnitOfMeasurement { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record InputSelectEntity : Entity<InputSelectEntity, EntityState<InputSelectAttributes>, InputSelectAttributes>, IInputSelectEntityCore
{
    public InputSelectEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public InputSelectEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record InputSelectAttributes
{
    [JsonPropertyName("options")]
    public IReadOnlyList<string>? Options { get; init; }

    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record InputTextEntity : Entity<InputTextEntity, EntityState<InputTextAttributes>, InputTextAttributes>, IInputTextEntityCore
{
    public InputTextEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public InputTextEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record InputTextAttributes
{
    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("min")]
    public double? Min { get; init; }

    [JsonPropertyName("max")]
    public double? Max { get; init; }

    [JsonPropertyName("pattern")]
    public object? Pattern { get; init; }

    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }
}

public partial record NumberEntity : NumericEntity<NumberEntity, NumericEntityState<NumberAttributes>, NumberAttributes>, INumberEntityCore
{
    public NumberEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public NumberEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record NumberAttributes
{
    [JsonPropertyName("min")]
    public double? Min { get; init; }

    [JsonPropertyName("max")]
    public double? Max { get; init; }

    [JsonPropertyName("step")]
    public double? Step { get; init; }

    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("audio")]
    public string? Audio { get; init; }

    [JsonPropertyName("audio_effect")]
    public string? AudioEffect { get; init; }

    [JsonPropertyName("audio_sensitivity")]
    public string? AudioSensitivity { get; init; }

    [JsonPropertyName("brightness")]
    public double? Brightness { get; init; }

    [JsonPropertyName("color")]
    public object? Color { get; init; }

    [JsonPropertyName("color_mode")]
    public string? ColorMode { get; init; }

    [JsonPropertyName("color_temp")]
    public double? ColorTemp { get; init; }

    [JsonPropertyName("device")]
    public object? Device { get; init; }

    [JsonPropertyName("length")]
    public double? Length { get; init; }

    [JsonPropertyName("linkquality")]
    public double? Linkquality { get; init; }

    [JsonPropertyName("max_brightness")]
    public double? MaxBrightness { get; init; }

    [JsonPropertyName("min_brightness")]
    public double? MinBrightness { get; init; }

    [JsonPropertyName("power_on_behavior")]
    public string? PowerOnBehavior { get; init; }

    [JsonPropertyName("preset")]
    public double? Preset { get; init; }

    [JsonPropertyName("speed")]
    public double? Speed { get; init; }

    [JsonPropertyName("update")]
    public object? Update { get; init; }

    [JsonPropertyName("update_available")]
    public object? UpdateAvailable { get; init; }

    [JsonPropertyName("unit_of_measurement")]
    public string? UnitOfMeasurement { get; init; }
}

public partial record PersonEntity : Entity<PersonEntity, EntityState<PersonAttributes>, PersonAttributes>, IPersonEntityCore
{
    public PersonEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public PersonEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record PersonAttributes
{
    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("id")]
    public string? Id { get; init; }

    [JsonPropertyName("device_trackers")]
    public IReadOnlyList<string>? DeviceTrackers { get; init; }

    [JsonPropertyName("latitude")]
    public double? Latitude { get; init; }

    [JsonPropertyName("longitude")]
    public double? Longitude { get; init; }

    [JsonPropertyName("gps_accuracy")]
    public double? GpsAccuracy { get; init; }

    [JsonPropertyName("source")]
    public string? Source { get; init; }

    [JsonPropertyName("user_id")]
    public string? UserId { get; init; }

    [JsonPropertyName("entity_picture")]
    public string? EntityPicture { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record ProximityEntity : NumericEntity<ProximityEntity, NumericEntityState<ProximityAttributes>, ProximityAttributes>, IProximityEntityCore
{
    public ProximityEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public ProximityEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record ProximityAttributes
{
    [JsonPropertyName("dir_of_travel")]
    public string? DirOfTravel { get; init; }

    [JsonPropertyName("nearest")]
    public string? Nearest { get; init; }

    [JsonPropertyName("unit_of_measurement")]
    public string? UnitOfMeasurement { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record RemoteEntity : Entity<RemoteEntity, EntityState<RemoteAttributes>, RemoteAttributes>, IRemoteEntityCore
{
    public RemoteEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public RemoteEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record RemoteAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public partial record SceneEntity : Entity<SceneEntity, EntityState<SceneAttributes>, SceneAttributes>, ISceneEntityCore
{
    public SceneEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public SceneEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record SceneAttributes
{
    [JsonPropertyName("entity_id")]
    public IReadOnlyList<string>? EntityId { get; init; }

    [JsonPropertyName("id")]
    public string? Id { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record ScriptEntity : Entity<ScriptEntity, EntityState<ScriptAttributes>, ScriptAttributes>, IScriptEntityCore
{
    public ScriptEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public ScriptEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record ScriptAttributes
{
    [JsonPropertyName("last_triggered")]
    public string? LastTriggered { get; init; }

    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("current")]
    public double? Current { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record SelectEntity : Entity<SelectEntity, EntityState<SelectAttributes>, SelectAttributes>, ISelectEntityCore
{
    public SelectEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public SelectEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record SelectAttributes
{
    [JsonPropertyName("options")]
    public IReadOnlyList<string>? Options { get; init; }

    [JsonPropertyName("device")]
    public object? Device { get; init; }

    [JsonPropertyName("linkquality")]
    public double? Linkquality { get; init; }

    [JsonPropertyName("power_on_behavior")]
    public string? PowerOnBehavior { get; init; }

    [JsonPropertyName("update")]
    public object? Update { get; init; }

    [JsonPropertyName("update_available")]
    public bool? UpdateAvailable { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("audio")]
    public string? Audio { get; init; }

    [JsonPropertyName("audio_effect")]
    public string? AudioEffect { get; init; }

    [JsonPropertyName("audio_sensitivity")]
    public string? AudioSensitivity { get; init; }

    [JsonPropertyName("brightness")]
    public double? Brightness { get; init; }

    [JsonPropertyName("color")]
    public object? Color { get; init; }

    [JsonPropertyName("color_mode")]
    public string? ColorMode { get; init; }

    [JsonPropertyName("color_temp")]
    public double? ColorTemp { get; init; }

    [JsonPropertyName("length")]
    public double? Length { get; init; }

    [JsonPropertyName("max_brightness")]
    public double? MaxBrightness { get; init; }

    [JsonPropertyName("min_brightness")]
    public double? MinBrightness { get; init; }

    [JsonPropertyName("preset")]
    public double? Preset { get; init; }

    [JsonPropertyName("speed")]
    public double? Speed { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public partial record SensorEntity : Entity<SensorEntity, EntityState<SensorAttributes>, SensorAttributes>, ISensorEntityCore
{
    public SensorEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public SensorEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record SensorAttributes
{
    [JsonPropertyName("Black bin")]
    public string? Blackbin { get; init; }

    [JsonPropertyName("daysTo")]
    public double? DaysTo { get; init; }

    [JsonPropertyName("attribution")]
    public string? Attribution { get; init; }

    [JsonPropertyName("entity_picture")]
    public string? EntityPicture { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("Brown bin")]
    public string? Brownbin { get; init; }

    [JsonPropertyName("Blue bin")]
    public string? Bluebin { get; init; }

    [JsonPropertyName("Green bin")]
    public string? Greenbin { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("options")]
    public IReadOnlyList<string>? Options { get; init; }

    [JsonPropertyName("target")]
    public string? Target { get; init; }

    [JsonPropertyName("state_class")]
    public string? StateClass { get; init; }

    [JsonPropertyName("last_evaluated")]
    public string? LastEvaluated { get; init; }

    [JsonPropertyName("data_last_retrieved")]
    public string? DataLastRetrieved { get; init; }

    [JsonPropertyName("redeemable_points")]
    public double? RedeemablePoints { get; init; }

    [JsonPropertyName("action")]
    public object? Action { get; init; }

    [JsonPropertyName("battery")]
    public double? Battery { get; init; }

    [JsonPropertyName("click")]
    public object? Click { get; init; }

    [JsonPropertyName("device")]
    public object? Device { get; init; }

    [JsonPropertyName("linkquality")]
    public double? Linkquality { get; init; }

    [JsonPropertyName("update")]
    public object? Update { get; init; }

    [JsonPropertyName("update_available")]
    public bool? UpdateAvailable { get; init; }

    [JsonPropertyName("audio")]
    public string? Audio { get; init; }

    [JsonPropertyName("audio_effect")]
    public string? AudioEffect { get; init; }

    [JsonPropertyName("audio_sensitivity")]
    public string? AudioSensitivity { get; init; }

    [JsonPropertyName("brightness")]
    public double? Brightness { get; init; }

    [JsonPropertyName("color")]
    public object? Color { get; init; }

    [JsonPropertyName("color_mode")]
    public string? ColorMode { get; init; }

    [JsonPropertyName("color_temp")]
    public double? ColorTemp { get; init; }

    [JsonPropertyName("length")]
    public double? Length { get; init; }

    [JsonPropertyName("max_brightness")]
    public double? MaxBrightness { get; init; }

    [JsonPropertyName("min_brightness")]
    public double? MinBrightness { get; init; }

    [JsonPropertyName("power_on_behavior")]
    public string? PowerOnBehavior { get; init; }

    [JsonPropertyName("preset")]
    public double? Preset { get; init; }

    [JsonPropertyName("speed")]
    public double? Speed { get; init; }

    [JsonPropertyName("humidity")]
    public double? Humidity { get; init; }

    [JsonPropertyName("pm25")]
    public double? Pm25 { get; init; }

    [JsonPropertyName("temperature")]
    public double? Temperature { get; init; }

    [JsonPropertyName("voc_index")]
    public double? VocIndex { get; init; }

    [JsonPropertyName("battery_low")]
    public object? BatteryLow { get; init; }

    [JsonPropertyName("voltage")]
    public object? Voltage { get; init; }

    [JsonPropertyName("Confidence")]
    public string? Confidence { get; init; }

    [JsonPropertyName("Types")]
    public IReadOnlyList<string>? Types { get; init; }

    [JsonPropertyName("Low Power Mode")]
    public bool? LowPowerMode { get; init; }

    [JsonPropertyName("Allows VoIP")]
    public bool? AllowsVoIP { get; init; }

    [JsonPropertyName("Carrier ID")]
    public string? CarrierID { get; init; }

    [JsonPropertyName("Carrier Name")]
    public string? CarrierName { get; init; }

    [JsonPropertyName("Current Radio Technology")]
    public string? CurrentRadioTechnology { get; init; }

    [JsonPropertyName("ISO Country Code")]
    public string? ISOCountryCode { get; init; }

    [JsonPropertyName("Mobile Country Code")]
    public string? MobileCountryCode { get; init; }

    [JsonPropertyName("Mobile Network Code")]
    public string? MobileNetworkCode { get; init; }

    [JsonPropertyName("Administrative Area")]
    public string? AdministrativeArea_0 { get; init; }

    [JsonPropertyName("administrative_area")]
    public string? AdministrativeArea_1 { get; init; }

    [JsonPropertyName("Areas Of Interest")]
    public string? AreasOfInterest { get; init; }

    [JsonPropertyName("Country")]
    public string? Country_0 { get; init; }

    [JsonPropertyName("country")]
    public string? Country_1 { get; init; }

    [JsonPropertyName("Inland Water")]
    public string? InlandWater { get; init; }

    [JsonPropertyName("Locality")]
    public string? Locality_0 { get; init; }

    [JsonPropertyName("locality")]
    public string? Locality_1 { get; init; }

    [JsonPropertyName("Location")]
    public IReadOnlyList<double>? Location_0 { get; init; }

    [JsonPropertyName("location")]
    public object? Location_1 { get; init; }

    [JsonPropertyName("Name")]
    public string? Name_0 { get; init; }

    [JsonPropertyName("name")]
    public string? Name_1 { get; init; }

    [JsonPropertyName("Ocean")]
    public string? Ocean { get; init; }

    [JsonPropertyName("Postal Code")]
    public string? PostalCode_0 { get; init; }

    [JsonPropertyName("postal_code")]
    public string? PostalCode_1 { get; init; }

    [JsonPropertyName("Sub Administrative Area")]
    public string? SubAdministrativeArea_0 { get; init; }

    [JsonPropertyName("sub_administrative_area")]
    public string? SubAdministrativeArea_1 { get; init; }

    [JsonPropertyName("Sub Locality")]
    public string? SubLocality_0 { get; init; }

    [JsonPropertyName("sub_locality")]
    public string? SubLocality_1 { get; init; }

    [JsonPropertyName("Sub Thoroughfare")]
    public string? SubThoroughfare_0 { get; init; }

    [JsonPropertyName("sub_thoroughfare")]
    public string? SubThoroughfare_1 { get; init; }

    [JsonPropertyName("Thoroughfare")]
    public string? Thoroughfare_0 { get; init; }

    [JsonPropertyName("thoroughfare")]
    public string? Thoroughfare_1 { get; init; }

    [JsonPropertyName("Time Zone")]
    public string? TimeZone { get; init; }

    [JsonPropertyName("Zones")]
    public object? Zones { get; init; }

    [JsonPropertyName("in_vehicle")]
    public double? InVehicle { get; init; }

    [JsonPropertyName("on_foot")]
    public double? OnFoot { get; init; }

    [JsonPropertyName("still")]
    public double? Still { get; init; }

    [JsonPropertyName("unknown")]
    public double? Unknown { get; init; }

    [JsonPropertyName("walking")]
    public double? Walking { get; init; }

    [JsonPropertyName("Advertise mode")]
    public string? Advertisemode { get; init; }

    [JsonPropertyName("Measured power")]
    public double? Measuredpower { get; init; }

    [JsonPropertyName("Supports transmitter")]
    public bool? Supportstransmitter { get; init; }

    [JsonPropertyName("Transmitting power")]
    public string? Transmittingpower { get; init; }

    [JsonPropertyName("id")]
    public string? Id { get; init; }

    [JsonPropertyName("e5ca1ade-f007-ba11-0000-000000000000_160_13964")]
    public double? E5ca1adef007ba11000000000000000016013964 { get; init; }

    [JsonPropertyName("e5ca1ade-f007-ba11-0000-000000000000_40_13964")]
    public double? E5ca1adef007ba1100000000000000004013964 { get; init; }

    [JsonPropertyName("iso_country_code")]
    public string? IsoCountryCode { get; init; }

    [JsonPropertyName("phone")]
    public string? Phone { get; init; }

    [JsonPropertyName("premises")]
    public string? Premises { get; init; }

    [JsonPropertyName("url")]
    public string? Url { get; init; }

    [JsonPropertyName("is_hidden")]
    public bool? IsHidden { get; init; }

    [JsonPropertyName("metered")]
    public bool? Metered { get; init; }

    [JsonPropertyName("exercise_type")]
    public string? ExerciseType { get; init; }

    [JsonPropertyName("time")]
    public string? Time { get; init; }

    [JsonPropertyName("full_url")]
    public string? FullUrl { get; init; }

    [JsonPropertyName("truncated")]
    public bool? Truncated { get; init; }

    [JsonPropertyName("recurrence")]
    public object? Recurrence { get; init; }

    [JsonPropertyName("process_timestamp")]
    public string? ProcessTimestamp { get; init; }

    [JsonPropertyName("prior_value")]
    public object? PriorValue { get; init; }

    [JsonPropertyName("total_active")]
    public double? TotalActive { get; init; }

    [JsonPropertyName("total_all")]
    public double? TotalAll { get; init; }

    [JsonPropertyName("sorted_active")]
    public string? SortedActive { get; init; }

    [JsonPropertyName("sorted_all")]
    public string? SortedAll { get; init; }

    [JsonPropertyName("status")]
    public string? Status { get; init; }

    [JsonPropertyName("dismissed")]
    public object? Dismissed { get; init; }

    [JsonPropertyName("reminder")]
    public object? Reminder { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("last_backup")]
    public string? LastBackup { get; init; }

    [JsonPropertyName("next_backup")]
    public string? NextBackup { get; init; }

    [JsonPropertyName("last_uploaded")]
    public string? LastUploaded { get; init; }

    [JsonPropertyName("backups_in_google_drive")]
    public double? BackupsInGoogleDrive { get; init; }

    [JsonPropertyName("backups_in_home_assistant")]
    public double? BackupsInHomeAssistant { get; init; }

    [JsonPropertyName("size_in_google_drive")]
    public string? SizeInGoogleDrive { get; init; }

    [JsonPropertyName("size_in_home_assistant")]
    public string? SizeInHomeAssistant { get; init; }

    [JsonPropertyName("backups")]
    public IReadOnlyList<object>? Backups { get; init; }

    [JsonPropertyName("free_space_in_google_drive")]
    public string? FreeSpaceInGoogleDrive { get; init; }

    [JsonPropertyName("on_bicycle")]
    public double? OnBicycle { get; init; }

    [JsonPropertyName("running")]
    public double? Running { get; init; }

    [JsonPropertyName("1ca92e23-f087-4df7-b9a2-fd4b716a4bf6_627_0")]
    public double? _1ca92e23f0874df7b9a2fd4b716a4bf66270 { get; init; }

    [JsonPropertyName("8063ae90-d8b7-11e6-9598-0800200c9a66_44056_22796")]
    public string? _8063ae90d8b711e695980800200c9a664405622796 { get; init; }

    [JsonPropertyName("1ca92e23-f087-4df7-b9a2-fd4b716a4bf6_638_0")]
    public double? _1ca92e23f0874df7b9a2fd4b716a4bf66380 { get; init; }

    [JsonPropertyName("1ca92e23-f087-4df7-b9a2-fd4b716a4bf6_640_0")]
    public double? _1ca92e23f0874df7b9a2fd4b716a4bf66400 { get; init; }

    [JsonPropertyName("Cellular Technology")]
    public string? CellularTechnology { get; init; }

    [JsonPropertyName("1ca92e23-f087-4df7-b9a2-fd4b716a4bf6_789_0")]
    public double? _1ca92e23f0874df7b9a2fd4b716a4bf67890 { get; init; }

    [JsonPropertyName("1ca92e23-f087-4df7-b9a2-fd4b716a4bf6_36_0")]
    public double? _1ca92e23f0874df7b9a2fd4b716a4bf6360 { get; init; }

    [JsonPropertyName("1ca92e23-f087-4df7-b9a2-fd4b716a4bf6_347_0")]
    public double? _1ca92e23f0874df7b9a2fd4b716a4bf63470 { get; init; }

    [JsonPropertyName("timer")]
    public object? Timer { get; init; }

    [JsonPropertyName("e20a39f4-73f5-4bc4-1864-17d1ad07a962_40400_50805")]
    public string? E20a39f473f54bc4186417d1ad07a9624040050805 { get; init; }

    [JsonPropertyName("auto_close_when_water_shortage")]
    public string? AutoCloseWhenWaterShortage { get; init; }

    [JsonPropertyName("current_device_status")]
    public string? CurrentDeviceStatus { get; init; }

    [JsonPropertyName("cyclic_quantitative_irrigation")]
    public object? CyclicQuantitativeIrrigation { get; init; }

    [JsonPropertyName("cyclic_timed_irrigation")]
    public object? CyclicTimedIrrigation { get; init; }

    [JsonPropertyName("flow")]
    public double? Flow { get; init; }

    [JsonPropertyName("info")]
    public string? Info { get; init; }

    [JsonPropertyName("serial")]
    public object? Serial { get; init; }

    [JsonPropertyName("state_message")]
    public object? StateMessage { get; init; }

    [JsonPropertyName("state_reason")]
    public object? StateReason { get; init; }

    [JsonPropertyName("command_set")]
    public string? CommandSet { get; init; }

    [JsonPropertyName("uri_supported")]
    public string? UriSupported { get; init; }

    [JsonPropertyName("e2c56db5-dffb-48d2-b060-d0f5a71096e0_0_0")]
    public double? E2c56db5dffb48d2b060d0f5a71096e000 { get; init; }

    [JsonPropertyName("1ca92e23-f087-4df7-b9a2-fd4b716a4bf6_1477_0")]
    public double? _1ca92e23f0874df7b9a2fd4b716a4bf614770 { get; init; }

    [JsonPropertyName("1ca92e23-f087-4df7-b9a2-fd4b716a4bf6_497_0")]
    public double? _1ca92e23f0874df7b9a2fd4b716a4bf64970 { get; init; }
}

public partial record NumericSensorEntity : NumericEntity<NumericSensorEntity, NumericEntityState<NumericSensorAttributes>, NumericSensorAttributes>, ISensorEntityCore
{
    public NumericSensorEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public NumericSensorEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record NumericSensorAttributes
{
    [JsonPropertyName("state_class")]
    public string? StateClass { get; init; }

    [JsonPropertyName("unit_of_measurement")]
    public string? UnitOfMeasurement { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("battery")]
    public double? Battery { get; init; }

    [JsonPropertyName("battery_low")]
    public bool? BatteryLow { get; init; }

    [JsonPropertyName("contact")]
    public bool? Contact { get; init; }

    [JsonPropertyName("device")]
    public object? Device { get; init; }

    [JsonPropertyName("linkquality")]
    public double? Linkquality { get; init; }

    [JsonPropertyName("tamper")]
    public bool? Tamper { get; init; }

    [JsonPropertyName("voltage")]
    public double? Voltage { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("mpan")]
    public string? Mpan { get; init; }

    [JsonPropertyName("serial_number")]
    public string? SerialNumber { get; init; }

    [JsonPropertyName("is_export")]
    public bool? IsExport { get; init; }

    [JsonPropertyName("is_smart_meter")]
    public bool? IsSmartMeter { get; init; }

    [JsonPropertyName("tariff")]
    public string? Tariff { get; init; }

    [JsonPropertyName("start")]
    public object? Start { get; init; }

    [JsonPropertyName("end")]
    public object? End { get; init; }

    [JsonPropertyName("is_capped")]
    public bool? IsCapped { get; init; }

    [JsonPropertyName("is_intelligent_adjusted")]
    public bool? IsIntelligentAdjusted { get; init; }

    [JsonPropertyName("current_day_min_rate")]
    public double? CurrentDayMinRate { get; init; }

    [JsonPropertyName("current_day_max_rate")]
    public double? CurrentDayMaxRate { get; init; }

    [JsonPropertyName("current_day_average_rate")]
    public double? CurrentDayAverageRate { get; init; }

    [JsonPropertyName("data_last_retrieved")]
    public string? DataLastRetrieved { get; init; }

    [JsonPropertyName("last_evaluated")]
    public string? LastEvaluated { get; init; }

    [JsonPropertyName("last_reset")]
    public string? LastReset { get; init; }

    [JsonPropertyName("total")]
    public double? Total_0 { get; init; }

    [JsonPropertyName("Total")]
    public string? Total_1 { get; init; }

    [JsonPropertyName("charges")]
    public IReadOnlyList<object>? Charges { get; init; }

    [JsonPropertyName("latest_available_data_timestamp")]
    public string? LatestAvailableDataTimestamp { get; init; }

    [JsonPropertyName("tariff_code")]
    public string? TariffCode { get; init; }

    [JsonPropertyName("standing_charge")]
    public double? StandingCharge { get; init; }

    [JsonPropertyName("total_cost_without_standing_charge")]
    public double? TotalCostWithoutStandingCharge { get; init; }

    [JsonPropertyName("total_without_standing_charge")]
    public double? TotalWithoutStandingCharge { get; init; }

    [JsonPropertyName("mprn")]
    public string? Mprn { get; init; }

    [JsonPropertyName("is_estimated")]
    public bool? IsEstimated { get; init; }

    [JsonPropertyName("total_kwh")]
    public double? TotalKwh { get; init; }

    [JsonPropertyName("total_m3")]
    public double? TotalM3 { get; init; }

    [JsonPropertyName("calorific_value")]
    public double? CalorificValue { get; init; }

    [JsonPropertyName("server_name")]
    public string? ServerName { get; init; }

    [JsonPropertyName("server_country")]
    public string? ServerCountry { get; init; }

    [JsonPropertyName("server_id")]
    public string? ServerId { get; init; }

    [JsonPropertyName("attribution")]
    public string? Attribution { get; init; }

    [JsonPropertyName("bytes_received")]
    public double? BytesReceived { get; init; }

    [JsonPropertyName("bytes_sent")]
    public double? BytesSent { get; init; }

    [JsonPropertyName("account_fetch_interval")]
    public double? AccountFetchInterval { get; init; }

    [JsonPropertyName("device_name")]
    public string? DeviceName { get; init; }

    [JsonPropertyName("device_status")]
    public string? DeviceStatus { get; init; }

    [JsonPropertyName("owner_fullname")]
    public string? OwnerFullname { get; init; }

    [JsonPropertyName("battery_status")]
    public string? BatteryStatus { get; init; }

    [JsonPropertyName("low_power_mode")]
    public bool? LowPowerMode { get; init; }

    [JsonPropertyName("country_code")]
    public string? CountryCode { get; init; }

    [JsonPropertyName("occupancy")]
    public bool? Occupancy { get; init; }

    [JsonPropertyName("action")]
    public object? Action { get; init; }

    [JsonPropertyName("click")]
    public object? Click { get; init; }

    [JsonPropertyName("update")]
    public object? Update { get; init; }

    [JsonPropertyName("update_available")]
    public bool? UpdateAvailable { get; init; }

    [JsonPropertyName("audio")]
    public string? Audio { get; init; }

    [JsonPropertyName("audio_effect")]
    public string? AudioEffect { get; init; }

    [JsonPropertyName("audio_sensitivity")]
    public string? AudioSensitivity { get; init; }

    [JsonPropertyName("brightness")]
    public double? Brightness { get; init; }

    [JsonPropertyName("color")]
    public object? Color { get; init; }

    [JsonPropertyName("color_mode")]
    public string? ColorMode { get; init; }

    [JsonPropertyName("color_temp")]
    public double? ColorTemp { get; init; }

    [JsonPropertyName("length")]
    public double? Length { get; init; }

    [JsonPropertyName("max_brightness")]
    public double? MaxBrightness { get; init; }

    [JsonPropertyName("min_brightness")]
    public double? MinBrightness { get; init; }

    [JsonPropertyName("power_on_behavior")]
    public string? PowerOnBehavior { get; init; }

    [JsonPropertyName("preset")]
    public double? Preset { get; init; }

    [JsonPropertyName("speed")]
    public double? Speed { get; init; }

    [JsonPropertyName("humidity")]
    public double? Humidity { get; init; }

    [JsonPropertyName("pm25")]
    public double? Pm25 { get; init; }

    [JsonPropertyName("temperature")]
    public double? Temperature { get; init; }

    [JsonPropertyName("voc_index")]
    public double? VocIndex { get; init; }

    [JsonPropertyName("repositories")]
    public IReadOnlyList<object>? Repositories { get; init; }

    [JsonPropertyName("type")]
    public object? Type { get; init; }

    [JsonPropertyName("level")]
    public string? Level { get; init; }

    [JsonPropertyName("direction")]
    public string? Direction { get; init; }

    [JsonPropertyName("Available")]
    public string? Available { get; init; }

    [JsonPropertyName("Available (Important)")]
    public string? AvailableImportant { get; init; }

    [JsonPropertyName("Available (Opportunistic)")]
    public string? AvailableOpportunistic { get; init; }

    [JsonPropertyName("light")]
    public double? Light { get; init; }

    [JsonPropertyName("motion")]
    public double? Motion { get; init; }

    [JsonPropertyName("timestamp")]
    public double? Timestamp { get; init; }

    [JsonPropertyName("status")]
    public string? Status { get; init; }

    [JsonPropertyName("current")]
    public double? Current { get; init; }

    [JsonPropertyName("connected_not_paired_devices")]
    public IReadOnlyList<object>? ConnectedNotPairedDevices { get; init; }

    [JsonPropertyName("connected_paired_devices")]
    public object? ConnectedPairedDevices { get; init; }

    [JsonPropertyName("paired_devices")]
    public object? PairedDevices { get; init; }

    [JsonPropertyName("android.appInfo_com.amazon.dee.app_0")]
    public string? Android_appInfoCom_amazon_dee_app0 { get; init; }

    [JsonPropertyName("android.appInfo_com.myfitnesspal.android_7")]
    public string? Android_appInfoCom_myfitnesspal_android7 { get; init; }

    [JsonPropertyName("android.appInfo_com.whatsapp_1")]
    public string? Android_appInfoCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.bigText_com.amazon.dee.app_0")]
    public string? Android_bigTextCom_amazon_dee_app0 { get; init; }

    [JsonPropertyName("android.bigText_com.myfitnesspal.android_7")]
    public string? Android_bigTextCom_myfitnesspal_android7 { get; init; }

    [JsonPropertyName("android.conversationUnreadMessageCount_com.whatsapp_1")]
    public double? Android_conversationUnreadMessageCountCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.hiddenConversationTitle_com.whatsapp_1")]
    public string? Android_hiddenConversationTitleCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.infoText_com.amazon.dee.app_0")]
    public string? Android_infoTextCom_amazon_dee_app0 { get; init; }

    [JsonPropertyName("android.infoText_com.myfitnesspal.android_7")]
    public string? Android_infoTextCom_myfitnesspal_android7 { get; init; }

    [JsonPropertyName("android.infoText_com.whatsapp_1")]
    public string? Android_infoTextCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.isGroupConversation_com.whatsapp_1")]
    public bool? Android_isGroupConversationCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.largeIcon_com.amazon.dee.app_0")]
    public string? Android_largeIconCom_amazon_dee_app0 { get; init; }

    [JsonPropertyName("android.largeIcon_com.myfitnesspal.android_7")]
    public string? Android_largeIconCom_myfitnesspal_android7 { get; init; }

    [JsonPropertyName("android.largeIcon_com.whatsapp_1")]
    public string? Android_largeIconCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.messages_com.whatsapp_1")]
    public IReadOnlyList<string>? Android_messagesCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.messagingStyleUser_com.whatsapp_1")]
    public string? Android_messagingStyleUserCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.messagingUser_com.whatsapp_1")]
    public string? Android_messagingUserCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.people.list_com.whatsapp_1")]
    public IReadOnlyList<string>? Android_people_listCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.amazon.dee.app_0")]
    public bool? Android_progressIndeterminateCom_amazon_dee_app0 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.myfitnesspal.android_7")]
    public bool? Android_progressIndeterminateCom_myfitnesspal_android7 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.whatsapp_1")]
    public bool? Android_progressIndeterminateCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.progressMax_com.amazon.dee.app_0")]
    public double? Android_progressMaxCom_amazon_dee_app0 { get; init; }

    [JsonPropertyName("android.progressMax_com.myfitnesspal.android_7")]
    public double? Android_progressMaxCom_myfitnesspal_android7 { get; init; }

    [JsonPropertyName("android.progressMax_com.whatsapp_1")]
    public double? Android_progressMaxCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.progress_com.amazon.dee.app_0")]
    public double? Android_progressCom_amazon_dee_app0 { get; init; }

    [JsonPropertyName("android.progress_com.myfitnesspal.android_7")]
    public double? Android_progressCom_myfitnesspal_android7 { get; init; }

    [JsonPropertyName("android.progress_com.whatsapp_1")]
    public double? Android_progressCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.reduced.images_com.amazon.dee.app_0")]
    public bool? Android_reduced_imagesCom_amazon_dee_app0 { get; init; }

    [JsonPropertyName("android.reduced.images_com.myfitnesspal.android_7")]
    public bool? Android_reduced_imagesCom_myfitnesspal_android7 { get; init; }

    [JsonPropertyName("android.reduced.images_com.whatsapp_1")]
    public bool? Android_reduced_imagesCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.amazon.dee.app_0")]
    public string? Android_remoteInputHistoryCom_amazon_dee_app0 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.myfitnesspal.android_7")]
    public string? Android_remoteInputHistoryCom_myfitnesspal_android7 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.whatsapp_1")]
    public string? Android_remoteInputHistoryCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.selfDisplayName_com.whatsapp_1")]
    public string? Android_selfDisplayNameCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.showChronometer_com.amazon.dee.app_0")]
    public bool? Android_showChronometerCom_amazon_dee_app0 { get; init; }

    [JsonPropertyName("android.showChronometer_com.myfitnesspal.android_7")]
    public bool? Android_showChronometerCom_myfitnesspal_android7 { get; init; }

    [JsonPropertyName("android.showChronometer_com.whatsapp_1")]
    public bool? Android_showChronometerCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.showWhen_com.amazon.dee.app_0")]
    public bool? Android_showWhenCom_amazon_dee_app0 { get; init; }

    [JsonPropertyName("android.showWhen_com.myfitnesspal.android_7")]
    public bool? Android_showWhenCom_myfitnesspal_android7 { get; init; }

    [JsonPropertyName("android.showWhen_com.whatsapp_1")]
    public bool? Android_showWhenCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.subText_com.amazon.dee.app_0")]
    public string? Android_subTextCom_amazon_dee_app0 { get; init; }

    [JsonPropertyName("android.subText_com.myfitnesspal.android_7")]
    public string? Android_subTextCom_myfitnesspal_android7 { get; init; }

    [JsonPropertyName("android.subText_com.whatsapp_1")]
    public string? Android_subTextCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.template_com.amazon.dee.app_0")]
    public string? Android_templateCom_amazon_dee_app0 { get; init; }

    [JsonPropertyName("android.template_com.myfitnesspal.android_7")]
    public string? Android_templateCom_myfitnesspal_android7 { get; init; }

    [JsonPropertyName("android.template_com.whatsapp_1")]
    public string? Android_templateCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.text_com.amazon.dee.app_0")]
    public string? Android_textCom_amazon_dee_app0 { get; init; }

    [JsonPropertyName("android.text_com.myfitnesspal.android_7")]
    public string? Android_textCom_myfitnesspal_android7 { get; init; }

    [JsonPropertyName("android.text_com.whatsapp_1")]
    public string? Android_textCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.title_com.amazon.dee.app_0")]
    public string? Android_titleCom_amazon_dee_app0 { get; init; }

    [JsonPropertyName("android.title_com.myfitnesspal.android_7")]
    public string? Android_titleCom_myfitnesspal_android7 { get; init; }

    [JsonPropertyName("android.title_com.whatsapp_1")]
    public string? Android_titleCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.wearable.EXTENSIONS_com.whatsapp_1")]
    public string? Android_wearable_EXTENSIONSCom_whatsapp1 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.amazon.dee.app_0")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_amazon_dee_app0 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.myfitnesspal.android_7")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_myfitnesspal_android7 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.whatsapp_1")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_whatsapp1 { get; init; }

    [JsonPropertyName("com.amazon.dee.app_0_category")]
    public string? Com_amazon_dee_app0Category { get; init; }

    [JsonPropertyName("com.amazon.dee.app_0_channel_id")]
    public string? Com_amazon_dee_app0ChannelId { get; init; }

    [JsonPropertyName("com.amazon.dee.app_0_group_id")]
    public string? Com_amazon_dee_app0GroupId { get; init; }

    [JsonPropertyName("com.amazon.dee.app_0_is_clearable")]
    public bool? Com_amazon_dee_app0IsClearable { get; init; }

    [JsonPropertyName("com.amazon.dee.app_0_is_ongoing")]
    public bool? Com_amazon_dee_app0IsOngoing { get; init; }

    [JsonPropertyName("com.amazon.dee.app_0_post_time")]
    public double? Com_amazon_dee_app0PostTime { get; init; }

    [JsonPropertyName("com.myfitnesspal.android_7_category")]
    public string? Com_myfitnesspal_android7Category { get; init; }

    [JsonPropertyName("com.myfitnesspal.android_7_channel_id")]
    public string? Com_myfitnesspal_android7ChannelId { get; init; }

    [JsonPropertyName("com.myfitnesspal.android_7_group_id")]
    public string? Com_myfitnesspal_android7GroupId { get; init; }

    [JsonPropertyName("com.myfitnesspal.android_7_is_clearable")]
    public bool? Com_myfitnesspal_android7IsClearable { get; init; }

    [JsonPropertyName("com.myfitnesspal.android_7_is_ongoing")]
    public bool? Com_myfitnesspal_android7IsOngoing { get; init; }

    [JsonPropertyName("com.myfitnesspal.android_7_post_time")]
    public double? Com_myfitnesspal_android7PostTime { get; init; }

    [JsonPropertyName("com.whatsapp_1_category")]
    public string? Com_whatsapp1Category { get; init; }

    [JsonPropertyName("com.whatsapp_1_channel_id")]
    public string? Com_whatsapp1ChannelId { get; init; }

    [JsonPropertyName("com.whatsapp_1_group_id")]
    public string? Com_whatsapp1GroupId { get; init; }

    [JsonPropertyName("com.whatsapp_1_is_clearable")]
    public bool? Com_whatsapp1IsClearable { get; init; }

    [JsonPropertyName("com.whatsapp_1_is_ongoing")]
    public bool? Com_whatsapp1IsOngoing { get; init; }

    [JsonPropertyName("com.whatsapp_1_post_time")]
    public double? Com_whatsapp1PostTime { get; init; }

    [JsonPropertyName("last_row_id_com.whatsapp_1")]
    public double? LastRowIdCom_whatsapp1 { get; init; }

    [JsonPropertyName("accuracy")]
    public string? Accuracy { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("Chrome.NotificationBundleIconIdExtra_com.android.chrome_1000067")]
    public double? Chrome_NotificationBundleIconIdExtraCom_android_chrome1000067 { get; init; }

    [JsonPropertyName("android.appInfo_android_1992")]
    public string? Android_appInfoAndroid1992 { get; init; }

    [JsonPropertyName("android.appInfo_com.android.chrome_1000067")]
    public string? Android_appInfoCom_android_chrome1000067 { get; init; }

    [JsonPropertyName("android.appInfo_com.android.systemui_2131952516")]
    public string? Android_appInfoCom_android_systemui2131952516 { get; init; }

    [JsonPropertyName("android.appInfo_com.google.android.apps.wear.companion_0")]
    public string? Android_appInfoCom_google_android_apps_wear_companion0 { get; init; }

    [JsonPropertyName("android.appInfo_com.google.android.googlequicksearchbox_0")]
    public string? Android_appInfoCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.bigText_android_1992")]
    public string? Android_bigTextAndroid1992 { get; init; }

    [JsonPropertyName("android.bigText_com.android.systemui_2131952516")]
    public string? Android_bigTextCom_android_systemui2131952516 { get; init; }

    [JsonPropertyName("android.bigText_com.google.android.apps.wear.companion_0")]
    public string? Android_bigTextCom_google_android_apps_wear_companion0 { get; init; }

    [JsonPropertyName("android.bigText_com.google.android.googlequicksearchbox_0")]
    public string? Android_bigTextCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.infoText_com.android.chrome_1000067")]
    public string? Android_infoTextCom_android_chrome1000067 { get; init; }

    [JsonPropertyName("android.infoText_com.android.systemui_2131952516")]
    public string? Android_infoTextCom_android_systemui2131952516 { get; init; }

    [JsonPropertyName("android.infoText_com.google.android.apps.wear.companion_0")]
    public string? Android_infoTextCom_google_android_apps_wear_companion0 { get; init; }

    [JsonPropertyName("android.infoText_com.google.android.googlequicksearchbox_0")]
    public string? Android_infoTextCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.largeIcon_com.android.chrome_1000067")]
    public string? Android_largeIconCom_android_chrome1000067 { get; init; }

    [JsonPropertyName("android.largeIcon_com.android.systemui_2131952516")]
    public string? Android_largeIconCom_android_systemui2131952516 { get; init; }

    [JsonPropertyName("android.largeIcon_com.google.android.apps.wear.companion_0")]
    public string? Android_largeIconCom_google_android_apps_wear_companion0 { get; init; }

    [JsonPropertyName("android.largeIcon_com.google.android.googlequicksearchbox_0")]
    public string? Android_largeIconCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.android.chrome_1000067")]
    public bool? Android_progressIndeterminateCom_android_chrome1000067 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.android.systemui_2131952516")]
    public bool? Android_progressIndeterminateCom_android_systemui2131952516 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.google.android.apps.wear.companion_0")]
    public bool? Android_progressIndeterminateCom_google_android_apps_wear_companion0 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.google.android.googlequicksearchbox_0")]
    public bool? Android_progressIndeterminateCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.progressMax_com.android.chrome_1000067")]
    public double? Android_progressMaxCom_android_chrome1000067 { get; init; }

    [JsonPropertyName("android.progressMax_com.android.systemui_2131952516")]
    public double? Android_progressMaxCom_android_systemui2131952516 { get; init; }

    [JsonPropertyName("android.progressMax_com.google.android.apps.wear.companion_0")]
    public double? Android_progressMaxCom_google_android_apps_wear_companion0 { get; init; }

    [JsonPropertyName("android.progressMax_com.google.android.googlequicksearchbox_0")]
    public double? Android_progressMaxCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.progress_com.android.chrome_1000067")]
    public double? Android_progressCom_android_chrome1000067 { get; init; }

    [JsonPropertyName("android.progress_com.android.systemui_2131952516")]
    public double? Android_progressCom_android_systemui2131952516 { get; init; }

    [JsonPropertyName("android.progress_com.google.android.apps.wear.companion_0")]
    public double? Android_progressCom_google_android_apps_wear_companion0 { get; init; }

    [JsonPropertyName("android.progress_com.google.android.googlequicksearchbox_0")]
    public double? Android_progressCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.reduced.images_android_1992")]
    public bool? Android_reduced_imagesAndroid1992 { get; init; }

    [JsonPropertyName("android.reduced.images_com.android.chrome_1000067")]
    public bool? Android_reduced_imagesCom_android_chrome1000067 { get; init; }

    [JsonPropertyName("android.reduced.images_com.android.systemui_2131952516")]
    public bool? Android_reduced_imagesCom_android_systemui2131952516 { get; init; }

    [JsonPropertyName("android.reduced.images_com.google.android.apps.wear.companion_0")]
    public bool? Android_reduced_imagesCom_google_android_apps_wear_companion0 { get; init; }

    [JsonPropertyName("android.reduced.images_com.google.android.googlequicksearchbox_0")]
    public bool? Android_reduced_imagesCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.android.chrome_1000067")]
    public string? Android_remoteInputHistoryCom_android_chrome1000067 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.android.systemui_2131952516")]
    public string? Android_remoteInputHistoryCom_android_systemui2131952516 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.google.android.apps.wear.companion_0")]
    public string? Android_remoteInputHistoryCom_google_android_apps_wear_companion0 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.google.android.googlequicksearchbox_0")]
    public string? Android_remoteInputHistoryCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.showChronometer_com.android.chrome_1000067")]
    public bool? Android_showChronometerCom_android_chrome1000067 { get; init; }

    [JsonPropertyName("android.showChronometer_com.android.systemui_2131952516")]
    public bool? Android_showChronometerCom_android_systemui2131952516 { get; init; }

    [JsonPropertyName("android.showChronometer_com.google.android.apps.wear.companion_0")]
    public bool? Android_showChronometerCom_google_android_apps_wear_companion0 { get; init; }

    [JsonPropertyName("android.showChronometer_com.google.android.googlequicksearchbox_0")]
    public bool? Android_showChronometerCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.showWhen_com.android.chrome_1000067")]
    public bool? Android_showWhenCom_android_chrome1000067 { get; init; }

    [JsonPropertyName("android.showWhen_com.android.systemui_2131952516")]
    public bool? Android_showWhenCom_android_systemui2131952516 { get; init; }

    [JsonPropertyName("android.showWhen_com.google.android.apps.wear.companion_0")]
    public bool? Android_showWhenCom_google_android_apps_wear_companion0 { get; init; }

    [JsonPropertyName("android.showWhen_com.google.android.googlequicksearchbox_0")]
    public bool? Android_showWhenCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.subText_com.android.chrome_1000067")]
    public string? Android_subTextCom_android_chrome1000067 { get; init; }

    [JsonPropertyName("android.subText_com.android.systemui_2131952516")]
    public string? Android_subTextCom_android_systemui2131952516 { get; init; }

    [JsonPropertyName("android.subText_com.google.android.apps.wear.companion_0")]
    public string? Android_subTextCom_google_android_apps_wear_companion0 { get; init; }

    [JsonPropertyName("android.subText_com.google.android.googlequicksearchbox_0")]
    public string? Android_subTextCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.substName_com.android.systemui_2131952516")]
    public string? Android_substNameCom_android_systemui2131952516 { get; init; }

    [JsonPropertyName("android.support.v4.app.extra.COMPAT_TEMPLATE_com.google.android.apps.wear.companion_0")]
    public string? Android_support_v4_app_extra_COMPATTEMPLATECom_google_android_apps_wear_companion0 { get; init; }

    [JsonPropertyName("android.support.v4.app.extra.COMPAT_TEMPLATE_com.google.android.googlequicksearchbox_0")]
    public string? Android_support_v4_app_extra_COMPATTEMPLATECom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.template_android_1992")]
    public string? Android_templateAndroid1992 { get; init; }

    [JsonPropertyName("android.template_com.android.systemui_2131952516")]
    public string? Android_templateCom_android_systemui2131952516 { get; init; }

    [JsonPropertyName("android.template_com.google.android.apps.wear.companion_0")]
    public string? Android_templateCom_google_android_apps_wear_companion0 { get; init; }

    [JsonPropertyName("android.template_com.google.android.googlequicksearchbox_0")]
    public string? Android_templateCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.text_android_1992")]
    public string? Android_textAndroid1992 { get; init; }

    [JsonPropertyName("android.text_com.android.chrome_1000067")]
    public string? Android_textCom_android_chrome1000067 { get; init; }

    [JsonPropertyName("android.text_com.android.systemui_2131952516")]
    public string? Android_textCom_android_systemui2131952516 { get; init; }

    [JsonPropertyName("android.text_com.google.android.apps.wear.companion_0")]
    public string? Android_textCom_google_android_apps_wear_companion0 { get; init; }

    [JsonPropertyName("android.text_com.google.android.googlequicksearchbox_0")]
    public string? Android_textCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.title.big_com.google.android.googlequicksearchbox_0")]
    public string? Android_title_bigCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android.title_android_1992")]
    public string? Android_titleAndroid1992 { get; init; }

    [JsonPropertyName("android.title_com.android.chrome_1000067")]
    public string? Android_titleCom_android_chrome1000067 { get; init; }

    [JsonPropertyName("android.title_com.android.systemui_2131952516")]
    public string? Android_titleCom_android_systemui2131952516 { get; init; }

    [JsonPropertyName("android.title_com.google.android.apps.wear.companion_0")]
    public string? Android_titleCom_google_android_apps_wear_companion0 { get; init; }

    [JsonPropertyName("android.title_com.google.android.googlequicksearchbox_0")]
    public string? Android_titleCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("android_1992_category")]
    public string? Android1992Category { get; init; }

    [JsonPropertyName("android_1992_channel_id")]
    public string? Android1992ChannelId { get; init; }

    [JsonPropertyName("android_1992_group_id")]
    public string? Android1992GroupId { get; init; }

    [JsonPropertyName("android_1992_is_clearable")]
    public bool? Android1992IsClearable { get; init; }

    [JsonPropertyName("android_1992_is_ongoing")]
    public bool? Android1992IsOngoing { get; init; }

    [JsonPropertyName("android_1992_post_time")]
    public double? Android1992PostTime { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.android.systemui_2131952516")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_android_systemui2131952516 { get; init; }

    [JsonPropertyName("chime.account_name_hash_com.google.android.googlequicksearchbox_0")]
    public double? Chime_accountNameHashCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("chime.thread_id_com.google.android.googlequicksearchbox_0")]
    public string? Chime_threadIdCom_google_android_googlequicksearchbox0 { get; init; }

    [JsonPropertyName("com.android.chrome_1000067_category")]
    public string? Com_android_chrome1000067Category { get; init; }

    [JsonPropertyName("com.android.chrome_1000067_channel_id")]
    public string? Com_android_chrome1000067ChannelId { get; init; }

    [JsonPropertyName("com.android.chrome_1000067_group_id")]
    public string? Com_android_chrome1000067GroupId { get; init; }

    [JsonPropertyName("com.android.chrome_1000067_is_clearable")]
    public bool? Com_android_chrome1000067IsClearable { get; init; }

    [JsonPropertyName("com.android.chrome_1000067_is_ongoing")]
    public bool? Com_android_chrome1000067IsOngoing { get; init; }

    [JsonPropertyName("com.android.chrome_1000067_post_time")]
    public double? Com_android_chrome1000067PostTime { get; init; }

    [JsonPropertyName("com.android.systemui_2131952516_category")]
    public string? Com_android_systemui2131952516Category { get; init; }

    [JsonPropertyName("com.android.systemui_2131952516_channel_id")]
    public string? Com_android_systemui2131952516ChannelId { get; init; }

    [JsonPropertyName("com.android.systemui_2131952516_group_id")]
    public string? Com_android_systemui2131952516GroupId { get; init; }

    [JsonPropertyName("com.android.systemui_2131952516_is_clearable")]
    public bool? Com_android_systemui2131952516IsClearable { get; init; }

    [JsonPropertyName("com.android.systemui_2131952516_is_ongoing")]
    public bool? Com_android_systemui2131952516IsOngoing { get; init; }

    [JsonPropertyName("com.android.systemui_2131952516_post_time")]
    public double? Com_android_systemui2131952516PostTime { get; init; }

    [JsonPropertyName("com.google.android.apps.wear.companion_0_category")]
    public string? Com_google_android_apps_wear_companion0Category { get; init; }

    [JsonPropertyName("com.google.android.apps.wear.companion_0_channel_id")]
    public string? Com_google_android_apps_wear_companion0ChannelId { get; init; }

    [JsonPropertyName("com.google.android.apps.wear.companion_0_group_id")]
    public string? Com_google_android_apps_wear_companion0GroupId { get; init; }

    [JsonPropertyName("com.google.android.apps.wear.companion_0_is_clearable")]
    public bool? Com_google_android_apps_wear_companion0IsClearable { get; init; }

    [JsonPropertyName("com.google.android.apps.wear.companion_0_is_ongoing")]
    public bool? Com_google_android_apps_wear_companion0IsOngoing { get; init; }

    [JsonPropertyName("com.google.android.apps.wear.companion_0_post_time")]
    public double? Com_google_android_apps_wear_companion0PostTime { get; init; }

    [JsonPropertyName("com.google.android.googlequicksearchbox_0_category")]
    public string? Com_google_android_googlequicksearchbox0Category { get; init; }

    [JsonPropertyName("com.google.android.googlequicksearchbox_0_channel_id")]
    public string? Com_google_android_googlequicksearchbox0ChannelId { get; init; }

    [JsonPropertyName("com.google.android.googlequicksearchbox_0_group_id")]
    public string? Com_google_android_googlequicksearchbox0GroupId { get; init; }

    [JsonPropertyName("com.google.android.googlequicksearchbox_0_is_clearable")]
    public bool? Com_google_android_googlequicksearchbox0IsClearable { get; init; }

    [JsonPropertyName("com.google.android.googlequicksearchbox_0_is_ongoing")]
    public bool? Com_google_android_googlequicksearchbox0IsOngoing { get; init; }

    [JsonPropertyName("com.google.android.googlequicksearchbox_0_post_time")]
    public double? Com_google_android_googlequicksearchbox0PostTime { get; init; }

    [JsonPropertyName("android.appInfo_bbc.mobile.news.uk_1022")]
    public string? Android_appInfoBbc_mobile_news_uk1022 { get; init; }

    [JsonPropertyName("android.bigText_bbc.mobile.news.uk_1022")]
    public string? Android_bigTextBbc_mobile_news_uk1022 { get; init; }

    [JsonPropertyName("android.infoText_bbc.mobile.news.uk_1022")]
    public string? Android_infoTextBbc_mobile_news_uk1022 { get; init; }

    [JsonPropertyName("android.largeIcon_bbc.mobile.news.uk_1022")]
    public string? Android_largeIconBbc_mobile_news_uk1022 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_bbc.mobile.news.uk_1022")]
    public bool? Android_progressIndeterminateBbc_mobile_news_uk1022 { get; init; }

    [JsonPropertyName("android.progressMax_bbc.mobile.news.uk_1022")]
    public double? Android_progressMaxBbc_mobile_news_uk1022 { get; init; }

    [JsonPropertyName("android.progress_bbc.mobile.news.uk_1022")]
    public double? Android_progressBbc_mobile_news_uk1022 { get; init; }

    [JsonPropertyName("android.reduced.images_bbc.mobile.news.uk_1022")]
    public bool? Android_reduced_imagesBbc_mobile_news_uk1022 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_bbc.mobile.news.uk_1022")]
    public string? Android_remoteInputHistoryBbc_mobile_news_uk1022 { get; init; }

    [JsonPropertyName("android.showChronometer_bbc.mobile.news.uk_1022")]
    public bool? Android_showChronometerBbc_mobile_news_uk1022 { get; init; }

    [JsonPropertyName("android.showWhen_bbc.mobile.news.uk_1022")]
    public bool? Android_showWhenBbc_mobile_news_uk1022 { get; init; }

    [JsonPropertyName("android.subText_bbc.mobile.news.uk_1022")]
    public string? Android_subTextBbc_mobile_news_uk1022 { get; init; }

    [JsonPropertyName("android.template_bbc.mobile.news.uk_1022")]
    public string? Android_templateBbc_mobile_news_uk1022 { get; init; }

    [JsonPropertyName("android.text_bbc.mobile.news.uk_1022")]
    public string? Android_textBbc_mobile_news_uk1022 { get; init; }

    [JsonPropertyName("android.title_bbc.mobile.news.uk_1022")]
    public string? Android_titleBbc_mobile_news_uk1022 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_bbc.mobile.news.uk_1022")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEBbc_mobile_news_uk1022 { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1022_category")]
    public string? Bbc_mobile_news_uk1022Category { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1022_channel_id")]
    public string? Bbc_mobile_news_uk1022ChannelId { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1022_group_id")]
    public string? Bbc_mobile_news_uk1022GroupId { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1022_is_clearable")]
    public bool? Bbc_mobile_news_uk1022IsClearable { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1022_is_ongoing")]
    public bool? Bbc_mobile_news_uk1022IsOngoing { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1022_post_time")]
    public double? Bbc_mobile_news_uk1022PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.innovatise.h1ive_237")]
    public string? Android_appInfoCom_innovatise_h1ive237 { get; init; }

    [JsonPropertyName("android.infoText_com.innovatise.h1ive_237")]
    public string? Android_infoTextCom_innovatise_h1ive237 { get; init; }

    [JsonPropertyName("android.largeIcon_com.innovatise.h1ive_237")]
    public string? Android_largeIconCom_innovatise_h1ive237 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.innovatise.h1ive_237")]
    public bool? Android_progressIndeterminateCom_innovatise_h1ive237 { get; init; }

    [JsonPropertyName("android.progressMax_com.innovatise.h1ive_237")]
    public double? Android_progressMaxCom_innovatise_h1ive237 { get; init; }

    [JsonPropertyName("android.progress_com.innovatise.h1ive_237")]
    public double? Android_progressCom_innovatise_h1ive237 { get; init; }

    [JsonPropertyName("android.reduced.images_com.innovatise.h1ive_237")]
    public bool? Android_reduced_imagesCom_innovatise_h1ive237 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.innovatise.h1ive_237")]
    public string? Android_remoteInputHistoryCom_innovatise_h1ive237 { get; init; }

    [JsonPropertyName("android.showChronometer_com.innovatise.h1ive_237")]
    public bool? Android_showChronometerCom_innovatise_h1ive237 { get; init; }

    [JsonPropertyName("android.showWhen_com.innovatise.h1ive_237")]
    public bool? Android_showWhenCom_innovatise_h1ive237 { get; init; }

    [JsonPropertyName("android.subText_com.innovatise.h1ive_237")]
    public string? Android_subTextCom_innovatise_h1ive237 { get; init; }

    [JsonPropertyName("android.summaryText_com.innovatise.h1ive_237")]
    public string? Android_summaryTextCom_innovatise_h1ive237 { get; init; }

    [JsonPropertyName("android.template_com.innovatise.h1ive_237")]
    public string? Android_templateCom_innovatise_h1ive237 { get; init; }

    [JsonPropertyName("android.textLines_com.innovatise.h1ive_237")]
    public IReadOnlyList<string>? Android_textLinesCom_innovatise_h1ive237 { get; init; }

    [JsonPropertyName("android.text_com.innovatise.h1ive_237")]
    public string? Android_textCom_innovatise_h1ive237 { get; init; }

    [JsonPropertyName("android.title.big_com.innovatise.h1ive_237")]
    public string? Android_title_bigCom_innovatise_h1ive237 { get; init; }

    [JsonPropertyName("android.title_com.innovatise.h1ive_237")]
    public string? Android_titleCom_innovatise_h1ive237 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.innovatise.h1ive_237")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_innovatise_h1ive237 { get; init; }

    [JsonPropertyName("com.innovatise.h1ive_237_category")]
    public string? Com_innovatise_h1ive237Category { get; init; }

    [JsonPropertyName("com.innovatise.h1ive_237_channel_id")]
    public string? Com_innovatise_h1ive237ChannelId { get; init; }

    [JsonPropertyName("com.innovatise.h1ive_237_group_id")]
    public string? Com_innovatise_h1ive237GroupId { get; init; }

    [JsonPropertyName("com.innovatise.h1ive_237_is_clearable")]
    public bool? Com_innovatise_h1ive237IsClearable { get; init; }

    [JsonPropertyName("com.innovatise.h1ive_237_is_ongoing")]
    public bool? Com_innovatise_h1ive237IsOngoing { get; init; }

    [JsonPropertyName("com.innovatise.h1ive_237_post_time")]
    public double? Com_innovatise_h1ive237PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.google.android.apps.wellbeing_1")]
    public string? Android_appInfoCom_google_android_apps_wellbeing1 { get; init; }

    [JsonPropertyName("android.bigText_com.google.android.apps.wellbeing_1")]
    public string? Android_bigTextCom_google_android_apps_wellbeing1 { get; init; }

    [JsonPropertyName("android.reduced.images_com.google.android.apps.wellbeing_1")]
    public bool? Android_reduced_imagesCom_google_android_apps_wellbeing1 { get; init; }

    [JsonPropertyName("android.template_com.google.android.apps.wellbeing_1")]
    public string? Android_templateCom_google_android_apps_wellbeing1 { get; init; }

    [JsonPropertyName("android.text_com.google.android.apps.wellbeing_1")]
    public string? Android_textCom_google_android_apps_wellbeing1 { get; init; }

    [JsonPropertyName("android.title_com.google.android.apps.wellbeing_1")]
    public string? Android_titleCom_google_android_apps_wellbeing1 { get; init; }

    [JsonPropertyName("com.google.android.apps.wellbeing_1_category")]
    public string? Com_google_android_apps_wellbeing1Category { get; init; }

    [JsonPropertyName("com.google.android.apps.wellbeing_1_channel_id")]
    public string? Com_google_android_apps_wellbeing1ChannelId { get; init; }

    [JsonPropertyName("com.google.android.apps.wellbeing_1_group_id")]
    public string? Com_google_android_apps_wellbeing1GroupId { get; init; }

    [JsonPropertyName("com.google.android.apps.wellbeing_1_is_clearable")]
    public bool? Com_google_android_apps_wellbeing1IsClearable { get; init; }

    [JsonPropertyName("com.google.android.apps.wellbeing_1_is_ongoing")]
    public bool? Com_google_android_apps_wellbeing1IsOngoing { get; init; }

    [JsonPropertyName("com.google.android.apps.wellbeing_1_post_time")]
    public double? Com_google_android_apps_wellbeing1PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.audible.application_45")]
    public string? Android_appInfoCom_audible_application45 { get; init; }

    [JsonPropertyName("android.compactActions_com.audible.application_45")]
    public IReadOnlyList<double>? Android_compactActionsCom_audible_application45 { get; init; }

    [JsonPropertyName("android.infoText_com.audible.application_45")]
    public string? Android_infoTextCom_audible_application45 { get; init; }

    [JsonPropertyName("android.largeIcon_com.audible.application_45")]
    public string? Android_largeIconCom_audible_application45 { get; init; }

    [JsonPropertyName("android.mediaSession_com.audible.application_45")]
    public string? Android_mediaSessionCom_audible_application45 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.audible.application_45")]
    public bool? Android_progressIndeterminateCom_audible_application45 { get; init; }

    [JsonPropertyName("android.progressMax_com.audible.application_45")]
    public double? Android_progressMaxCom_audible_application45 { get; init; }

    [JsonPropertyName("android.progress_com.audible.application_45")]
    public double? Android_progressCom_audible_application45 { get; init; }

    [JsonPropertyName("android.reduced.images_com.audible.application_45")]
    public bool? Android_reduced_imagesCom_audible_application45 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.audible.application_45")]
    public string? Android_remoteInputHistoryCom_audible_application45 { get; init; }

    [JsonPropertyName("android.showChronometer_com.audible.application_45")]
    public bool? Android_showChronometerCom_audible_application45 { get; init; }

    [JsonPropertyName("android.showWhen_com.audible.application_45")]
    public bool? Android_showWhenCom_audible_application45 { get; init; }

    [JsonPropertyName("android.subText_com.audible.application_45")]
    public string? Android_subTextCom_audible_application45 { get; init; }

    [JsonPropertyName("android.template_com.audible.application_45")]
    public string? Android_templateCom_audible_application45 { get; init; }

    [JsonPropertyName("android.text_com.audible.application_45")]
    public string? Android_textCom_audible_application45 { get; init; }

    [JsonPropertyName("android.title_com.audible.application_45")]
    public string? Android_titleCom_audible_application45 { get; init; }

    [JsonPropertyName("com.audible.application_45_category")]
    public string? Com_audible_application45Category { get; init; }

    [JsonPropertyName("com.audible.application_45_channel_id")]
    public string? Com_audible_application45ChannelId { get; init; }

    [JsonPropertyName("com.audible.application_45_group_id")]
    public string? Com_audible_application45GroupId { get; init; }

    [JsonPropertyName("com.audible.application_45_is_clearable")]
    public bool? Com_audible_application45IsClearable { get; init; }

    [JsonPropertyName("com.audible.application_45_is_ongoing")]
    public bool? Com_audible_application45IsOngoing { get; init; }

    [JsonPropertyName("com.audible.application_45_post_time")]
    public double? Com_audible_application45PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.amazon.dee.app_2147483647")]
    public string? Android_appInfoCom_amazon_dee_app2147483647 { get; init; }

    [JsonPropertyName("android.reduced.images_com.amazon.dee.app_2147483647")]
    public bool? Android_reduced_imagesCom_amazon_dee_app2147483647 { get; init; }

    [JsonPropertyName("com.amazon.dee.app_2147483647_category")]
    public string? Com_amazon_dee_app2147483647Category { get; init; }

    [JsonPropertyName("com.amazon.dee.app_2147483647_channel_id")]
    public string? Com_amazon_dee_app2147483647ChannelId { get; init; }

    [JsonPropertyName("com.amazon.dee.app_2147483647_group_id")]
    public string? Com_amazon_dee_app2147483647GroupId { get; init; }

    [JsonPropertyName("com.amazon.dee.app_2147483647_is_clearable")]
    public bool? Com_amazon_dee_app2147483647IsClearable { get; init; }

    [JsonPropertyName("com.amazon.dee.app_2147483647_is_ongoing")]
    public bool? Com_amazon_dee_app2147483647IsOngoing { get; init; }

    [JsonPropertyName("com.amazon.dee.app_2147483647_post_time")]
    public double? Com_amazon_dee_app2147483647PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.thetileapp.tile_12")]
    public string? Android_appInfoCom_thetileapp_tile12 { get; init; }

    [JsonPropertyName("android.bigText_com.thetileapp.tile_12")]
    public string? Android_bigTextCom_thetileapp_tile12 { get; init; }

    [JsonPropertyName("android.reduced.images_com.thetileapp.tile_12")]
    public bool? Android_reduced_imagesCom_thetileapp_tile12 { get; init; }

    [JsonPropertyName("android.showWhen_com.thetileapp.tile_12")]
    public bool? Android_showWhenCom_thetileapp_tile12 { get; init; }

    [JsonPropertyName("android.template_com.thetileapp.tile_12")]
    public string? Android_templateCom_thetileapp_tile12 { get; init; }

    [JsonPropertyName("android.text_com.thetileapp.tile_12")]
    public string? Android_textCom_thetileapp_tile12 { get; init; }

    [JsonPropertyName("android.title_com.thetileapp.tile_12")]
    public string? Android_titleCom_thetileapp_tile12 { get; init; }

    [JsonPropertyName("com.thetileapp.tile_12_category")]
    public string? Com_thetileapp_tile12Category { get; init; }

    [JsonPropertyName("com.thetileapp.tile_12_channel_id")]
    public string? Com_thetileapp_tile12ChannelId { get; init; }

    [JsonPropertyName("com.thetileapp.tile_12_group_id")]
    public string? Com_thetileapp_tile12GroupId { get; init; }

    [JsonPropertyName("com.thetileapp.tile_12_is_clearable")]
    public bool? Com_thetileapp_tile12IsClearable { get; init; }

    [JsonPropertyName("com.thetileapp.tile_12_is_ongoing")]
    public bool? Com_thetileapp_tile12IsOngoing { get; init; }

    [JsonPropertyName("com.thetileapp.tile_12_post_time")]
    public double? Com_thetileapp_tile12PostTime { get; init; }

    [JsonPropertyName("android.appInfo_bbc.mobile.news.uk_1029")]
    public string? Android_appInfoBbc_mobile_news_uk1029 { get; init; }

    [JsonPropertyName("android.appInfo_bbc.mobile.news.uk_1030")]
    public string? Android_appInfoBbc_mobile_news_uk1030 { get; init; }

    [JsonPropertyName("android.appInfo_bbc.mobile.news.uk_2147483647")]
    public string? Android_appInfoBbc_mobile_news_uk2147483647 { get; init; }

    [JsonPropertyName("android.appInfo_com.microsoft.office.outlook_1")]
    public string? Android_appInfoCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.appInfo_com.microsoft.office.outlook_2")]
    public string? Android_appInfoCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.appInfo_io.homeassistant.companion.android_595157400")]
    public string? Android_appInfoIo_homeassistant_companion_android595157400 { get; init; }

    [JsonPropertyName("android.bigText_bbc.mobile.news.uk_1029")]
    public string? Android_bigTextBbc_mobile_news_uk1029 { get; init; }

    [JsonPropertyName("android.bigText_bbc.mobile.news.uk_1030")]
    public string? Android_bigTextBbc_mobile_news_uk1030 { get; init; }

    [JsonPropertyName("android.bigText_com.microsoft.office.outlook_1")]
    public string? Android_bigTextCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.bigText_com.microsoft.office.outlook_2")]
    public string? Android_bigTextCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.bigText_io.homeassistant.companion.android_595157400")]
    public string? Android_bigTextIo_homeassistant_companion_android595157400 { get; init; }

    [JsonPropertyName("android.infoText_bbc.mobile.news.uk_1029")]
    public string? Android_infoTextBbc_mobile_news_uk1029 { get; init; }

    [JsonPropertyName("android.infoText_bbc.mobile.news.uk_1030")]
    public string? Android_infoTextBbc_mobile_news_uk1030 { get; init; }

    [JsonPropertyName("android.infoText_com.microsoft.office.outlook_1")]
    public string? Android_infoTextCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.infoText_com.microsoft.office.outlook_2")]
    public string? Android_infoTextCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.infoText_io.homeassistant.companion.android_595157400")]
    public string? Android_infoTextIo_homeassistant_companion_android595157400 { get; init; }

    [JsonPropertyName("android.largeIcon_bbc.mobile.news.uk_1029")]
    public string? Android_largeIconBbc_mobile_news_uk1029 { get; init; }

    [JsonPropertyName("android.largeIcon_bbc.mobile.news.uk_1030")]
    public string? Android_largeIconBbc_mobile_news_uk1030 { get; init; }

    [JsonPropertyName("android.largeIcon_com.microsoft.office.outlook_1")]
    public string? Android_largeIconCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.largeIcon_com.microsoft.office.outlook_2")]
    public string? Android_largeIconCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.largeIcon_io.homeassistant.companion.android_595157400")]
    public string? Android_largeIconIo_homeassistant_companion_android595157400 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_bbc.mobile.news.uk_1029")]
    public bool? Android_progressIndeterminateBbc_mobile_news_uk1029 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_bbc.mobile.news.uk_1030")]
    public bool? Android_progressIndeterminateBbc_mobile_news_uk1030 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.microsoft.office.outlook_1")]
    public bool? Android_progressIndeterminateCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.microsoft.office.outlook_2")]
    public bool? Android_progressIndeterminateCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_io.homeassistant.companion.android_595157400")]
    public bool? Android_progressIndeterminateIo_homeassistant_companion_android595157400 { get; init; }

    [JsonPropertyName("android.progressMax_bbc.mobile.news.uk_1029")]
    public double? Android_progressMaxBbc_mobile_news_uk1029 { get; init; }

    [JsonPropertyName("android.progressMax_bbc.mobile.news.uk_1030")]
    public double? Android_progressMaxBbc_mobile_news_uk1030 { get; init; }

    [JsonPropertyName("android.progressMax_com.microsoft.office.outlook_1")]
    public double? Android_progressMaxCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.progressMax_com.microsoft.office.outlook_2")]
    public double? Android_progressMaxCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.progressMax_io.homeassistant.companion.android_595157400")]
    public double? Android_progressMaxIo_homeassistant_companion_android595157400 { get; init; }

    [JsonPropertyName("android.progress_bbc.mobile.news.uk_1029")]
    public double? Android_progressBbc_mobile_news_uk1029 { get; init; }

    [JsonPropertyName("android.progress_bbc.mobile.news.uk_1030")]
    public double? Android_progressBbc_mobile_news_uk1030 { get; init; }

    [JsonPropertyName("android.progress_com.microsoft.office.outlook_1")]
    public double? Android_progressCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.progress_com.microsoft.office.outlook_2")]
    public double? Android_progressCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.progress_io.homeassistant.companion.android_595157400")]
    public double? Android_progressIo_homeassistant_companion_android595157400 { get; init; }

    [JsonPropertyName("android.reduced.images_bbc.mobile.news.uk_1029")]
    public bool? Android_reduced_imagesBbc_mobile_news_uk1029 { get; init; }

    [JsonPropertyName("android.reduced.images_bbc.mobile.news.uk_1030")]
    public bool? Android_reduced_imagesBbc_mobile_news_uk1030 { get; init; }

    [JsonPropertyName("android.reduced.images_bbc.mobile.news.uk_2147483647")]
    public bool? Android_reduced_imagesBbc_mobile_news_uk2147483647 { get; init; }

    [JsonPropertyName("android.reduced.images_com.microsoft.office.outlook_1")]
    public bool? Android_reduced_imagesCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.reduced.images_com.microsoft.office.outlook_2")]
    public bool? Android_reduced_imagesCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.reduced.images_io.homeassistant.companion.android_595157400")]
    public bool? Android_reduced_imagesIo_homeassistant_companion_android595157400 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_bbc.mobile.news.uk_1029")]
    public string? Android_remoteInputHistoryBbc_mobile_news_uk1029 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_bbc.mobile.news.uk_1030")]
    public string? Android_remoteInputHistoryBbc_mobile_news_uk1030 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.microsoft.office.outlook_1")]
    public string? Android_remoteInputHistoryCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.microsoft.office.outlook_2")]
    public string? Android_remoteInputHistoryCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_io.homeassistant.companion.android_595157400")]
    public string? Android_remoteInputHistoryIo_homeassistant_companion_android595157400 { get; init; }

    [JsonPropertyName("android.showChronometer_bbc.mobile.news.uk_1029")]
    public bool? Android_showChronometerBbc_mobile_news_uk1029 { get; init; }

    [JsonPropertyName("android.showChronometer_bbc.mobile.news.uk_1030")]
    public bool? Android_showChronometerBbc_mobile_news_uk1030 { get; init; }

    [JsonPropertyName("android.showChronometer_com.microsoft.office.outlook_1")]
    public bool? Android_showChronometerCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.showChronometer_com.microsoft.office.outlook_2")]
    public bool? Android_showChronometerCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.showChronometer_io.homeassistant.companion.android_595157400")]
    public bool? Android_showChronometerIo_homeassistant_companion_android595157400 { get; init; }

    [JsonPropertyName("android.showWhen_bbc.mobile.news.uk_1029")]
    public bool? Android_showWhenBbc_mobile_news_uk1029 { get; init; }

    [JsonPropertyName("android.showWhen_bbc.mobile.news.uk_1030")]
    public bool? Android_showWhenBbc_mobile_news_uk1030 { get; init; }

    [JsonPropertyName("android.showWhen_com.microsoft.office.outlook_1")]
    public bool? Android_showWhenCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.showWhen_com.microsoft.office.outlook_2")]
    public bool? Android_showWhenCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.showWhen_io.homeassistant.companion.android_595157400")]
    public bool? Android_showWhenIo_homeassistant_companion_android595157400 { get; init; }

    [JsonPropertyName("android.subText_bbc.mobile.news.uk_1029")]
    public string? Android_subTextBbc_mobile_news_uk1029 { get; init; }

    [JsonPropertyName("android.subText_bbc.mobile.news.uk_1030")]
    public string? Android_subTextBbc_mobile_news_uk1030 { get; init; }

    [JsonPropertyName("android.subText_com.microsoft.office.outlook_1")]
    public string? Android_subTextCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.subText_com.microsoft.office.outlook_2")]
    public string? Android_subTextCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.subText_io.homeassistant.companion.android_595157400")]
    public string? Android_subTextIo_homeassistant_companion_android595157400 { get; init; }

    [JsonPropertyName("android.template_bbc.mobile.news.uk_1029")]
    public string? Android_templateBbc_mobile_news_uk1029 { get; init; }

    [JsonPropertyName("android.template_bbc.mobile.news.uk_1030")]
    public string? Android_templateBbc_mobile_news_uk1030 { get; init; }

    [JsonPropertyName("android.template_com.microsoft.office.outlook_1")]
    public string? Android_templateCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.template_com.microsoft.office.outlook_2")]
    public string? Android_templateCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.template_io.homeassistant.companion.android_595157400")]
    public string? Android_templateIo_homeassistant_companion_android595157400 { get; init; }

    [JsonPropertyName("android.text_bbc.mobile.news.uk_1029")]
    public string? Android_textBbc_mobile_news_uk1029 { get; init; }

    [JsonPropertyName("android.text_bbc.mobile.news.uk_1030")]
    public string? Android_textBbc_mobile_news_uk1030 { get; init; }

    [JsonPropertyName("android.text_com.microsoft.office.outlook_1")]
    public string? Android_textCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.text_com.microsoft.office.outlook_2")]
    public string? Android_textCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.text_io.homeassistant.companion.android_595157400")]
    public string? Android_textIo_homeassistant_companion_android595157400 { get; init; }

    [JsonPropertyName("android.title.big_com.microsoft.office.outlook_1")]
    public string? Android_title_bigCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.title.big_com.microsoft.office.outlook_2")]
    public string? Android_title_bigCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.title_bbc.mobile.news.uk_1029")]
    public string? Android_titleBbc_mobile_news_uk1029 { get; init; }

    [JsonPropertyName("android.title_bbc.mobile.news.uk_1030")]
    public string? Android_titleBbc_mobile_news_uk1030 { get; init; }

    [JsonPropertyName("android.title_com.microsoft.office.outlook_1")]
    public string? Android_titleCom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("android.title_com.microsoft.office.outlook_2")]
    public string? Android_titleCom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("android.title_io.homeassistant.companion.android_595157400")]
    public string? Android_titleIo_homeassistant_companion_android595157400 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_bbc.mobile.news.uk_1029")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEBbc_mobile_news_uk1029 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_bbc.mobile.news.uk_1030")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEBbc_mobile_news_uk1030 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.microsoft.office.outlook_1")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_microsoft_office_outlook1 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.microsoft.office.outlook_2")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_microsoft_office_outlook2 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_io.homeassistant.companion.android_595157400")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEIo_homeassistant_companion_android595157400 { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1029_category")]
    public string? Bbc_mobile_news_uk1029Category { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1029_channel_id")]
    public string? Bbc_mobile_news_uk1029ChannelId { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1029_group_id")]
    public string? Bbc_mobile_news_uk1029GroupId { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1029_is_clearable")]
    public bool? Bbc_mobile_news_uk1029IsClearable { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1029_is_ongoing")]
    public bool? Bbc_mobile_news_uk1029IsOngoing { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1029_post_time")]
    public double? Bbc_mobile_news_uk1029PostTime { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1030_category")]
    public string? Bbc_mobile_news_uk1030Category { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1030_channel_id")]
    public string? Bbc_mobile_news_uk1030ChannelId { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1030_group_id")]
    public string? Bbc_mobile_news_uk1030GroupId { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1030_is_clearable")]
    public bool? Bbc_mobile_news_uk1030IsClearable { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1030_is_ongoing")]
    public bool? Bbc_mobile_news_uk1030IsOngoing { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1030_post_time")]
    public double? Bbc_mobile_news_uk1030PostTime { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_2147483647_category")]
    public string? Bbc_mobile_news_uk2147483647Category { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_2147483647_channel_id")]
    public string? Bbc_mobile_news_uk2147483647ChannelId { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_2147483647_group_id")]
    public string? Bbc_mobile_news_uk2147483647GroupId { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_2147483647_is_clearable")]
    public bool? Bbc_mobile_news_uk2147483647IsClearable { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_2147483647_is_ongoing")]
    public bool? Bbc_mobile_news_uk2147483647IsOngoing { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_2147483647_post_time")]
    public double? Bbc_mobile_news_uk2147483647PostTime { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_1_category")]
    public string? Com_microsoft_office_outlook1Category { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_1_channel_id")]
    public string? Com_microsoft_office_outlook1ChannelId { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_1_group_id")]
    public string? Com_microsoft_office_outlook1GroupId { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_1_is_clearable")]
    public bool? Com_microsoft_office_outlook1IsClearable { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_1_is_ongoing")]
    public bool? Com_microsoft_office_outlook1IsOngoing { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_1_post_time")]
    public double? Com_microsoft_office_outlook1PostTime { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_2_category")]
    public string? Com_microsoft_office_outlook2Category { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_2_channel_id")]
    public string? Com_microsoft_office_outlook2ChannelId { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_2_group_id")]
    public string? Com_microsoft_office_outlook2GroupId { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_2_is_clearable")]
    public bool? Com_microsoft_office_outlook2IsClearable { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_2_is_ongoing")]
    public bool? Com_microsoft_office_outlook2IsOngoing { get; init; }

    [JsonPropertyName("com.microsoft.office.outlook_2_post_time")]
    public double? Com_microsoft_office_outlook2PostTime { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_595157400_category")]
    public string? Io_homeassistant_companion_android595157400Category { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_595157400_channel_id")]
    public string? Io_homeassistant_companion_android595157400ChannelId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_595157400_group_id")]
    public string? Io_homeassistant_companion_android595157400GroupId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_595157400_is_clearable")]
    public bool? Io_homeassistant_companion_android595157400IsClearable { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_595157400_is_ongoing")]
    public bool? Io_homeassistant_companion_android595157400IsOngoing { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_595157400_post_time")]
    public double? Io_homeassistant_companion_android595157400PostTime { get; init; }

    [JsonPropertyName("android.appInfo_bbc.mobile.news.uk_1031")]
    public string? Android_appInfoBbc_mobile_news_uk1031 { get; init; }

    [JsonPropertyName("android.appInfo_bbc.mobile.news.uk_1032")]
    public string? Android_appInfoBbc_mobile_news_uk1032 { get; init; }

    [JsonPropertyName("android.bigText_bbc.mobile.news.uk_1031")]
    public string? Android_bigTextBbc_mobile_news_uk1031 { get; init; }

    [JsonPropertyName("android.bigText_bbc.mobile.news.uk_1032")]
    public string? Android_bigTextBbc_mobile_news_uk1032 { get; init; }

    [JsonPropertyName("android.infoText_bbc.mobile.news.uk_1031")]
    public string? Android_infoTextBbc_mobile_news_uk1031 { get; init; }

    [JsonPropertyName("android.infoText_bbc.mobile.news.uk_1032")]
    public string? Android_infoTextBbc_mobile_news_uk1032 { get; init; }

    [JsonPropertyName("android.largeIcon_bbc.mobile.news.uk_1031")]
    public string? Android_largeIconBbc_mobile_news_uk1031 { get; init; }

    [JsonPropertyName("android.largeIcon_bbc.mobile.news.uk_1032")]
    public string? Android_largeIconBbc_mobile_news_uk1032 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_bbc.mobile.news.uk_1031")]
    public bool? Android_progressIndeterminateBbc_mobile_news_uk1031 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_bbc.mobile.news.uk_1032")]
    public bool? Android_progressIndeterminateBbc_mobile_news_uk1032 { get; init; }

    [JsonPropertyName("android.progressMax_bbc.mobile.news.uk_1031")]
    public double? Android_progressMaxBbc_mobile_news_uk1031 { get; init; }

    [JsonPropertyName("android.progressMax_bbc.mobile.news.uk_1032")]
    public double? Android_progressMaxBbc_mobile_news_uk1032 { get; init; }

    [JsonPropertyName("android.progress_bbc.mobile.news.uk_1031")]
    public double? Android_progressBbc_mobile_news_uk1031 { get; init; }

    [JsonPropertyName("android.progress_bbc.mobile.news.uk_1032")]
    public double? Android_progressBbc_mobile_news_uk1032 { get; init; }

    [JsonPropertyName("android.reduced.images_bbc.mobile.news.uk_1031")]
    public bool? Android_reduced_imagesBbc_mobile_news_uk1031 { get; init; }

    [JsonPropertyName("android.reduced.images_bbc.mobile.news.uk_1032")]
    public bool? Android_reduced_imagesBbc_mobile_news_uk1032 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_bbc.mobile.news.uk_1031")]
    public string? Android_remoteInputHistoryBbc_mobile_news_uk1031 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_bbc.mobile.news.uk_1032")]
    public string? Android_remoteInputHistoryBbc_mobile_news_uk1032 { get; init; }

    [JsonPropertyName("android.showChronometer_bbc.mobile.news.uk_1031")]
    public bool? Android_showChronometerBbc_mobile_news_uk1031 { get; init; }

    [JsonPropertyName("android.showChronometer_bbc.mobile.news.uk_1032")]
    public bool? Android_showChronometerBbc_mobile_news_uk1032 { get; init; }

    [JsonPropertyName("android.showWhen_bbc.mobile.news.uk_1031")]
    public bool? Android_showWhenBbc_mobile_news_uk1031 { get; init; }

    [JsonPropertyName("android.showWhen_bbc.mobile.news.uk_1032")]
    public bool? Android_showWhenBbc_mobile_news_uk1032 { get; init; }

    [JsonPropertyName("android.subText_bbc.mobile.news.uk_1031")]
    public string? Android_subTextBbc_mobile_news_uk1031 { get; init; }

    [JsonPropertyName("android.subText_bbc.mobile.news.uk_1032")]
    public string? Android_subTextBbc_mobile_news_uk1032 { get; init; }

    [JsonPropertyName("android.template_bbc.mobile.news.uk_1031")]
    public string? Android_templateBbc_mobile_news_uk1031 { get; init; }

    [JsonPropertyName("android.template_bbc.mobile.news.uk_1032")]
    public string? Android_templateBbc_mobile_news_uk1032 { get; init; }

    [JsonPropertyName("android.text_bbc.mobile.news.uk_1031")]
    public string? Android_textBbc_mobile_news_uk1031 { get; init; }

    [JsonPropertyName("android.text_bbc.mobile.news.uk_1032")]
    public string? Android_textBbc_mobile_news_uk1032 { get; init; }

    [JsonPropertyName("android.title_bbc.mobile.news.uk_1031")]
    public string? Android_titleBbc_mobile_news_uk1031 { get; init; }

    [JsonPropertyName("android.title_bbc.mobile.news.uk_1032")]
    public string? Android_titleBbc_mobile_news_uk1032 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_bbc.mobile.news.uk_1031")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEBbc_mobile_news_uk1031 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_bbc.mobile.news.uk_1032")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEBbc_mobile_news_uk1032 { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1031_category")]
    public string? Bbc_mobile_news_uk1031Category { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1031_channel_id")]
    public string? Bbc_mobile_news_uk1031ChannelId { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1031_group_id")]
    public string? Bbc_mobile_news_uk1031GroupId { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1031_is_clearable")]
    public bool? Bbc_mobile_news_uk1031IsClearable { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1031_is_ongoing")]
    public bool? Bbc_mobile_news_uk1031IsOngoing { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1031_post_time")]
    public double? Bbc_mobile_news_uk1031PostTime { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1032_category")]
    public string? Bbc_mobile_news_uk1032Category { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1032_channel_id")]
    public string? Bbc_mobile_news_uk1032ChannelId { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1032_group_id")]
    public string? Bbc_mobile_news_uk1032GroupId { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1032_is_clearable")]
    public bool? Bbc_mobile_news_uk1032IsClearable { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1032_is_ongoing")]
    public bool? Bbc_mobile_news_uk1032IsOngoing { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1032_post_time")]
    public double? Bbc_mobile_news_uk1032PostTime { get; init; }

    [JsonPropertyName("android.appInfo_bbc.mobile.news.uk_1002")]
    public string? Android_appInfoBbc_mobile_news_uk1002 { get; init; }

    [JsonPropertyName("android.appInfo_bbc.mobile.news.uk_1003")]
    public string? Android_appInfoBbc_mobile_news_uk1003 { get; init; }

    [JsonPropertyName("android.bigText_bbc.mobile.news.uk_1002")]
    public string? Android_bigTextBbc_mobile_news_uk1002 { get; init; }

    [JsonPropertyName("android.bigText_bbc.mobile.news.uk_1003")]
    public string? Android_bigTextBbc_mobile_news_uk1003 { get; init; }

    [JsonPropertyName("android.infoText_bbc.mobile.news.uk_1002")]
    public string? Android_infoTextBbc_mobile_news_uk1002 { get; init; }

    [JsonPropertyName("android.infoText_bbc.mobile.news.uk_1003")]
    public string? Android_infoTextBbc_mobile_news_uk1003 { get; init; }

    [JsonPropertyName("android.largeIcon_bbc.mobile.news.uk_1002")]
    public string? Android_largeIconBbc_mobile_news_uk1002 { get; init; }

    [JsonPropertyName("android.largeIcon_bbc.mobile.news.uk_1003")]
    public string? Android_largeIconBbc_mobile_news_uk1003 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_bbc.mobile.news.uk_1002")]
    public bool? Android_progressIndeterminateBbc_mobile_news_uk1002 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_bbc.mobile.news.uk_1003")]
    public bool? Android_progressIndeterminateBbc_mobile_news_uk1003 { get; init; }

    [JsonPropertyName("android.progressMax_bbc.mobile.news.uk_1002")]
    public double? Android_progressMaxBbc_mobile_news_uk1002 { get; init; }

    [JsonPropertyName("android.progressMax_bbc.mobile.news.uk_1003")]
    public double? Android_progressMaxBbc_mobile_news_uk1003 { get; init; }

    [JsonPropertyName("android.progress_bbc.mobile.news.uk_1002")]
    public double? Android_progressBbc_mobile_news_uk1002 { get; init; }

    [JsonPropertyName("android.progress_bbc.mobile.news.uk_1003")]
    public double? Android_progressBbc_mobile_news_uk1003 { get; init; }

    [JsonPropertyName("android.reduced.images_bbc.mobile.news.uk_1002")]
    public bool? Android_reduced_imagesBbc_mobile_news_uk1002 { get; init; }

    [JsonPropertyName("android.reduced.images_bbc.mobile.news.uk_1003")]
    public bool? Android_reduced_imagesBbc_mobile_news_uk1003 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_bbc.mobile.news.uk_1002")]
    public string? Android_remoteInputHistoryBbc_mobile_news_uk1002 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_bbc.mobile.news.uk_1003")]
    public string? Android_remoteInputHistoryBbc_mobile_news_uk1003 { get; init; }

    [JsonPropertyName("android.showChronometer_bbc.mobile.news.uk_1002")]
    public bool? Android_showChronometerBbc_mobile_news_uk1002 { get; init; }

    [JsonPropertyName("android.showChronometer_bbc.mobile.news.uk_1003")]
    public bool? Android_showChronometerBbc_mobile_news_uk1003 { get; init; }

    [JsonPropertyName("android.showWhen_bbc.mobile.news.uk_1002")]
    public bool? Android_showWhenBbc_mobile_news_uk1002 { get; init; }

    [JsonPropertyName("android.showWhen_bbc.mobile.news.uk_1003")]
    public bool? Android_showWhenBbc_mobile_news_uk1003 { get; init; }

    [JsonPropertyName("android.subText_bbc.mobile.news.uk_1002")]
    public string? Android_subTextBbc_mobile_news_uk1002 { get; init; }

    [JsonPropertyName("android.subText_bbc.mobile.news.uk_1003")]
    public string? Android_subTextBbc_mobile_news_uk1003 { get; init; }

    [JsonPropertyName("android.summaryText_com.whatsapp_1")]
    public string? Android_summaryTextCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.template_bbc.mobile.news.uk_1002")]
    public string? Android_templateBbc_mobile_news_uk1002 { get; init; }

    [JsonPropertyName("android.template_bbc.mobile.news.uk_1003")]
    public string? Android_templateBbc_mobile_news_uk1003 { get; init; }

    [JsonPropertyName("android.textLines_com.whatsapp_1")]
    public IReadOnlyList<string>? Android_textLinesCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.text_bbc.mobile.news.uk_1002")]
    public string? Android_textBbc_mobile_news_uk1002 { get; init; }

    [JsonPropertyName("android.text_bbc.mobile.news.uk_1003")]
    public string? Android_textBbc_mobile_news_uk1003 { get; init; }

    [JsonPropertyName("android.title_bbc.mobile.news.uk_1002")]
    public string? Android_titleBbc_mobile_news_uk1002 { get; init; }

    [JsonPropertyName("android.title_bbc.mobile.news.uk_1003")]
    public string? Android_titleBbc_mobile_news_uk1003 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_bbc.mobile.news.uk_1002")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEBbc_mobile_news_uk1002 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_bbc.mobile.news.uk_1003")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEBbc_mobile_news_uk1003 { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1002_category")]
    public string? Bbc_mobile_news_uk1002Category { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1002_channel_id")]
    public string? Bbc_mobile_news_uk1002ChannelId { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1002_group_id")]
    public string? Bbc_mobile_news_uk1002GroupId { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1002_is_clearable")]
    public bool? Bbc_mobile_news_uk1002IsClearable { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1002_is_ongoing")]
    public bool? Bbc_mobile_news_uk1002IsOngoing { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1002_post_time")]
    public double? Bbc_mobile_news_uk1002PostTime { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1003_category")]
    public string? Bbc_mobile_news_uk1003Category { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1003_channel_id")]
    public string? Bbc_mobile_news_uk1003ChannelId { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1003_group_id")]
    public string? Bbc_mobile_news_uk1003GroupId { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1003_is_clearable")]
    public bool? Bbc_mobile_news_uk1003IsClearable { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1003_is_ongoing")]
    public bool? Bbc_mobile_news_uk1003IsOngoing { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_1003_post_time")]
    public double? Bbc_mobile_news_uk1003PostTime { get; init; }

    [JsonPropertyName("c3c31f0c-a234-4910-9526-5ab6c3b48575")]
    public object? C3c31f0ca234491095265ab6c3b48575 { get; init; }

    [JsonPropertyName("ed8c563f-58cc-43fe-8ab4-c78455eb9ed2")]
    public object? Ed8c563f58cc43fe8ab4c78455eb9ed2 { get; init; }

    [JsonPropertyName("65fc9310-12be-4795-8cf1-21431534c665")]
    public object? _65fc931012be47958cf121431534c665 { get; init; }

    [JsonPropertyName("70c5a42f-8a91-4cc9-aef9-e9e357501b9a")]
    public object? _70c5a42f8a914cc9aef9e9e357501b9a { get; init; }

    [JsonPropertyName("1e209eb7-d5be-4432-8fe0-545b9f523c4d")]
    public object? _1e209eb7d5be44328fe0545b9f523c4d { get; init; }

    [JsonPropertyName("a68f6e19-084b-4138-b46b-1ddbdb7b192d")]
    public object? A68f6e19084b4138b46b1ddbdb7b192d { get; init; }

    [JsonPropertyName("e2ef3727-83ef-4cd0-ae20-1a989b270652")]
    public object? E2ef372783ef4cd0ae201a989b270652 { get; init; }

    [JsonPropertyName("ca97d32c-3cc2-4c6b-95d0-73f79a9ada1a")]
    public object? Ca97d32c3cc24c6b95d073f79a9ada1a { get; init; }

    [JsonPropertyName("2b0d7043-b177-4e50-a7cd-d2cce1e0ffad")]
    public object? _2b0d7043b1774e50a7cdd2cce1e0ffad { get; init; }

    [JsonPropertyName("7de97833-f918-433c-b850-520963bbb6ba")]
    public object? _7de97833f918433cb850520963bbb6ba { get; init; }

    [JsonPropertyName("49256a1d-e7ef-47d3-bb39-02139d929425")]
    public object? _49256a1de7ef47d3bb3902139d929425 { get; init; }

    [JsonPropertyName("android.appInfo_bbc.mobile.news.uk_100")]
    public string? Android_appInfoBbc_mobile_news_uk100 { get; init; }

    [JsonPropertyName("android.bigText_bbc.mobile.news.uk_100")]
    public string? Android_bigTextBbc_mobile_news_uk100 { get; init; }

    [JsonPropertyName("android.infoText_bbc.mobile.news.uk_100")]
    public string? Android_infoTextBbc_mobile_news_uk100 { get; init; }

    [JsonPropertyName("android.largeIcon_bbc.mobile.news.uk_100")]
    public string? Android_largeIconBbc_mobile_news_uk100 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_bbc.mobile.news.uk_100")]
    public bool? Android_progressIndeterminateBbc_mobile_news_uk100 { get; init; }

    [JsonPropertyName("android.progressMax_bbc.mobile.news.uk_100")]
    public double? Android_progressMaxBbc_mobile_news_uk100 { get; init; }

    [JsonPropertyName("android.progress_bbc.mobile.news.uk_100")]
    public double? Android_progressBbc_mobile_news_uk100 { get; init; }

    [JsonPropertyName("android.reduced.images_bbc.mobile.news.uk_100")]
    public bool? Android_reduced_imagesBbc_mobile_news_uk100 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_bbc.mobile.news.uk_100")]
    public string? Android_remoteInputHistoryBbc_mobile_news_uk100 { get; init; }

    [JsonPropertyName("android.showChronometer_bbc.mobile.news.uk_100")]
    public bool? Android_showChronometerBbc_mobile_news_uk100 { get; init; }

    [JsonPropertyName("android.showWhen_bbc.mobile.news.uk_100")]
    public bool? Android_showWhenBbc_mobile_news_uk100 { get; init; }

    [JsonPropertyName("android.subText_bbc.mobile.news.uk_100")]
    public string? Android_subTextBbc_mobile_news_uk100 { get; init; }

    [JsonPropertyName("android.template_bbc.mobile.news.uk_100")]
    public string? Android_templateBbc_mobile_news_uk100 { get; init; }

    [JsonPropertyName("android.text_bbc.mobile.news.uk_100")]
    public string? Android_textBbc_mobile_news_uk100 { get; init; }

    [JsonPropertyName("android.title_bbc.mobile.news.uk_100")]
    public string? Android_titleBbc_mobile_news_uk100 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_bbc.mobile.news.uk_100")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEBbc_mobile_news_uk100 { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_100_category")]
    public string? Bbc_mobile_news_uk100Category { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_100_channel_id")]
    public string? Bbc_mobile_news_uk100ChannelId { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_100_group_id")]
    public string? Bbc_mobile_news_uk100GroupId { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_100_is_clearable")]
    public bool? Bbc_mobile_news_uk100IsClearable { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_100_is_ongoing")]
    public bool? Bbc_mobile_news_uk100IsOngoing { get; init; }

    [JsonPropertyName("bbc.mobile.news.uk_100_post_time")]
    public double? Bbc_mobile_news_uk100PostTime { get; init; }

    [JsonPropertyName("auto_close_when_water_shortage")]
    public string? AutoCloseWhenWaterShortage { get; init; }

    [JsonPropertyName("current_device_status")]
    public string? CurrentDeviceStatus { get; init; }

    [JsonPropertyName("cyclic_quantitative_irrigation")]
    public object? CyclicQuantitativeIrrigation { get; init; }

    [JsonPropertyName("cyclic_timed_irrigation")]
    public object? CyclicTimedIrrigation { get; init; }

    [JsonPropertyName("flow")]
    public double? Flow { get; init; }

    [JsonPropertyName("android.conversationTitle_com.whatsapp_1")]
    public string? Android_conversationTitleCom_whatsapp1 { get; init; }

    [JsonPropertyName("android.appInfo_com.google.android.apps.maps_0")]
    public string? Android_appInfoCom_google_android_apps_maps0 { get; init; }

    [JsonPropertyName("android.appInfo_io.homeassistant.companion.android_-2014791649")]
    public string? Android_appInfoIo_homeassistant_companion_android2014791649 { get; init; }

    [JsonPropertyName("android.appInfo_io.homeassistant.companion.android_-2015647979")]
    public string? Android_appInfoIo_homeassistant_companion_android2015647979 { get; init; }

    [JsonPropertyName("android.appInfo_io.homeassistant.companion.android_-2015696111")]
    public string? Android_appInfoIo_homeassistant_companion_android2015696111 { get; init; }

    [JsonPropertyName("android.appInfo_io.homeassistant.companion.android_2147483647")]
    public string? Android_appInfoIo_homeassistant_companion_android2147483647 { get; init; }

    [JsonPropertyName("android.bigText_com.google.android.apps.maps_0")]
    public string? Android_bigTextCom_google_android_apps_maps0 { get; init; }

    [JsonPropertyName("android.infoText_com.google.android.apps.maps_0")]
    public string? Android_infoTextCom_google_android_apps_maps0 { get; init; }

    [JsonPropertyName("android.infoText_io.homeassistant.companion.android_-2014791649")]
    public string? Android_infoTextIo_homeassistant_companion_android2014791649 { get; init; }

    [JsonPropertyName("android.infoText_io.homeassistant.companion.android_-2015647979")]
    public string? Android_infoTextIo_homeassistant_companion_android2015647979 { get; init; }

    [JsonPropertyName("android.infoText_io.homeassistant.companion.android_-2015696111")]
    public string? Android_infoTextIo_homeassistant_companion_android2015696111 { get; init; }

    [JsonPropertyName("android.largeIcon.big_io.homeassistant.companion.android_-2014791649")]
    public string? Android_largeIcon_bigIo_homeassistant_companion_android2014791649 { get; init; }

    [JsonPropertyName("android.largeIcon.big_io.homeassistant.companion.android_-2015647979")]
    public string? Android_largeIcon_bigIo_homeassistant_companion_android2015647979 { get; init; }

    [JsonPropertyName("android.largeIcon.big_io.homeassistant.companion.android_-2015696111")]
    public string? Android_largeIcon_bigIo_homeassistant_companion_android2015696111 { get; init; }

    [JsonPropertyName("android.largeIcon_com.google.android.apps.maps_0")]
    public string? Android_largeIconCom_google_android_apps_maps0 { get; init; }

    [JsonPropertyName("android.largeIcon_io.homeassistant.companion.android_-2014791649")]
    public string? Android_largeIconIo_homeassistant_companion_android2014791649 { get; init; }

    [JsonPropertyName("android.largeIcon_io.homeassistant.companion.android_-2015647979")]
    public string? Android_largeIconIo_homeassistant_companion_android2015647979 { get; init; }

    [JsonPropertyName("android.largeIcon_io.homeassistant.companion.android_-2015696111")]
    public string? Android_largeIconIo_homeassistant_companion_android2015696111 { get; init; }

    [JsonPropertyName("android.pictureIcon_io.homeassistant.companion.android_-2014791649")]
    public string? Android_pictureIconIo_homeassistant_companion_android2014791649 { get; init; }

    [JsonPropertyName("android.pictureIcon_io.homeassistant.companion.android_-2015647979")]
    public string? Android_pictureIconIo_homeassistant_companion_android2015647979 { get; init; }

    [JsonPropertyName("android.pictureIcon_io.homeassistant.companion.android_-2015696111")]
    public string? Android_pictureIconIo_homeassistant_companion_android2015696111 { get; init; }

    [JsonPropertyName("android.picture_io.homeassistant.companion.android_-2014791649")]
    public string? Android_pictureIo_homeassistant_companion_android2014791649 { get; init; }

    [JsonPropertyName("android.picture_io.homeassistant.companion.android_-2015647979")]
    public string? Android_pictureIo_homeassistant_companion_android2015647979 { get; init; }

    [JsonPropertyName("android.picture_io.homeassistant.companion.android_-2015696111")]
    public string? Android_pictureIo_homeassistant_companion_android2015696111 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.google.android.apps.maps_0")]
    public bool? Android_progressIndeterminateCom_google_android_apps_maps0 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_io.homeassistant.companion.android_-2014791649")]
    public bool? Android_progressIndeterminateIo_homeassistant_companion_android2014791649 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_io.homeassistant.companion.android_-2015647979")]
    public bool? Android_progressIndeterminateIo_homeassistant_companion_android2015647979 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_io.homeassistant.companion.android_-2015696111")]
    public bool? Android_progressIndeterminateIo_homeassistant_companion_android2015696111 { get; init; }

    [JsonPropertyName("android.progressMax_com.google.android.apps.maps_0")]
    public double? Android_progressMaxCom_google_android_apps_maps0 { get; init; }

    [JsonPropertyName("android.progressMax_io.homeassistant.companion.android_-2014791649")]
    public double? Android_progressMaxIo_homeassistant_companion_android2014791649 { get; init; }

    [JsonPropertyName("android.progressMax_io.homeassistant.companion.android_-2015647979")]
    public double? Android_progressMaxIo_homeassistant_companion_android2015647979 { get; init; }

    [JsonPropertyName("android.progressMax_io.homeassistant.companion.android_-2015696111")]
    public double? Android_progressMaxIo_homeassistant_companion_android2015696111 { get; init; }

    [JsonPropertyName("android.progress_com.google.android.apps.maps_0")]
    public double? Android_progressCom_google_android_apps_maps0 { get; init; }

    [JsonPropertyName("android.progress_io.homeassistant.companion.android_-2014791649")]
    public double? Android_progressIo_homeassistant_companion_android2014791649 { get; init; }

    [JsonPropertyName("android.progress_io.homeassistant.companion.android_-2015647979")]
    public double? Android_progressIo_homeassistant_companion_android2015647979 { get; init; }

    [JsonPropertyName("android.progress_io.homeassistant.companion.android_-2015696111")]
    public double? Android_progressIo_homeassistant_companion_android2015696111 { get; init; }

    [JsonPropertyName("android.reduced.images_com.google.android.apps.maps_0")]
    public bool? Android_reduced_imagesCom_google_android_apps_maps0 { get; init; }

    [JsonPropertyName("android.reduced.images_io.homeassistant.companion.android_-2014791649")]
    public bool? Android_reduced_imagesIo_homeassistant_companion_android2014791649 { get; init; }

    [JsonPropertyName("android.reduced.images_io.homeassistant.companion.android_-2015647979")]
    public bool? Android_reduced_imagesIo_homeassistant_companion_android2015647979 { get; init; }

    [JsonPropertyName("android.reduced.images_io.homeassistant.companion.android_-2015696111")]
    public bool? Android_reduced_imagesIo_homeassistant_companion_android2015696111 { get; init; }

    [JsonPropertyName("android.reduced.images_io.homeassistant.companion.android_2147483647")]
    public bool? Android_reduced_imagesIo_homeassistant_companion_android2147483647 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.google.android.apps.maps_0")]
    public string? Android_remoteInputHistoryCom_google_android_apps_maps0 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_io.homeassistant.companion.android_-2014791649")]
    public string? Android_remoteInputHistoryIo_homeassistant_companion_android2014791649 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_io.homeassistant.companion.android_-2015647979")]
    public string? Android_remoteInputHistoryIo_homeassistant_companion_android2015647979 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_io.homeassistant.companion.android_-2015696111")]
    public string? Android_remoteInputHistoryIo_homeassistant_companion_android2015696111 { get; init; }

    [JsonPropertyName("android.showBigPictureWhenCollapsed_io.homeassistant.companion.android_-2014791649")]
    public bool? Android_showBigPictureWhenCollapsedIo_homeassistant_companion_android2014791649 { get; init; }

    [JsonPropertyName("android.showBigPictureWhenCollapsed_io.homeassistant.companion.android_-2015647979")]
    public bool? Android_showBigPictureWhenCollapsedIo_homeassistant_companion_android2015647979 { get; init; }

    [JsonPropertyName("android.showBigPictureWhenCollapsed_io.homeassistant.companion.android_-2015696111")]
    public bool? Android_showBigPictureWhenCollapsedIo_homeassistant_companion_android2015696111 { get; init; }

    [JsonPropertyName("android.showChronometer_com.google.android.apps.maps_0")]
    public bool? Android_showChronometerCom_google_android_apps_maps0 { get; init; }

    [JsonPropertyName("android.showChronometer_io.homeassistant.companion.android_-2014791649")]
    public bool? Android_showChronometerIo_homeassistant_companion_android2014791649 { get; init; }

    [JsonPropertyName("android.showChronometer_io.homeassistant.companion.android_-2015647979")]
    public bool? Android_showChronometerIo_homeassistant_companion_android2015647979 { get; init; }

    [JsonPropertyName("android.showChronometer_io.homeassistant.companion.android_-2015696111")]
    public bool? Android_showChronometerIo_homeassistant_companion_android2015696111 { get; init; }

    [JsonPropertyName("android.showWhen_com.google.android.apps.maps_0")]
    public bool? Android_showWhenCom_google_android_apps_maps0 { get; init; }

    [JsonPropertyName("android.showWhen_io.homeassistant.companion.android_-2014791649")]
    public bool? Android_showWhenIo_homeassistant_companion_android2014791649 { get; init; }

    [JsonPropertyName("android.showWhen_io.homeassistant.companion.android_-2015647979")]
    public bool? Android_showWhenIo_homeassistant_companion_android2015647979 { get; init; }

    [JsonPropertyName("android.showWhen_io.homeassistant.companion.android_-2015696111")]
    public bool? Android_showWhenIo_homeassistant_companion_android2015696111 { get; init; }

    [JsonPropertyName("android.subText_com.google.android.apps.maps_0")]
    public string? Android_subTextCom_google_android_apps_maps0 { get; init; }

    [JsonPropertyName("android.subText_io.homeassistant.companion.android_-2014791649")]
    public string? Android_subTextIo_homeassistant_companion_android2014791649 { get; init; }

    [JsonPropertyName("android.subText_io.homeassistant.companion.android_-2015647979")]
    public string? Android_subTextIo_homeassistant_companion_android2015647979 { get; init; }

    [JsonPropertyName("android.subText_io.homeassistant.companion.android_-2015696111")]
    public string? Android_subTextIo_homeassistant_companion_android2015696111 { get; init; }

    [JsonPropertyName("android.support.v4.app.extra.COMPAT_TEMPLATE_com.google.android.apps.maps_0")]
    public string? Android_support_v4_app_extra_COMPATTEMPLATECom_google_android_apps_maps0 { get; init; }

    [JsonPropertyName("android.template_com.google.android.apps.maps_0")]
    public string? Android_templateCom_google_android_apps_maps0 { get; init; }

    [JsonPropertyName("android.template_io.homeassistant.companion.android_-2014791649")]
    public string? Android_templateIo_homeassistant_companion_android2014791649 { get; init; }

    [JsonPropertyName("android.template_io.homeassistant.companion.android_-2015647979")]
    public string? Android_templateIo_homeassistant_companion_android2015647979 { get; init; }

    [JsonPropertyName("android.template_io.homeassistant.companion.android_-2015696111")]
    public string? Android_templateIo_homeassistant_companion_android2015696111 { get; init; }

    [JsonPropertyName("android.text_com.google.android.apps.maps_0")]
    public string? Android_textCom_google_android_apps_maps0 { get; init; }

    [JsonPropertyName("android.text_io.homeassistant.companion.android_-2014791649")]
    public string? Android_textIo_homeassistant_companion_android2014791649 { get; init; }

    [JsonPropertyName("android.text_io.homeassistant.companion.android_-2015647979")]
    public string? Android_textIo_homeassistant_companion_android2015647979 { get; init; }

    [JsonPropertyName("android.text_io.homeassistant.companion.android_-2015696111")]
    public string? Android_textIo_homeassistant_companion_android2015696111 { get; init; }

    [JsonPropertyName("android.title.big_com.google.android.apps.maps_0")]
    public string? Android_title_bigCom_google_android_apps_maps0 { get; init; }

    [JsonPropertyName("android.title_com.google.android.apps.maps_0")]
    public string? Android_titleCom_google_android_apps_maps0 { get; init; }

    [JsonPropertyName("android.title_io.homeassistant.companion.android_-2014791649")]
    public string? Android_titleIo_homeassistant_companion_android2014791649 { get; init; }

    [JsonPropertyName("android.title_io.homeassistant.companion.android_-2015647979")]
    public string? Android_titleIo_homeassistant_companion_android2015647979 { get; init; }

    [JsonPropertyName("android.title_io.homeassistant.companion.android_-2015696111")]
    public string? Android_titleIo_homeassistant_companion_android2015696111 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_io.homeassistant.companion.android_-2014791649")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEIo_homeassistant_companion_android2014791649 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_io.homeassistant.companion.android_-2015647979")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEIo_homeassistant_companion_android2015647979 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_io.homeassistant.companion.android_-2015696111")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEIo_homeassistant_companion_android2015696111 { get; init; }

    [JsonPropertyName("com.google.android.apps.maps_0_category")]
    public string? Com_google_android_apps_maps0Category { get; init; }

    [JsonPropertyName("com.google.android.apps.maps_0_channel_id")]
    public string? Com_google_android_apps_maps0ChannelId { get; init; }

    [JsonPropertyName("com.google.android.apps.maps_0_group_id")]
    public string? Com_google_android_apps_maps0GroupId { get; init; }

    [JsonPropertyName("com.google.android.apps.maps_0_is_clearable")]
    public bool? Com_google_android_apps_maps0IsClearable { get; init; }

    [JsonPropertyName("com.google.android.apps.maps_0_is_ongoing")]
    public bool? Com_google_android_apps_maps0IsOngoing { get; init; }

    [JsonPropertyName("com.google.android.apps.maps_0_post_time")]
    public double? Com_google_android_apps_maps0PostTime { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-2014791649_category")]
    public string? Io_homeassistant_companion_android2014791649Category { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-2014791649_channel_id")]
    public string? Io_homeassistant_companion_android2014791649ChannelId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-2014791649_group_id")]
    public string? Io_homeassistant_companion_android2014791649GroupId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-2014791649_is_clearable")]
    public bool? Io_homeassistant_companion_android2014791649IsClearable { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-2014791649_is_ongoing")]
    public bool? Io_homeassistant_companion_android2014791649IsOngoing { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-2014791649_post_time")]
    public double? Io_homeassistant_companion_android2014791649PostTime { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-2015647979_category")]
    public string? Io_homeassistant_companion_android2015647979Category { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-2015647979_channel_id")]
    public string? Io_homeassistant_companion_android2015647979ChannelId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-2015647979_group_id")]
    public string? Io_homeassistant_companion_android2015647979GroupId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-2015647979_is_clearable")]
    public bool? Io_homeassistant_companion_android2015647979IsClearable { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-2015647979_is_ongoing")]
    public bool? Io_homeassistant_companion_android2015647979IsOngoing { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-2015647979_post_time")]
    public double? Io_homeassistant_companion_android2015647979PostTime { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-2015696111_category")]
    public string? Io_homeassistant_companion_android2015696111Category { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-2015696111_channel_id")]
    public string? Io_homeassistant_companion_android2015696111ChannelId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-2015696111_group_id")]
    public string? Io_homeassistant_companion_android2015696111GroupId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-2015696111_is_clearable")]
    public bool? Io_homeassistant_companion_android2015696111IsClearable { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-2015696111_is_ongoing")]
    public bool? Io_homeassistant_companion_android2015696111IsOngoing { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-2015696111_post_time")]
    public double? Io_homeassistant_companion_android2015696111PostTime { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_2147483647_category")]
    public string? Io_homeassistant_companion_android2147483647Category { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_2147483647_channel_id")]
    public string? Io_homeassistant_companion_android2147483647ChannelId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_2147483647_group_id")]
    public string? Io_homeassistant_companion_android2147483647GroupId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_2147483647_is_clearable")]
    public bool? Io_homeassistant_companion_android2147483647IsClearable { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_2147483647_is_ongoing")]
    public bool? Io_homeassistant_companion_android2147483647IsOngoing { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_2147483647_post_time")]
    public double? Io_homeassistant_companion_android2147483647PostTime { get; init; }

    [JsonPropertyName("marker_high_level")]
    public double? MarkerHighLevel { get; init; }

    [JsonPropertyName("marker_low_level")]
    public double? MarkerLowLevel { get; init; }

    [JsonPropertyName("marker_type")]
    public string? MarkerType { get; init; }

    [JsonPropertyName("android.appInfo_com.amazon.mShop.android.shopping_3")]
    public string? Android_appInfoCom_amazon_mShop_android_shopping3 { get; init; }

    [JsonPropertyName("android.largeIcon.big_com.amazon.mShop.android.shopping_3")]
    public string? Android_largeIcon_bigCom_amazon_mShop_android_shopping3 { get; init; }

    [JsonPropertyName("android.largeIcon_com.amazon.mShop.android.shopping_3")]
    public string? Android_largeIconCom_amazon_mShop_android_shopping3 { get; init; }

    [JsonPropertyName("android.pictureIcon_com.amazon.mShop.android.shopping_3")]
    public string? Android_pictureIconCom_amazon_mShop_android_shopping3 { get; init; }

    [JsonPropertyName("android.picture_com.amazon.mShop.android.shopping_3")]
    public string? Android_pictureCom_amazon_mShop_android_shopping3 { get; init; }

    [JsonPropertyName("android.reduced.images_com.amazon.mShop.android.shopping_3")]
    public bool? Android_reduced_imagesCom_amazon_mShop_android_shopping3 { get; init; }

    [JsonPropertyName("android.showBigPictureWhenCollapsed_com.amazon.mShop.android.shopping_3")]
    public bool? Android_showBigPictureWhenCollapsedCom_amazon_mShop_android_shopping3 { get; init; }

    [JsonPropertyName("android.subText_com.amazon.mShop.android.shopping_3")]
    public string? Android_subTextCom_amazon_mShop_android_shopping3 { get; init; }

    [JsonPropertyName("android.summaryText_com.amazon.mShop.android.shopping_3")]
    public string? Android_summaryTextCom_amazon_mShop_android_shopping3 { get; init; }

    [JsonPropertyName("android.template_com.amazon.mShop.android.shopping_3")]
    public string? Android_templateCom_amazon_mShop_android_shopping3 { get; init; }

    [JsonPropertyName("android.text_com.amazon.mShop.android.shopping_3")]
    public string? Android_textCom_amazon_mShop_android_shopping3 { get; init; }

    [JsonPropertyName("android.title.big_com.amazon.mShop.android.shopping_3")]
    public string? Android_title_bigCom_amazon_mShop_android_shopping3 { get; init; }

    [JsonPropertyName("android.title_com.amazon.mShop.android.shopping_3")]
    public string? Android_titleCom_amazon_mShop_android_shopping3 { get; init; }

    [JsonPropertyName("com.amazon.mShop.android.shopping_3_category")]
    public string? Com_amazon_mShop_android_shopping3Category { get; init; }

    [JsonPropertyName("com.amazon.mShop.android.shopping_3_channel_id")]
    public string? Com_amazon_mShop_android_shopping3ChannelId { get; init; }

    [JsonPropertyName("com.amazon.mShop.android.shopping_3_group_id")]
    public string? Com_amazon_mShop_android_shopping3GroupId { get; init; }

    [JsonPropertyName("com.amazon.mShop.android.shopping_3_is_clearable")]
    public bool? Com_amazon_mShop_android_shopping3IsClearable { get; init; }

    [JsonPropertyName("com.amazon.mShop.android.shopping_3_is_ongoing")]
    public bool? Com_amazon_mShop_android_shopping3IsOngoing { get; init; }

    [JsonPropertyName("com.amazon.mShop.android.shopping_3_post_time")]
    public double? Com_amazon_mShop_android_shopping3PostTime { get; init; }

    [JsonPropertyName("android.appInfo_io.homeassistant.companion.android_-1491080574")]
    public string? Android_appInfoIo_homeassistant_companion_android1491080574 { get; init; }

    [JsonPropertyName("android.infoText_io.homeassistant.companion.android_-1491080574")]
    public string? Android_infoTextIo_homeassistant_companion_android1491080574 { get; init; }

    [JsonPropertyName("android.largeIcon.big_io.homeassistant.companion.android_-1491080574")]
    public string? Android_largeIcon_bigIo_homeassistant_companion_android1491080574 { get; init; }

    [JsonPropertyName("android.largeIcon_io.homeassistant.companion.android_-1491080574")]
    public string? Android_largeIconIo_homeassistant_companion_android1491080574 { get; init; }

    [JsonPropertyName("android.pictureIcon_io.homeassistant.companion.android_-1491080574")]
    public string? Android_pictureIconIo_homeassistant_companion_android1491080574 { get; init; }

    [JsonPropertyName("android.picture_io.homeassistant.companion.android_-1491080574")]
    public string? Android_pictureIo_homeassistant_companion_android1491080574 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_io.homeassistant.companion.android_-1491080574")]
    public bool? Android_progressIndeterminateIo_homeassistant_companion_android1491080574 { get; init; }

    [JsonPropertyName("android.progressMax_io.homeassistant.companion.android_-1491080574")]
    public double? Android_progressMaxIo_homeassistant_companion_android1491080574 { get; init; }

    [JsonPropertyName("android.progress_io.homeassistant.companion.android_-1491080574")]
    public double? Android_progressIo_homeassistant_companion_android1491080574 { get; init; }

    [JsonPropertyName("android.reduced.images_io.homeassistant.companion.android_-1491080574")]
    public bool? Android_reduced_imagesIo_homeassistant_companion_android1491080574 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_io.homeassistant.companion.android_-1491080574")]
    public string? Android_remoteInputHistoryIo_homeassistant_companion_android1491080574 { get; init; }

    [JsonPropertyName("android.showBigPictureWhenCollapsed_io.homeassistant.companion.android_-1491080574")]
    public bool? Android_showBigPictureWhenCollapsedIo_homeassistant_companion_android1491080574 { get; init; }

    [JsonPropertyName("android.showChronometer_io.homeassistant.companion.android_-1491080574")]
    public bool? Android_showChronometerIo_homeassistant_companion_android1491080574 { get; init; }

    [JsonPropertyName("android.showWhen_io.homeassistant.companion.android_-1491080574")]
    public bool? Android_showWhenIo_homeassistant_companion_android1491080574 { get; init; }

    [JsonPropertyName("android.subText_io.homeassistant.companion.android_-1491080574")]
    public string? Android_subTextIo_homeassistant_companion_android1491080574 { get; init; }

    [JsonPropertyName("android.template_io.homeassistant.companion.android_-1491080574")]
    public string? Android_templateIo_homeassistant_companion_android1491080574 { get; init; }

    [JsonPropertyName("android.text_io.homeassistant.companion.android_-1491080574")]
    public string? Android_textIo_homeassistant_companion_android1491080574 { get; init; }

    [JsonPropertyName("android.title_io.homeassistant.companion.android_-1491080574")]
    public string? Android_titleIo_homeassistant_companion_android1491080574 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_io.homeassistant.companion.android_-1491080574")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEIo_homeassistant_companion_android1491080574 { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1491080574_category")]
    public string? Io_homeassistant_companion_android1491080574Category { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1491080574_channel_id")]
    public string? Io_homeassistant_companion_android1491080574ChannelId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1491080574_group_id")]
    public string? Io_homeassistant_companion_android1491080574GroupId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1491080574_is_clearable")]
    public bool? Io_homeassistant_companion_android1491080574IsClearable { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1491080574_is_ongoing")]
    public bool? Io_homeassistant_companion_android1491080574IsOngoing { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1491080574_post_time")]
    public double? Io_homeassistant_companion_android1491080574PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.amazon.mShop.android.shopping_1")]
    public string? Android_appInfoCom_amazon_mShop_android_shopping1 { get; init; }

    [JsonPropertyName("android.largeIcon.big_com.amazon.mShop.android.shopping_1")]
    public string? Android_largeIcon_bigCom_amazon_mShop_android_shopping1 { get; init; }

    [JsonPropertyName("android.largeIcon_com.amazon.mShop.android.shopping_1")]
    public string? Android_largeIconCom_amazon_mShop_android_shopping1 { get; init; }

    [JsonPropertyName("android.pictureIcon_com.amazon.mShop.android.shopping_1")]
    public string? Android_pictureIconCom_amazon_mShop_android_shopping1 { get; init; }

    [JsonPropertyName("android.picture_com.amazon.mShop.android.shopping_1")]
    public string? Android_pictureCom_amazon_mShop_android_shopping1 { get; init; }

    [JsonPropertyName("android.reduced.images_com.amazon.mShop.android.shopping_1")]
    public bool? Android_reduced_imagesCom_amazon_mShop_android_shopping1 { get; init; }

    [JsonPropertyName("android.showBigPictureWhenCollapsed_com.amazon.mShop.android.shopping_1")]
    public bool? Android_showBigPictureWhenCollapsedCom_amazon_mShop_android_shopping1 { get; init; }

    [JsonPropertyName("android.subText_com.amazon.mShop.android.shopping_1")]
    public string? Android_subTextCom_amazon_mShop_android_shopping1 { get; init; }

    [JsonPropertyName("android.summaryText_com.amazon.mShop.android.shopping_1")]
    public string? Android_summaryTextCom_amazon_mShop_android_shopping1 { get; init; }

    [JsonPropertyName("android.template_com.amazon.mShop.android.shopping_1")]
    public string? Android_templateCom_amazon_mShop_android_shopping1 { get; init; }

    [JsonPropertyName("android.text_com.amazon.mShop.android.shopping_1")]
    public string? Android_textCom_amazon_mShop_android_shopping1 { get; init; }

    [JsonPropertyName("android.title.big_com.amazon.mShop.android.shopping_1")]
    public string? Android_title_bigCom_amazon_mShop_android_shopping1 { get; init; }

    [JsonPropertyName("android.title_com.amazon.mShop.android.shopping_1")]
    public string? Android_titleCom_amazon_mShop_android_shopping1 { get; init; }

    [JsonPropertyName("com.amazon.mShop.android.shopping_1_category")]
    public string? Com_amazon_mShop_android_shopping1Category { get; init; }

    [JsonPropertyName("com.amazon.mShop.android.shopping_1_channel_id")]
    public string? Com_amazon_mShop_android_shopping1ChannelId { get; init; }

    [JsonPropertyName("com.amazon.mShop.android.shopping_1_group_id")]
    public string? Com_amazon_mShop_android_shopping1GroupId { get; init; }

    [JsonPropertyName("com.amazon.mShop.android.shopping_1_is_clearable")]
    public bool? Com_amazon_mShop_android_shopping1IsClearable { get; init; }

    [JsonPropertyName("com.amazon.mShop.android.shopping_1_is_ongoing")]
    public bool? Com_amazon_mShop_android_shopping1IsOngoing { get; init; }

    [JsonPropertyName("com.amazon.mShop.android.shopping_1_post_time")]
    public double? Com_amazon_mShop_android_shopping1PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.ebay.mobile_1165149517")]
    public string? Android_appInfoCom_ebay_mobile1165149517 { get; init; }

    [JsonPropertyName("android.appInfo_com.ebay.mobile_1520376094")]
    public string? Android_appInfoCom_ebay_mobile1520376094 { get; init; }

    [JsonPropertyName("android.appInfo_com.ebay.mobile_2147483647")]
    public string? Android_appInfoCom_ebay_mobile2147483647 { get; init; }

    [JsonPropertyName("android.bigText_com.ebay.mobile_1165149517")]
    public string? Android_bigTextCom_ebay_mobile1165149517 { get; init; }

    [JsonPropertyName("android.infoText_com.ebay.mobile_1165149517")]
    public string? Android_infoTextCom_ebay_mobile1165149517 { get; init; }

    [JsonPropertyName("android.infoText_com.ebay.mobile_1520376094")]
    public string? Android_infoTextCom_ebay_mobile1520376094 { get; init; }

    [JsonPropertyName("android.largeIcon.big_com.ebay.mobile_1520376094")]
    public string? Android_largeIcon_bigCom_ebay_mobile1520376094 { get; init; }

    [JsonPropertyName("android.largeIcon_com.ebay.mobile_1165149517")]
    public string? Android_largeIconCom_ebay_mobile1165149517 { get; init; }

    [JsonPropertyName("android.largeIcon_com.ebay.mobile_1520376094")]
    public string? Android_largeIconCom_ebay_mobile1520376094 { get; init; }

    [JsonPropertyName("android.pictureIcon_com.ebay.mobile_1520376094")]
    public string? Android_pictureIconCom_ebay_mobile1520376094 { get; init; }

    [JsonPropertyName("android.picture_com.ebay.mobile_1520376094")]
    public string? Android_pictureCom_ebay_mobile1520376094 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.ebay.mobile_1165149517")]
    public bool? Android_progressIndeterminateCom_ebay_mobile1165149517 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.ebay.mobile_1520376094")]
    public bool? Android_progressIndeterminateCom_ebay_mobile1520376094 { get; init; }

    [JsonPropertyName("android.progressMax_com.ebay.mobile_1165149517")]
    public double? Android_progressMaxCom_ebay_mobile1165149517 { get; init; }

    [JsonPropertyName("android.progressMax_com.ebay.mobile_1520376094")]
    public double? Android_progressMaxCom_ebay_mobile1520376094 { get; init; }

    [JsonPropertyName("android.progress_com.ebay.mobile_1165149517")]
    public double? Android_progressCom_ebay_mobile1165149517 { get; init; }

    [JsonPropertyName("android.progress_com.ebay.mobile_1520376094")]
    public double? Android_progressCom_ebay_mobile1520376094 { get; init; }

    [JsonPropertyName("android.reduced.images_com.ebay.mobile_1165149517")]
    public bool? Android_reduced_imagesCom_ebay_mobile1165149517 { get; init; }

    [JsonPropertyName("android.reduced.images_com.ebay.mobile_1520376094")]
    public bool? Android_reduced_imagesCom_ebay_mobile1520376094 { get; init; }

    [JsonPropertyName("android.reduced.images_com.ebay.mobile_2147483647")]
    public bool? Android_reduced_imagesCom_ebay_mobile2147483647 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.ebay.mobile_1165149517")]
    public string? Android_remoteInputHistoryCom_ebay_mobile1165149517 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.ebay.mobile_1520376094")]
    public string? Android_remoteInputHistoryCom_ebay_mobile1520376094 { get; init; }

    [JsonPropertyName("android.showBigPictureWhenCollapsed_com.ebay.mobile_1520376094")]
    public bool? Android_showBigPictureWhenCollapsedCom_ebay_mobile1520376094 { get; init; }

    [JsonPropertyName("android.showChronometer_com.ebay.mobile_1165149517")]
    public bool? Android_showChronometerCom_ebay_mobile1165149517 { get; init; }

    [JsonPropertyName("android.showChronometer_com.ebay.mobile_1520376094")]
    public bool? Android_showChronometerCom_ebay_mobile1520376094 { get; init; }

    [JsonPropertyName("android.showWhen_com.ebay.mobile_1165149517")]
    public bool? Android_showWhenCom_ebay_mobile1165149517 { get; init; }

    [JsonPropertyName("android.showWhen_com.ebay.mobile_1520376094")]
    public bool? Android_showWhenCom_ebay_mobile1520376094 { get; init; }

    [JsonPropertyName("android.subText_com.ebay.mobile_1165149517")]
    public string? Android_subTextCom_ebay_mobile1165149517 { get; init; }

    [JsonPropertyName("android.subText_com.ebay.mobile_1520376094")]
    public string? Android_subTextCom_ebay_mobile1520376094 { get; init; }

    [JsonPropertyName("android.template_com.ebay.mobile_1165149517")]
    public string? Android_templateCom_ebay_mobile1165149517 { get; init; }

    [JsonPropertyName("android.template_com.ebay.mobile_1520376094")]
    public string? Android_templateCom_ebay_mobile1520376094 { get; init; }

    [JsonPropertyName("android.text_com.ebay.mobile_1165149517")]
    public string? Android_textCom_ebay_mobile1165149517 { get; init; }

    [JsonPropertyName("android.text_com.ebay.mobile_1520376094")]
    public string? Android_textCom_ebay_mobile1520376094 { get; init; }

    [JsonPropertyName("android.title_com.ebay.mobile_1165149517")]
    public string? Android_titleCom_ebay_mobile1165149517 { get; init; }

    [JsonPropertyName("android.title_com.ebay.mobile_1520376094")]
    public string? Android_titleCom_ebay_mobile1520376094 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.ebay.mobile_1165149517")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_ebay_mobile1165149517 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.ebay.mobile_1520376094")]
    public string? Androidx_core_app_extra_COMPATTEMPLATECom_ebay_mobile1520376094 { get; init; }

    [JsonPropertyName("com.ebay.mobile_1165149517_category")]
    public string? Com_ebay_mobile1165149517Category { get; init; }

    [JsonPropertyName("com.ebay.mobile_1165149517_channel_id")]
    public string? Com_ebay_mobile1165149517ChannelId { get; init; }

    [JsonPropertyName("com.ebay.mobile_1165149517_group_id")]
    public string? Com_ebay_mobile1165149517GroupId { get; init; }

    [JsonPropertyName("com.ebay.mobile_1165149517_is_clearable")]
    public bool? Com_ebay_mobile1165149517IsClearable { get; init; }

    [JsonPropertyName("com.ebay.mobile_1165149517_is_ongoing")]
    public bool? Com_ebay_mobile1165149517IsOngoing { get; init; }

    [JsonPropertyName("com.ebay.mobile_1165149517_post_time")]
    public double? Com_ebay_mobile1165149517PostTime { get; init; }

    [JsonPropertyName("com.ebay.mobile_1520376094_category")]
    public string? Com_ebay_mobile1520376094Category { get; init; }

    [JsonPropertyName("com.ebay.mobile_1520376094_channel_id")]
    public string? Com_ebay_mobile1520376094ChannelId { get; init; }

    [JsonPropertyName("com.ebay.mobile_1520376094_group_id")]
    public string? Com_ebay_mobile1520376094GroupId { get; init; }

    [JsonPropertyName("com.ebay.mobile_1520376094_is_clearable")]
    public bool? Com_ebay_mobile1520376094IsClearable { get; init; }

    [JsonPropertyName("com.ebay.mobile_1520376094_is_ongoing")]
    public bool? Com_ebay_mobile1520376094IsOngoing { get; init; }

    [JsonPropertyName("com.ebay.mobile_1520376094_post_time")]
    public double? Com_ebay_mobile1520376094PostTime { get; init; }

    [JsonPropertyName("com.ebay.mobile_2147483647_category")]
    public string? Com_ebay_mobile2147483647Category { get; init; }

    [JsonPropertyName("com.ebay.mobile_2147483647_channel_id")]
    public string? Com_ebay_mobile2147483647ChannelId { get; init; }

    [JsonPropertyName("com.ebay.mobile_2147483647_group_id")]
    public string? Com_ebay_mobile2147483647GroupId { get; init; }

    [JsonPropertyName("com.ebay.mobile_2147483647_is_clearable")]
    public bool? Com_ebay_mobile2147483647IsClearable { get; init; }

    [JsonPropertyName("com.ebay.mobile_2147483647_is_ongoing")]
    public bool? Com_ebay_mobile2147483647IsOngoing { get; init; }

    [JsonPropertyName("com.ebay.mobile_2147483647_post_time")]
    public double? Com_ebay_mobile2147483647PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.google.android.dialer_1")]
    public string? Android_appInfoCom_google_android_dialer1 { get; init; }

    [JsonPropertyName("android.callIsVideo_com.google.android.dialer_1")]
    public bool? Android_callIsVideoCom_google_android_dialer1 { get; init; }

    [JsonPropertyName("android.callPerson_com.google.android.dialer_1")]
    public string? Android_callPersonCom_google_android_dialer1 { get; init; }

    [JsonPropertyName("android.callType_com.google.android.dialer_1")]
    public double? Android_callTypeCom_google_android_dialer1 { get; init; }

    [JsonPropertyName("android.colorized_com.google.android.dialer_1")]
    public bool? Android_colorizedCom_google_android_dialer1 { get; init; }

    [JsonPropertyName("android.hangUpIntent_com.google.android.dialer_1")]
    public string? Android_hangUpIntentCom_google_android_dialer1 { get; init; }

    [JsonPropertyName("android.largeIcon_com.google.android.dialer_1")]
    public string? Android_largeIconCom_google_android_dialer1 { get; init; }

    [JsonPropertyName("android.people.list_com.google.android.dialer_1")]
    public IReadOnlyList<string>? Android_people_listCom_google_android_dialer1 { get; init; }

    [JsonPropertyName("android.reduced.images_com.google.android.dialer_1")]
    public bool? Android_reduced_imagesCom_google_android_dialer1 { get; init; }

    [JsonPropertyName("android.showChronometer_com.google.android.dialer_1")]
    public bool? Android_showChronometerCom_google_android_dialer1 { get; init; }

    [JsonPropertyName("android.template_com.google.android.dialer_1")]
    public string? Android_templateCom_google_android_dialer1 { get; init; }

    [JsonPropertyName("android.text_com.google.android.dialer_1")]
    public string? Android_textCom_google_android_dialer1 { get; init; }

    [JsonPropertyName("android.title_com.google.android.dialer_1")]
    public string? Android_titleCom_google_android_dialer1 { get; init; }

    [JsonPropertyName("com.google.android.dialer_1_category")]
    public string? Com_google_android_dialer1Category { get; init; }

    [JsonPropertyName("com.google.android.dialer_1_channel_id")]
    public string? Com_google_android_dialer1ChannelId { get; init; }

    [JsonPropertyName("com.google.android.dialer_1_group_id")]
    public string? Com_google_android_dialer1GroupId { get; init; }

    [JsonPropertyName("com.google.android.dialer_1_is_clearable")]
    public bool? Com_google_android_dialer1IsClearable { get; init; }

    [JsonPropertyName("com.google.android.dialer_1_is_ongoing")]
    public bool? Com_google_android_dialer1IsOngoing { get; init; }

    [JsonPropertyName("com.google.android.dialer_1_post_time")]
    public double? Com_google_android_dialer1PostTime { get; init; }

    [JsonPropertyName("is_incomplete_calculation")]
    public object? IsIncompleteCalculation { get; init; }

    [JsonPropertyName("consumption_items")]
    public object? ConsumptionItems { get; init; }

    [JsonPropertyName("total_baseline")]
    public object? TotalBaseline { get; init; }

    [JsonPropertyName("baselines")]
    public object? Baselines { get; init; }

    [JsonPropertyName("android.appInfo_com.google.android.apps.walletnfcrel_1001")]
    public string? Android_appInfoCom_google_android_apps_walletnfcrel1001 { get; init; }

    [JsonPropertyName("android.appInfo_io.homeassistant.companion.android_-1235714175")]
    public string? Android_appInfoIo_homeassistant_companion_android1235714175 { get; init; }

    [JsonPropertyName("android.appInfo_io.homeassistant.companion.android_-1235721596")]
    public string? Android_appInfoIo_homeassistant_companion_android1235721596 { get; init; }

    [JsonPropertyName("android.appInfo_io.homeassistant.companion.android_-1235803350")]
    public string? Android_appInfoIo_homeassistant_companion_android1235803350 { get; init; }

    [JsonPropertyName("android.appInfo_io.homeassistant.companion.android_-1236111906")]
    public string? Android_appInfoIo_homeassistant_companion_android1236111906 { get; init; }

    [JsonPropertyName("android.infoText_com.google.android.apps.walletnfcrel_1001")]
    public string? Android_infoTextCom_google_android_apps_walletnfcrel1001 { get; init; }

    [JsonPropertyName("android.infoText_io.homeassistant.companion.android_-1235714175")]
    public string? Android_infoTextIo_homeassistant_companion_android1235714175 { get; init; }

    [JsonPropertyName("android.infoText_io.homeassistant.companion.android_-1235721596")]
    public string? Android_infoTextIo_homeassistant_companion_android1235721596 { get; init; }

    [JsonPropertyName("android.infoText_io.homeassistant.companion.android_-1235803350")]
    public string? Android_infoTextIo_homeassistant_companion_android1235803350 { get; init; }

    [JsonPropertyName("android.infoText_io.homeassistant.companion.android_-1236111906")]
    public string? Android_infoTextIo_homeassistant_companion_android1236111906 { get; init; }

    [JsonPropertyName("android.largeIcon.big_io.homeassistant.companion.android_-1235714175")]
    public string? Android_largeIcon_bigIo_homeassistant_companion_android1235714175 { get; init; }

    [JsonPropertyName("android.largeIcon.big_io.homeassistant.companion.android_-1235721596")]
    public string? Android_largeIcon_bigIo_homeassistant_companion_android1235721596 { get; init; }

    [JsonPropertyName("android.largeIcon.big_io.homeassistant.companion.android_-1235803350")]
    public string? Android_largeIcon_bigIo_homeassistant_companion_android1235803350 { get; init; }

    [JsonPropertyName("android.largeIcon.big_io.homeassistant.companion.android_-1236111906")]
    public string? Android_largeIcon_bigIo_homeassistant_companion_android1236111906 { get; init; }

    [JsonPropertyName("android.largeIcon_com.google.android.apps.walletnfcrel_1001")]
    public string? Android_largeIconCom_google_android_apps_walletnfcrel1001 { get; init; }

    [JsonPropertyName("android.largeIcon_io.homeassistant.companion.android_-1235714175")]
    public string? Android_largeIconIo_homeassistant_companion_android1235714175 { get; init; }

    [JsonPropertyName("android.largeIcon_io.homeassistant.companion.android_-1235721596")]
    public string? Android_largeIconIo_homeassistant_companion_android1235721596 { get; init; }

    [JsonPropertyName("android.largeIcon_io.homeassistant.companion.android_-1235803350")]
    public string? Android_largeIconIo_homeassistant_companion_android1235803350 { get; init; }

    [JsonPropertyName("android.largeIcon_io.homeassistant.companion.android_-1236111906")]
    public string? Android_largeIconIo_homeassistant_companion_android1236111906 { get; init; }

    [JsonPropertyName("android.pictureIcon_io.homeassistant.companion.android_-1235714175")]
    public string? Android_pictureIconIo_homeassistant_companion_android1235714175 { get; init; }

    [JsonPropertyName("android.pictureIcon_io.homeassistant.companion.android_-1235721596")]
    public string? Android_pictureIconIo_homeassistant_companion_android1235721596 { get; init; }

    [JsonPropertyName("android.pictureIcon_io.homeassistant.companion.android_-1235803350")]
    public string? Android_pictureIconIo_homeassistant_companion_android1235803350 { get; init; }

    [JsonPropertyName("android.pictureIcon_io.homeassistant.companion.android_-1236111906")]
    public string? Android_pictureIconIo_homeassistant_companion_android1236111906 { get; init; }

    [JsonPropertyName("android.picture_io.homeassistant.companion.android_-1235714175")]
    public string? Android_pictureIo_homeassistant_companion_android1235714175 { get; init; }

    [JsonPropertyName("android.picture_io.homeassistant.companion.android_-1235721596")]
    public string? Android_pictureIo_homeassistant_companion_android1235721596 { get; init; }

    [JsonPropertyName("android.picture_io.homeassistant.companion.android_-1235803350")]
    public string? Android_pictureIo_homeassistant_companion_android1235803350 { get; init; }

    [JsonPropertyName("android.picture_io.homeassistant.companion.android_-1236111906")]
    public string? Android_pictureIo_homeassistant_companion_android1236111906 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.google.android.apps.walletnfcrel_1001")]
    public bool? Android_progressIndeterminateCom_google_android_apps_walletnfcrel1001 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_io.homeassistant.companion.android_-1235714175")]
    public bool? Android_progressIndeterminateIo_homeassistant_companion_android1235714175 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_io.homeassistant.companion.android_-1235721596")]
    public bool? Android_progressIndeterminateIo_homeassistant_companion_android1235721596 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_io.homeassistant.companion.android_-1235803350")]
    public bool? Android_progressIndeterminateIo_homeassistant_companion_android1235803350 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_io.homeassistant.companion.android_-1236111906")]
    public bool? Android_progressIndeterminateIo_homeassistant_companion_android1236111906 { get; init; }

    [JsonPropertyName("android.progressMax_com.google.android.apps.walletnfcrel_1001")]
    public double? Android_progressMaxCom_google_android_apps_walletnfcrel1001 { get; init; }

    [JsonPropertyName("android.progressMax_io.homeassistant.companion.android_-1235714175")]
    public double? Android_progressMaxIo_homeassistant_companion_android1235714175 { get; init; }

    [JsonPropertyName("android.progressMax_io.homeassistant.companion.android_-1235721596")]
    public double? Android_progressMaxIo_homeassistant_companion_android1235721596 { get; init; }

    [JsonPropertyName("android.progressMax_io.homeassistant.companion.android_-1235803350")]
    public double? Android_progressMaxIo_homeassistant_companion_android1235803350 { get; init; }

    [JsonPropertyName("android.progressMax_io.homeassistant.companion.android_-1236111906")]
    public double? Android_progressMaxIo_homeassistant_companion_android1236111906 { get; init; }

    [JsonPropertyName("android.progress_com.google.android.apps.walletnfcrel_1001")]
    public double? Android_progressCom_google_android_apps_walletnfcrel1001 { get; init; }

    [JsonPropertyName("android.progress_io.homeassistant.companion.android_-1235714175")]
    public double? Android_progressIo_homeassistant_companion_android1235714175 { get; init; }

    [JsonPropertyName("android.progress_io.homeassistant.companion.android_-1235721596")]
    public double? Android_progressIo_homeassistant_companion_android1235721596 { get; init; }

    [JsonPropertyName("android.progress_io.homeassistant.companion.android_-1235803350")]
    public double? Android_progressIo_homeassistant_companion_android1235803350 { get; init; }

    [JsonPropertyName("android.progress_io.homeassistant.companion.android_-1236111906")]
    public double? Android_progressIo_homeassistant_companion_android1236111906 { get; init; }

    [JsonPropertyName("android.reduced.images_com.google.android.apps.walletnfcrel_1001")]
    public bool? Android_reduced_imagesCom_google_android_apps_walletnfcrel1001 { get; init; }

    [JsonPropertyName("android.reduced.images_io.homeassistant.companion.android_-1235714175")]
    public bool? Android_reduced_imagesIo_homeassistant_companion_android1235714175 { get; init; }

    [JsonPropertyName("android.reduced.images_io.homeassistant.companion.android_-1235721596")]
    public bool? Android_reduced_imagesIo_homeassistant_companion_android1235721596 { get; init; }

    [JsonPropertyName("android.reduced.images_io.homeassistant.companion.android_-1235803350")]
    public bool? Android_reduced_imagesIo_homeassistant_companion_android1235803350 { get; init; }

    [JsonPropertyName("android.reduced.images_io.homeassistant.companion.android_-1236111906")]
    public bool? Android_reduced_imagesIo_homeassistant_companion_android1236111906 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.google.android.apps.walletnfcrel_1001")]
    public string? Android_remoteInputHistoryCom_google_android_apps_walletnfcrel1001 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_io.homeassistant.companion.android_-1235714175")]
    public string? Android_remoteInputHistoryIo_homeassistant_companion_android1235714175 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_io.homeassistant.companion.android_-1235721596")]
    public string? Android_remoteInputHistoryIo_homeassistant_companion_android1235721596 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_io.homeassistant.companion.android_-1235803350")]
    public string? Android_remoteInputHistoryIo_homeassistant_companion_android1235803350 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_io.homeassistant.companion.android_-1236111906")]
    public string? Android_remoteInputHistoryIo_homeassistant_companion_android1236111906 { get; init; }

    [JsonPropertyName("android.showBigPictureWhenCollapsed_io.homeassistant.companion.android_-1235714175")]
    public bool? Android_showBigPictureWhenCollapsedIo_homeassistant_companion_android1235714175 { get; init; }

    [JsonPropertyName("android.showBigPictureWhenCollapsed_io.homeassistant.companion.android_-1235721596")]
    public bool? Android_showBigPictureWhenCollapsedIo_homeassistant_companion_android1235721596 { get; init; }

    [JsonPropertyName("android.showBigPictureWhenCollapsed_io.homeassistant.companion.android_-1235803350")]
    public bool? Android_showBigPictureWhenCollapsedIo_homeassistant_companion_android1235803350 { get; init; }

    [JsonPropertyName("android.showBigPictureWhenCollapsed_io.homeassistant.companion.android_-1236111906")]
    public bool? Android_showBigPictureWhenCollapsedIo_homeassistant_companion_android1236111906 { get; init; }

    [JsonPropertyName("android.showChronometer_com.google.android.apps.walletnfcrel_1001")]
    public bool? Android_showChronometerCom_google_android_apps_walletnfcrel1001 { get; init; }

    [JsonPropertyName("android.showChronometer_io.homeassistant.companion.android_-1235714175")]
    public bool? Android_showChronometerIo_homeassistant_companion_android1235714175 { get; init; }

    [JsonPropertyName("android.showChronometer_io.homeassistant.companion.android_-1235721596")]
    public bool? Android_showChronometerIo_homeassistant_companion_android1235721596 { get; init; }

    [JsonPropertyName("android.showChronometer_io.homeassistant.companion.android_-1235803350")]
    public bool? Android_showChronometerIo_homeassistant_companion_android1235803350 { get; init; }

    [JsonPropertyName("android.showChronometer_io.homeassistant.companion.android_-1236111906")]
    public bool? Android_showChronometerIo_homeassistant_companion_android1236111906 { get; init; }

    [JsonPropertyName("android.showWhen_com.google.android.apps.walletnfcrel_1001")]
    public bool? Android_showWhenCom_google_android_apps_walletnfcrel1001 { get; init; }

    [JsonPropertyName("android.showWhen_io.homeassistant.companion.android_-1235714175")]
    public bool? Android_showWhenIo_homeassistant_companion_android1235714175 { get; init; }

    [JsonPropertyName("android.showWhen_io.homeassistant.companion.android_-1235721596")]
    public bool? Android_showWhenIo_homeassistant_companion_android1235721596 { get; init; }

    [JsonPropertyName("android.showWhen_io.homeassistant.companion.android_-1235803350")]
    public bool? Android_showWhenIo_homeassistant_companion_android1235803350 { get; init; }

    [JsonPropertyName("android.showWhen_io.homeassistant.companion.android_-1236111906")]
    public bool? Android_showWhenIo_homeassistant_companion_android1236111906 { get; init; }

    [JsonPropertyName("android.subText_com.google.android.apps.walletnfcrel_1001")]
    public string? Android_subTextCom_google_android_apps_walletnfcrel1001 { get; init; }

    [JsonPropertyName("android.subText_io.homeassistant.companion.android_-1235714175")]
    public string? Android_subTextIo_homeassistant_companion_android1235714175 { get; init; }

    [JsonPropertyName("android.subText_io.homeassistant.companion.android_-1235721596")]
    public string? Android_subTextIo_homeassistant_companion_android1235721596 { get; init; }

    [JsonPropertyName("android.subText_io.homeassistant.companion.android_-1235803350")]
    public string? Android_subTextIo_homeassistant_companion_android1235803350 { get; init; }

    [JsonPropertyName("android.subText_io.homeassistant.companion.android_-1236111906")]
    public string? Android_subTextIo_homeassistant_companion_android1236111906 { get; init; }

    [JsonPropertyName("android.template_io.homeassistant.companion.android_-1235714175")]
    public string? Android_templateIo_homeassistant_companion_android1235714175 { get; init; }

    [JsonPropertyName("android.template_io.homeassistant.companion.android_-1235721596")]
    public string? Android_templateIo_homeassistant_companion_android1235721596 { get; init; }

    [JsonPropertyName("android.template_io.homeassistant.companion.android_-1235803350")]
    public string? Android_templateIo_homeassistant_companion_android1235803350 { get; init; }

    [JsonPropertyName("android.template_io.homeassistant.companion.android_-1236111906")]
    public string? Android_templateIo_homeassistant_companion_android1236111906 { get; init; }

    [JsonPropertyName("android.text_com.google.android.apps.walletnfcrel_1001")]
    public string? Android_textCom_google_android_apps_walletnfcrel1001 { get; init; }

    [JsonPropertyName("android.text_io.homeassistant.companion.android_-1235714175")]
    public string? Android_textIo_homeassistant_companion_android1235714175 { get; init; }

    [JsonPropertyName("android.text_io.homeassistant.companion.android_-1235721596")]
    public string? Android_textIo_homeassistant_companion_android1235721596 { get; init; }

    [JsonPropertyName("android.text_io.homeassistant.companion.android_-1235803350")]
    public string? Android_textIo_homeassistant_companion_android1235803350 { get; init; }

    [JsonPropertyName("android.text_io.homeassistant.companion.android_-1236111906")]
    public string? Android_textIo_homeassistant_companion_android1236111906 { get; init; }

    [JsonPropertyName("android.title_com.google.android.apps.walletnfcrel_1001")]
    public string? Android_titleCom_google_android_apps_walletnfcrel1001 { get; init; }

    [JsonPropertyName("android.title_io.homeassistant.companion.android_-1235714175")]
    public string? Android_titleIo_homeassistant_companion_android1235714175 { get; init; }

    [JsonPropertyName("android.title_io.homeassistant.companion.android_-1235721596")]
    public string? Android_titleIo_homeassistant_companion_android1235721596 { get; init; }

    [JsonPropertyName("android.title_io.homeassistant.companion.android_-1235803350")]
    public string? Android_titleIo_homeassistant_companion_android1235803350 { get; init; }

    [JsonPropertyName("android.title_io.homeassistant.companion.android_-1236111906")]
    public string? Android_titleIo_homeassistant_companion_android1236111906 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_io.homeassistant.companion.android_-1235714175")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEIo_homeassistant_companion_android1235714175 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_io.homeassistant.companion.android_-1235721596")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEIo_homeassistant_companion_android1235721596 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_io.homeassistant.companion.android_-1235803350")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEIo_homeassistant_companion_android1235803350 { get; init; }

    [JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_io.homeassistant.companion.android_-1236111906")]
    public string? Androidx_core_app_extra_COMPATTEMPLATEIo_homeassistant_companion_android1236111906 { get; init; }

    [JsonPropertyName("com.google.android.apps.walletnfcrel_1001_category")]
    public string? Com_google_android_apps_walletnfcrel1001Category { get; init; }

    [JsonPropertyName("com.google.android.apps.walletnfcrel_1001_channel_id")]
    public string? Com_google_android_apps_walletnfcrel1001ChannelId { get; init; }

    [JsonPropertyName("com.google.android.apps.walletnfcrel_1001_group_id")]
    public string? Com_google_android_apps_walletnfcrel1001GroupId { get; init; }

    [JsonPropertyName("com.google.android.apps.walletnfcrel_1001_is_clearable")]
    public bool? Com_google_android_apps_walletnfcrel1001IsClearable { get; init; }

    [JsonPropertyName("com.google.android.apps.walletnfcrel_1001_is_ongoing")]
    public bool? Com_google_android_apps_walletnfcrel1001IsOngoing { get; init; }

    [JsonPropertyName("com.google.android.apps.walletnfcrel_1001_post_time")]
    public double? Com_google_android_apps_walletnfcrel1001PostTime { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1235714175_category")]
    public string? Io_homeassistant_companion_android1235714175Category { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1235714175_channel_id")]
    public string? Io_homeassistant_companion_android1235714175ChannelId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1235714175_group_id")]
    public string? Io_homeassistant_companion_android1235714175GroupId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1235714175_is_clearable")]
    public bool? Io_homeassistant_companion_android1235714175IsClearable { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1235714175_is_ongoing")]
    public bool? Io_homeassistant_companion_android1235714175IsOngoing { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1235714175_post_time")]
    public double? Io_homeassistant_companion_android1235714175PostTime { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1235721596_category")]
    public string? Io_homeassistant_companion_android1235721596Category { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1235721596_channel_id")]
    public string? Io_homeassistant_companion_android1235721596ChannelId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1235721596_group_id")]
    public string? Io_homeassistant_companion_android1235721596GroupId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1235721596_is_clearable")]
    public bool? Io_homeassistant_companion_android1235721596IsClearable { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1235721596_is_ongoing")]
    public bool? Io_homeassistant_companion_android1235721596IsOngoing { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1235721596_post_time")]
    public double? Io_homeassistant_companion_android1235721596PostTime { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1235803350_category")]
    public string? Io_homeassistant_companion_android1235803350Category { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1235803350_channel_id")]
    public string? Io_homeassistant_companion_android1235803350ChannelId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1235803350_group_id")]
    public string? Io_homeassistant_companion_android1235803350GroupId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1235803350_is_clearable")]
    public bool? Io_homeassistant_companion_android1235803350IsClearable { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1235803350_is_ongoing")]
    public bool? Io_homeassistant_companion_android1235803350IsOngoing { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1235803350_post_time")]
    public double? Io_homeassistant_companion_android1235803350PostTime { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1236111906_category")]
    public string? Io_homeassistant_companion_android1236111906Category { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1236111906_channel_id")]
    public string? Io_homeassistant_companion_android1236111906ChannelId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1236111906_group_id")]
    public string? Io_homeassistant_companion_android1236111906GroupId { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1236111906_is_clearable")]
    public bool? Io_homeassistant_companion_android1236111906IsClearable { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1236111906_is_ongoing")]
    public bool? Io_homeassistant_companion_android1236111906IsOngoing { get; init; }

    [JsonPropertyName("io.homeassistant.companion.android_-1236111906_post_time")]
    public double? Io_homeassistant_companion_android1236111906PostTime { get; init; }

    [JsonPropertyName("android.appInfo_com.google.android.apps.wear.companion_45675467")]
    public string? Android_appInfoCom_google_android_apps_wear_companion45675467 { get; init; }

    [JsonPropertyName("android.infoText_com.google.android.apps.wear.companion_45675467")]
    public string? Android_infoTextCom_google_android_apps_wear_companion45675467 { get; init; }

    [JsonPropertyName("android.largeIcon_com.google.android.apps.wear.companion_45675467")]
    public string? Android_largeIconCom_google_android_apps_wear_companion45675467 { get; init; }

    [JsonPropertyName("android.progressIndeterminate_com.google.android.apps.wear.companion_45675467")]
    public bool? Android_progressIndeterminateCom_google_android_apps_wear_companion45675467 { get; init; }

    [JsonPropertyName("android.progressMax_com.google.android.apps.wear.companion_45675467")]
    public double? Android_progressMaxCom_google_android_apps_wear_companion45675467 { get; init; }

    [JsonPropertyName("android.progress_com.google.android.apps.wear.companion_45675467")]
    public double? Android_progressCom_google_android_apps_wear_companion45675467 { get; init; }

    [JsonPropertyName("android.reduced.images_com.google.android.apps.wear.companion_45675467")]
    public bool? Android_reduced_imagesCom_google_android_apps_wear_companion45675467 { get; init; }

    [JsonPropertyName("android.remoteInputHistory_com.google.android.apps.wear.companion_45675467")]
    public string? Android_remoteInputHistoryCom_google_android_apps_wear_companion45675467 { get; init; }

    [JsonPropertyName("android.showChronometer_com.google.android.apps.wear.companion_45675467")]
    public bool? Android_showChronometerCom_google_android_apps_wear_companion45675467 { get; init; }

    [JsonPropertyName("android.showWhen_com.google.android.apps.wear.companion_45675467")]
    public bool? Android_showWhenCom_google_android_apps_wear_companion45675467 { get; init; }

    [JsonPropertyName("android.subText_com.google.android.apps.wear.companion_45675467")]
    public string? Android_subTextCom_google_android_apps_wear_companion45675467 { get; init; }

    [JsonPropertyName("android.text_com.google.android.apps.wear.companion_45675467")]
    public string? Android_textCom_google_android_apps_wear_companion45675467 { get; init; }

    [JsonPropertyName("android.title_com.google.android.apps.wear.companion_45675467")]
    public string? Android_titleCom_google_android_apps_wear_companion45675467 { get; init; }

    [JsonPropertyName("com.google.android.apps.wear.companion_45675467_category")]
    public string? Com_google_android_apps_wear_companion45675467Category { get; init; }

    [JsonPropertyName("com.google.android.apps.wear.companion_45675467_channel_id")]
    public string? Com_google_android_apps_wear_companion45675467ChannelId { get; init; }

    [JsonPropertyName("com.google.android.apps.wear.companion_45675467_group_id")]
    public string? Com_google_android_apps_wear_companion45675467GroupId { get; init; }

    [JsonPropertyName("com.google.android.apps.wear.companion_45675467_is_clearable")]
    public bool? Com_google_android_apps_wear_companion45675467IsClearable { get; init; }

    [JsonPropertyName("com.google.android.apps.wear.companion_45675467_is_ongoing")]
    public bool? Com_google_android_apps_wear_companion45675467IsOngoing { get; init; }

    [JsonPropertyName("com.google.android.apps.wear.companion_45675467_post_time")]
    public double? Com_google_android_apps_wear_companion45675467PostTime { get; init; }

    [JsonPropertyName("3b792539-6837-4733-ab17-16989c64f05e")]
    public object? _3b79253968374733ab1716989c64f05e { get; init; }
}

public partial record SttEntity : Entity<SttEntity, EntityState<SttAttributes>, SttAttributes>
{
    public SttEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public SttEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record SttAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record SunEntity : Entity<SunEntity, EntityState<SunAttributes>, SunAttributes>, ISunEntityCore
{
    public SunEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public SunEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record SunAttributes
{
    [JsonPropertyName("next_dawn")]
    public string? NextDawn { get; init; }

    [JsonPropertyName("next_dusk")]
    public string? NextDusk { get; init; }

    [JsonPropertyName("next_midnight")]
    public string? NextMidnight { get; init; }

    [JsonPropertyName("next_noon")]
    public string? NextNoon { get; init; }

    [JsonPropertyName("next_rising")]
    public string? NextRising { get; init; }

    [JsonPropertyName("next_setting")]
    public string? NextSetting { get; init; }

    [JsonPropertyName("elevation")]
    public double? Elevation { get; init; }

    [JsonPropertyName("azimuth")]
    public double? Azimuth { get; init; }

    [JsonPropertyName("rising")]
    public bool? Rising { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record SwitchEntity : Entity<SwitchEntity, EntityState<SwitchAttributes>, SwitchAttributes>, ISwitchEntityCore
{
    public SwitchEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public SwitchEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record SwitchAttributes
{
    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("target")]
    public string? Target { get; init; }

    [JsonPropertyName("attribution")]
    public string? Attribution { get; init; }

    [JsonPropertyName("device")]
    public object? Device { get; init; }

    [JsonPropertyName("linkquality")]
    public double? Linkquality { get; init; }

    [JsonPropertyName("power_on_behavior")]
    public string? PowerOnBehavior { get; init; }

    [JsonPropertyName("update")]
    public object? Update { get; init; }

    [JsonPropertyName("update_available")]
    public bool? UpdateAvailable { get; init; }

    [JsonPropertyName("audio")]
    public string? Audio { get; init; }

    [JsonPropertyName("audio_effect")]
    public string? AudioEffect { get; init; }

    [JsonPropertyName("audio_sensitivity")]
    public string? AudioSensitivity { get; init; }

    [JsonPropertyName("brightness")]
    public double? Brightness { get; init; }

    [JsonPropertyName("color")]
    public object? Color { get; init; }

    [JsonPropertyName("color_mode")]
    public string? ColorMode { get; init; }

    [JsonPropertyName("color_temp")]
    public double? ColorTemp { get; init; }

    [JsonPropertyName("length")]
    public double? Length { get; init; }

    [JsonPropertyName("max_brightness")]
    public double? MaxBrightness { get; init; }

    [JsonPropertyName("min_brightness")]
    public double? MinBrightness { get; init; }

    [JsonPropertyName("preset")]
    public double? Preset { get; init; }

    [JsonPropertyName("speed")]
    public double? Speed { get; init; }

    [JsonPropertyName("OverrideActive")]
    public bool? OverrideActive { get; init; }

    [JsonPropertyName("TurningOff")]
    public string? TurningOff { get; init; }

    [JsonPropertyName("DynamicTimeout")]
    public string? DynamicTimeout { get; init; }

    [JsonPropertyName("IsOccupied")]
    public bool? IsOccupied { get; init; }

    [JsonPropertyName("IsTooBright")]
    public bool? IsTooBright { get; init; }

    [JsonPropertyName("ConditionEntityStateMet")]
    public string? ConditionEntityStateMet { get; init; }

    [JsonPropertyName("ConditionEntity")]
    public string? ConditionEntity { get; init; }

    [JsonPropertyName("ConditionEntityState")]
    public string? ConditionEntityState { get; init; }

    [JsonPropertyName("LastUpdated")]
    public string? LastUpdated { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("auto_close_when_water_shortage")]
    public string? AutoCloseWhenWaterShortage { get; init; }

    [JsonPropertyName("battery")]
    public double? Battery { get; init; }

    [JsonPropertyName("current_device_status")]
    public string? CurrentDeviceStatus { get; init; }

    [JsonPropertyName("cyclic_quantitative_irrigation")]
    public object? CyclicQuantitativeIrrigation { get; init; }

    [JsonPropertyName("cyclic_timed_irrigation")]
    public object? CyclicTimedIrrigation { get; init; }

    [JsonPropertyName("flow")]
    public double? Flow { get; init; }

    [JsonPropertyName("LuxEntity")]
    public string? LuxEntity { get; init; }

    [JsonPropertyName("LuxLimitEntity")]
    public string? LuxLimitEntity { get; init; }

    [JsonPropertyName("LuxLimit")]
    public double? LuxLimit { get; init; }

    [JsonPropertyName("Lux")]
    public double? Lux { get; init; }

    [JsonPropertyName("ConditionState")]
    public string? ConditionState { get; init; }

    [JsonPropertyName("IgnoreLux")]
    public bool? IgnoreLux { get; init; }

    [JsonPropertyName("TurnOnTime")]
    public string? TurnOnTime { get; init; }

    [JsonPropertyName("TurnOffTime")]
    public string? TurnOffTime { get; init; }

    [JsonPropertyName("IsTurningOff")]
    public bool? IsTurningOff { get; init; }

    [JsonPropertyName("State")]
    public string? State { get; init; }

    [JsonPropertyName("Details")]
    public string? Details { get; init; }
}

public partial record TextEntity : Entity<TextEntity, EntityState<TextAttributes>, TextAttributes>
{
    public TextEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public TextEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record TextAttributes
{
    [JsonPropertyName("mode")]
    public string? Mode { get; init; }

    [JsonPropertyName("min")]
    public double? Min { get; init; }

    [JsonPropertyName("max")]
    public double? Max { get; init; }

    [JsonPropertyName("pattern")]
    public string? Pattern { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public partial record TimerEntity : Entity<TimerEntity, EntityState<TimerAttributes>, TimerAttributes>, ITimerEntityCore
{
    public TimerEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public TimerEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record TimerAttributes
{
    [JsonPropertyName("duration")]
    public string? Duration { get; init; }

    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record TodoEntity : Entity<TodoEntity, EntityState<TodoAttributes>, TodoAttributes>
{
    public TodoEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public TodoEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record TodoAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public partial record TtsEntity : Entity<TtsEntity, EntityState<TtsAttributes>, TtsAttributes>
{
    public TtsEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public TtsEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record TtsAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record UpdateEntity : Entity<UpdateEntity, EntityState<UpdateAttributes>, UpdateAttributes>, IUpdateEntityCore
{
    public UpdateEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public UpdateEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record UpdateAttributes
{
    [JsonPropertyName("auto_update")]
    public bool? AutoUpdate { get; init; }

    [JsonPropertyName("installed_version")]
    public string? InstalledVersion { get; init; }

    [JsonPropertyName("in_progress")]
    public bool? InProgress { get; init; }

    [JsonPropertyName("latest_version")]
    public string? LatestVersion { get; init; }

    [JsonPropertyName("release_summary")]
    public string? ReleaseSummary { get; init; }

    [JsonPropertyName("release_url")]
    public string? ReleaseUrl { get; init; }

    [JsonPropertyName("skipped_version")]
    public object? SkippedVersion { get; init; }

    [JsonPropertyName("title")]
    public string? Title { get; init; }

    [JsonPropertyName("entity_picture")]
    public string? EntityPicture { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("device_class")]
    public string? DeviceClass { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }

    [JsonPropertyName("display_precision")]
    public double? DisplayPrecision { get; init; }

    [JsonPropertyName("update_percentage")]
    public object? UpdatePercentage { get; init; }
}

public partial record WeatherEntity : Entity<WeatherEntity, EntityState<WeatherAttributes>, WeatherAttributes>, IWeatherEntityCore
{
    public WeatherEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public WeatherEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record WeatherAttributes
{
    [JsonPropertyName("temperature")]
    public double? Temperature { get; init; }

    [JsonPropertyName("apparent_temperature")]
    public double? ApparentTemperature { get; init; }

    [JsonPropertyName("dew_point")]
    public double? DewPoint { get; init; }

    [JsonPropertyName("temperature_unit")]
    public string? TemperatureUnit { get; init; }

    [JsonPropertyName("humidity")]
    public double? Humidity { get; init; }

    [JsonPropertyName("cloud_coverage")]
    public double? CloudCoverage { get; init; }

    [JsonPropertyName("uv_index")]
    public double? UvIndex { get; init; }

    [JsonPropertyName("pressure")]
    public double? Pressure { get; init; }

    [JsonPropertyName("pressure_unit")]
    public string? PressureUnit { get; init; }

    [JsonPropertyName("wind_bearing")]
    public double? WindBearing { get; init; }

    [JsonPropertyName("wind_gust_speed")]
    public double? WindGustSpeed { get; init; }

    [JsonPropertyName("wind_speed")]
    public double? WindSpeed { get; init; }

    [JsonPropertyName("wind_speed_unit")]
    public string? WindSpeedUnit { get; init; }

    [JsonPropertyName("visibility")]
    public double? Visibility { get; init; }

    [JsonPropertyName("visibility_unit")]
    public string? VisibilityUnit { get; init; }

    [JsonPropertyName("precipitation_unit")]
    public string? PrecipitationUnit { get; init; }

    [JsonPropertyName("attribution")]
    public string? Attribution { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public partial record ZoneEntity : Entity<ZoneEntity, EntityState<ZoneAttributes>, ZoneAttributes>, IZoneEntityCore
{
    public ZoneEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public ZoneEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record ZoneAttributes
{
    [JsonPropertyName("latitude")]
    public double? Latitude { get; init; }

    [JsonPropertyName("longitude")]
    public double? Longitude { get; init; }

    [JsonPropertyName("radius")]
    public double? Radius { get; init; }

    [JsonPropertyName("passive")]
    public bool? Passive { get; init; }

    [JsonPropertyName("persons")]
    public IReadOnlyList<string>? Persons { get; init; }

    [JsonPropertyName("editable")]
    public bool? Editable { get; init; }

    [JsonPropertyName("icon")]
    public string? Icon { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record TagEntity : Entity<TagEntity, EntityState<TagAttributes>, TagAttributes>
{
    public TagEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public TagEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record TagAttributes
{
    [JsonPropertyName("tag_id")]
    public string? TagId { get; init; }

    [JsonPropertyName("last_scanned_by_device_id")]
    public object? LastScannedByDeviceId { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record ImageEntity : Entity<ImageEntity, EntityState<ImageAttributes>, ImageAttributes>
{
    public ImageEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public ImageEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record ImageAttributes
{
    [JsonPropertyName("access_token")]
    public string? AccessToken { get; init; }

    [JsonPropertyName("entity_picture")]
    public string? EntityPicture { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }
}

public partial record NotifyEntity : Entity<NotifyEntity, EntityState<NotifyAttributes>, NotifyAttributes>
{
    public NotifyEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public NotifyEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record NotifyAttributes
{
    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }
}

public partial record VacuumEntity : Entity<VacuumEntity, EntityState<VacuumAttributes>, VacuumAttributes>, IVacuumEntityCore
{
    public VacuumEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
    {
    }

    public VacuumEntity(IEntityCore entity) : base(entity)
    {
    }
}

public partial record VacuumAttributes
{
    [JsonPropertyName("battery_level")]
    public double? BatteryLevel { get; init; }

    [JsonPropertyName("battery_icon")]
    public string? BatteryIcon { get; init; }

    [JsonPropertyName("status")]
    public string? Status { get; init; }

    [JsonPropertyName("clean_start")]
    public string? CleanStart { get; init; }

    [JsonPropertyName("clean_stop")]
    public string? CleanStop { get; init; }

    [JsonPropertyName("clean_area")]
    public double? CleanArea { get; init; }

    [JsonPropertyName("clean_suspension_count")]
    public double? CleanSuspensionCount { get; init; }

    [JsonPropertyName("clean_suspension_time")]
    public double? CleanSuspensionTime { get; init; }

    [JsonPropertyName("clean_pause_time")]
    public double? CleanPauseTime { get; init; }

    [JsonPropertyName("clean_error_time")]
    public double? CleanErrorTime { get; init; }

    [JsonPropertyName("battery_level_at_clean_start")]
    public double? BatteryLevelAtCleanStart { get; init; }

    [JsonPropertyName("battery_level_at_clean_end")]
    public double? BatteryLevelAtCleanEnd { get; init; }

    [JsonPropertyName("launched_from")]
    public string? LaunchedFrom { get; init; }

    [JsonPropertyName("friendly_name")]
    public string? FriendlyName { get; init; }

    [JsonPropertyName("supported_features")]
    public double? SupportedFeatures { get; init; }

    [JsonPropertyName("restored")]
    public bool? Restored { get; init; }
}

public interface IServices
{
    AdguardServices Adguard { get; }

    AlarmControlPanelServices AlarmControlPanel { get; }

    AlarmoServices Alarmo { get; }

    AlexaMediaServices AlexaMedia { get; }

    AutomationServices Automation { get; }

    BrowserModServices BrowserMod { get; }

    ButtonServices Button { get; }

    CalendarServices Calendar { get; }

    CameraServices Camera { get; }

    ClimateServices Climate { get; }

    CloudServices Cloud { get; }

    ConversationServices Conversation { get; }

    CounterServices Counter { get; }

    CoverServices Cover { get; }

    DeviceTrackerServices DeviceTracker { get; }

    EsphomeServices Esphome { get; }

    FanServices Fan { get; }

    FfmpegServices Ffmpeg { get; }

    FrontendServices Frontend { get; }

    FullyKioskServices FullyKiosk { get; }

    GoogleServices Google { get; }

    GoogleGenerativeAiConversationServices GoogleGenerativeAiConversation { get; }

    GroupServices Group { get; }

    HabiticaServices Habitica { get; }

    HassioServices Hassio { get; }

    HomeassistantServices Homeassistant { get; }

    HumidifierServices Humidifier { get; }

    ImageServices Image { get; }

    InputBooleanServices InputBoolean { get; }

    InputButtonServices InputButton { get; }

    InputDatetimeServices InputDatetime { get; }

    InputNumberServices InputNumber { get; }

    InputSelectServices InputSelect { get; }

    InputTextServices InputText { get; }

    LightServices Light { get; }

    LocaltuyaServices Localtuya { get; }

    LockServices Lock { get; }

    LogbookServices Logbook { get; }

    LoggerServices Logger { get; }

    MediaPlayerServices MediaPlayer { get; }

    MqttServices Mqtt { get; }

    NetdaemonServices Netdaemon { get; }

    NotifyServices Notify { get; }

    NumberServices Number { get; }

    OctopusEnergyServices OctopusEnergy { get; }

    PersistentNotificationServices PersistentNotification { get; }

    PersonServices Person { get; }

    RecorderServices Recorder { get; }

    RemoteServices Remote { get; }

    SceneServices Scene { get; }

    ScheduleServices Schedule { get; }

    ScriptServices Script { get; }

    SelectServices Select { get; }

    ShoppingListServices ShoppingList { get; }

    SirenServices Siren { get; }

    SpotcastServices Spotcast { get; }

    SqueezeboxServices Squeezebox { get; }

    SwitchServices Switch { get; }

    SystemLogServices SystemLog { get; }

    TemplateServices Template { get; }

    TextServices Text { get; }

    TimeServices Time { get; }

    TimerServices Timer { get; }

    TodoServices Todo { get; }

    TtsServices Tts { get; }

    UnifiprotectServices Unifiprotect { get; }

    UpdateServices Update { get; }

    VacuumServices Vacuum { get; }

    ValveServices Valve { get; }

    WasteCollectionScheduleServices WasteCollectionSchedule { get; }

    WeatherServices Weather { get; }

    YeelightServices Yeelight { get; }

    ZoneServices Zone { get; }
}

public partial class Services : IServices
{
    private readonly IHaContext _haContext;
    public Services(IHaContext haContext)
    {
        _haContext = haContext;
    }

    public AdguardServices Adguard => new(_haContext);
    public AlarmControlPanelServices AlarmControlPanel => new(_haContext);
    public AlarmoServices Alarmo => new(_haContext);
    public AlexaMediaServices AlexaMedia => new(_haContext);
    public AutomationServices Automation => new(_haContext);
    public BrowserModServices BrowserMod => new(_haContext);
    public ButtonServices Button => new(_haContext);
    public CalendarServices Calendar => new(_haContext);
    public CameraServices Camera => new(_haContext);
    public ClimateServices Climate => new(_haContext);
    public CloudServices Cloud => new(_haContext);
    public ConversationServices Conversation => new(_haContext);
    public CounterServices Counter => new(_haContext);
    public CoverServices Cover => new(_haContext);
    public DeviceTrackerServices DeviceTracker => new(_haContext);
    public EsphomeServices Esphome => new(_haContext);
    public FanServices Fan => new(_haContext);
    public FfmpegServices Ffmpeg => new(_haContext);
    public FrontendServices Frontend => new(_haContext);
    public FullyKioskServices FullyKiosk => new(_haContext);
    public GoogleServices Google => new(_haContext);
    public GoogleGenerativeAiConversationServices GoogleGenerativeAiConversation => new(_haContext);
    public GroupServices Group => new(_haContext);
    public HabiticaServices Habitica => new(_haContext);
    public HassioServices Hassio => new(_haContext);
    public HomeassistantServices Homeassistant => new(_haContext);
    public HumidifierServices Humidifier => new(_haContext);
    public ImageServices Image => new(_haContext);
    public InputBooleanServices InputBoolean => new(_haContext);
    public InputButtonServices InputButton => new(_haContext);
    public InputDatetimeServices InputDatetime => new(_haContext);
    public InputNumberServices InputNumber => new(_haContext);
    public InputSelectServices InputSelect => new(_haContext);
    public InputTextServices InputText => new(_haContext);
    public LightServices Light => new(_haContext);
    public LocaltuyaServices Localtuya => new(_haContext);
    public LockServices Lock => new(_haContext);
    public LogbookServices Logbook => new(_haContext);
    public LoggerServices Logger => new(_haContext);
    public MediaPlayerServices MediaPlayer => new(_haContext);
    public MqttServices Mqtt => new(_haContext);
    public NetdaemonServices Netdaemon => new(_haContext);
    public NotifyServices Notify => new(_haContext);
    public NumberServices Number => new(_haContext);
    public OctopusEnergyServices OctopusEnergy => new(_haContext);
    public PersistentNotificationServices PersistentNotification => new(_haContext);
    public PersonServices Person => new(_haContext);
    public RecorderServices Recorder => new(_haContext);
    public RemoteServices Remote => new(_haContext);
    public SceneServices Scene => new(_haContext);
    public ScheduleServices Schedule => new(_haContext);
    public ScriptServices Script => new(_haContext);
    public SelectServices Select => new(_haContext);
    public ShoppingListServices ShoppingList => new(_haContext);
    public SirenServices Siren => new(_haContext);
    public SpotcastServices Spotcast => new(_haContext);
    public SqueezeboxServices Squeezebox => new(_haContext);
    public SwitchServices Switch => new(_haContext);
    public SystemLogServices SystemLog => new(_haContext);
    public TemplateServices Template => new(_haContext);
    public TextServices Text => new(_haContext);
    public TimeServices Time => new(_haContext);
    public TimerServices Timer => new(_haContext);
    public TodoServices Todo => new(_haContext);
    public TtsServices Tts => new(_haContext);
    public UnifiprotectServices Unifiprotect => new(_haContext);
    public UpdateServices Update => new(_haContext);
    public VacuumServices Vacuum => new(_haContext);
    public ValveServices Valve => new(_haContext);
    public WasteCollectionScheduleServices WasteCollectionSchedule => new(_haContext);
    public WeatherServices Weather => new(_haContext);
    public YeelightServices Yeelight => new(_haContext);
    public ZoneServices Zone => new(_haContext);
}

public partial class AdguardServices
{
    private readonly IHaContext _haContext;
    public AdguardServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Add a new filter subscription to AdGuard Home.</summary>
    public void AddUrl(AdguardAddUrlParameters data)
    {
        _haContext.CallService("adguard", "add_url", null, data);
    }

    ///<summary>Add a new filter subscription to AdGuard Home.</summary>
    ///<param name="name">The name of the filter subscription. eg: Example</param>
    ///<param name="url">The filter URL to subscribe to, containing the filter rules. eg: https://www.example.com/filter/1.txt</param>
    public void AddUrl(string name, string url)
    {
        _haContext.CallService("adguard", "add_url", null, new AdguardAddUrlParameters { Name = name, Url = url });
    }

    ///<summary>Disables a filter subscription in AdGuard Home.</summary>
    public void DisableUrl(AdguardDisableUrlParameters data)
    {
        _haContext.CallService("adguard", "disable_url", null, data);
    }

    ///<summary>Disables a filter subscription in AdGuard Home.</summary>
    ///<param name="url">The filter subscription URL to disable. eg: https://www.example.com/filter/1.txt</param>
    public void DisableUrl(string url)
    {
        _haContext.CallService("adguard", "disable_url", null, new AdguardDisableUrlParameters { Url = url });
    }

    ///<summary>Enables a filter subscription in AdGuard Home.</summary>
    public void EnableUrl(AdguardEnableUrlParameters data)
    {
        _haContext.CallService("adguard", "enable_url", null, data);
    }

    ///<summary>Enables a filter subscription in AdGuard Home.</summary>
    ///<param name="url">The filter subscription URL to enable. eg: https://www.example.com/filter/1.txt</param>
    public void EnableUrl(string url)
    {
        _haContext.CallService("adguard", "enable_url", null, new AdguardEnableUrlParameters { Url = url });
    }

    ///<summary>Refresh all filter subscriptions in AdGuard Home.</summary>
    public void Refresh(AdguardRefreshParameters data)
    {
        _haContext.CallService("adguard", "refresh", null, data);
    }

    ///<summary>Refresh all filter subscriptions in AdGuard Home.</summary>
    ///<param name="force">Force update (bypasses AdGuard Home throttling). &quot;true&quot; to force, or &quot;false&quot; to omit for a regular refresh.</param>
    public void Refresh(bool? force = null)
    {
        _haContext.CallService("adguard", "refresh", null, new AdguardRefreshParameters { Force = force });
    }

    ///<summary>Removes a filter subscription from AdGuard Home.</summary>
    public void RemoveUrl(AdguardRemoveUrlParameters data)
    {
        _haContext.CallService("adguard", "remove_url", null, data);
    }

    ///<summary>Removes a filter subscription from AdGuard Home.</summary>
    ///<param name="url">The filter subscription URL to remove. eg: https://www.example.com/filter/1.txt</param>
    public void RemoveUrl(string url)
    {
        _haContext.CallService("adguard", "remove_url", null, new AdguardRemoveUrlParameters { Url = url });
    }
}

public partial record AdguardAddUrlParameters
{
    ///<summary>The name of the filter subscription. eg: Example</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>The filter URL to subscribe to, containing the filter rules. eg: https://www.example.com/filter/1.txt</summary>
    [JsonPropertyName("url")]
    public string? Url { get; init; }
}

public partial record AdguardDisableUrlParameters
{
    ///<summary>The filter subscription URL to disable. eg: https://www.example.com/filter/1.txt</summary>
    [JsonPropertyName("url")]
    public string? Url { get; init; }
}

public partial record AdguardEnableUrlParameters
{
    ///<summary>The filter subscription URL to enable. eg: https://www.example.com/filter/1.txt</summary>
    [JsonPropertyName("url")]
    public string? Url { get; init; }
}

public partial record AdguardRefreshParameters
{
    ///<summary>Force update (bypasses AdGuard Home throttling). &quot;true&quot; to force, or &quot;false&quot; to omit for a regular refresh.</summary>
    [JsonPropertyName("force")]
    public bool? Force { get; init; }
}

public partial record AdguardRemoveUrlParameters
{
    ///<summary>The filter subscription URL to remove. eg: https://www.example.com/filter/1.txt</summary>
    [JsonPropertyName("url")]
    public string? Url { get; init; }
}

public partial class AlarmControlPanelServices
{
    private readonly IHaContext _haContext;
    public AlarmControlPanelServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sets the alarm to: _armed, no one home_.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmArmAway(ServiceTarget target, AlarmControlPanelAlarmArmAwayParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_away", target, data);
    }

    ///<summary>Sets the alarm to: _armed, no one home_.</summary>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public void AlarmArmAway(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_away", target, new AlarmControlPanelAlarmArmAwayParameters { Code = code });
    }

    ///<summary>Arms the alarm while allowing to bypass a custom area.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmArmCustomBypass(ServiceTarget target, AlarmControlPanelAlarmArmCustomBypassParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_custom_bypass", target, data);
    }

    ///<summary>Arms the alarm while allowing to bypass a custom area.</summary>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public void AlarmArmCustomBypass(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_custom_bypass", target, new AlarmControlPanelAlarmArmCustomBypassParameters { Code = code });
    }

    ///<summary>Sets the alarm to: _armed, but someone is home_.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmArmHome(ServiceTarget target, AlarmControlPanelAlarmArmHomeParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_home", target, data);
    }

    ///<summary>Sets the alarm to: _armed, but someone is home_.</summary>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public void AlarmArmHome(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_home", target, new AlarmControlPanelAlarmArmHomeParameters { Code = code });
    }

    ///<summary>Sets the alarm to: _armed for the night_.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmArmNight(ServiceTarget target, AlarmControlPanelAlarmArmNightParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_night", target, data);
    }

    ///<summary>Sets the alarm to: _armed for the night_.</summary>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public void AlarmArmNight(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_night", target, new AlarmControlPanelAlarmArmNightParameters { Code = code });
    }

    ///<summary>Sets the alarm to: _armed for vacation_.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmArmVacation(ServiceTarget target, AlarmControlPanelAlarmArmVacationParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_vacation", target, data);
    }

    ///<summary>Sets the alarm to: _armed for vacation_.</summary>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public void AlarmArmVacation(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_arm_vacation", target, new AlarmControlPanelAlarmArmVacationParameters { Code = code });
    }

    ///<summary>Disarms the alarm.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmDisarm(ServiceTarget target, AlarmControlPanelAlarmDisarmParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_disarm", target, data);
    }

    ///<summary>Disarms the alarm.</summary>
    ///<param name="code">Code to disarm the alarm. eg: 1234</param>
    public void AlarmDisarm(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_disarm", target, new AlarmControlPanelAlarmDisarmParameters { Code = code });
    }

    ///<summary>Enables an external alarm trigger.</summary>
    ///<param name="target">The target for this service call</param>
    public void AlarmTrigger(ServiceTarget target, AlarmControlPanelAlarmTriggerParameters data)
    {
        _haContext.CallService("alarm_control_panel", "alarm_trigger", target, data);
    }

    ///<summary>Enables an external alarm trigger.</summary>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public void AlarmTrigger(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("alarm_control_panel", "alarm_trigger", target, new AlarmControlPanelAlarmTriggerParameters { Code = code });
    }
}

public partial record AlarmControlPanelAlarmArmAwayParameters
{
    ///<summary>Code to arm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record AlarmControlPanelAlarmArmCustomBypassParameters
{
    ///<summary>Code to arm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record AlarmControlPanelAlarmArmHomeParameters
{
    ///<summary>Code to arm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record AlarmControlPanelAlarmArmNightParameters
{
    ///<summary>Code to arm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record AlarmControlPanelAlarmArmVacationParameters
{
    ///<summary>Code to arm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record AlarmControlPanelAlarmDisarmParameters
{
    ///<summary>Code to disarm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record AlarmControlPanelAlarmTriggerParameters
{
    ///<summary>Code to arm the alarm. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial class AlarmoServices
{
    private readonly IHaContext _haContext;
    public AlarmoServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    public void Arm(AlarmoArmParameters data)
    {
        _haContext.CallService("alarmo", "arm", null, data);
    }

    ///<param name="entityId"> eg: alarm_control_panel.alarm</param>
    ///<param name="code"> eg: 1234</param>
    ///<param name="mode"> eg: away</param>
    ///<param name="skipDelay"> eg: False</param>
    ///<param name="force"> eg: False</param>
    public void Arm(string entityId, string? code = null, object? mode = null, bool? skipDelay = null, bool? force = null)
    {
        _haContext.CallService("alarmo", "arm", null, new AlarmoArmParameters { EntityId = entityId, Code = code, Mode = mode, SkipDelay = skipDelay, Force = force });
    }

    public void DisableUser(AlarmoDisableUserParameters data)
    {
        _haContext.CallService("alarmo", "disable_user", null, data);
    }

    ///<param name="name"> eg: Frank</param>
    public void DisableUser(string name)
    {
        _haContext.CallService("alarmo", "disable_user", null, new AlarmoDisableUserParameters { Name = name });
    }

    public void Disarm(AlarmoDisarmParameters data)
    {
        _haContext.CallService("alarmo", "disarm", null, data);
    }

    ///<param name="entityId"> eg: alarm_control_panel.alarm</param>
    ///<param name="code"> eg: 1234</param>
    public void Disarm(string entityId, string? code = null)
    {
        _haContext.CallService("alarmo", "disarm", null, new AlarmoDisarmParameters { EntityId = entityId, Code = code });
    }

    public void EnableUser(AlarmoEnableUserParameters data)
    {
        _haContext.CallService("alarmo", "enable_user", null, data);
    }

    ///<param name="name"> eg: Frank</param>
    public void EnableUser(string name)
    {
        _haContext.CallService("alarmo", "enable_user", null, new AlarmoEnableUserParameters { Name = name });
    }
}

public partial record AlarmoArmParameters
{
    ///<summary> eg: alarm_control_panel.alarm</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary> eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }

    ///<summary> eg: away</summary>
    [JsonPropertyName("mode")]
    public object? Mode { get; init; }

    ///<summary> eg: False</summary>
    [JsonPropertyName("skip_delay")]
    public bool? SkipDelay { get; init; }

    ///<summary> eg: False</summary>
    [JsonPropertyName("force")]
    public bool? Force { get; init; }
}

public partial record AlarmoDisableUserParameters
{
    ///<summary> eg: Frank</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }
}

public partial record AlarmoDisarmParameters
{
    ///<summary> eg: alarm_control_panel.alarm</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary> eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record AlarmoEnableUserParameters
{
    ///<summary> eg: Frank</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }
}

public partial class AlexaMediaServices
{
    private readonly IHaContext _haContext;
    public AlexaMediaServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Force account to logout. Used mainly for debugging.</summary>
    public void ForceLogout(AlexaMediaForceLogoutParameters data)
    {
        _haContext.CallService("alexa_media", "force_logout", null, data);
    }

    ///<summary>Force account to logout. Used mainly for debugging.</summary>
    ///<param name="email">Accounts to clear. Empty will clear all. eg: my_email@alexa.com</param>
    public void ForceLogout(object? email = null)
    {
        _haContext.CallService("alexa_media", "force_logout", null, new AlexaMediaForceLogoutParameters { Email = email });
    }

    ///<summary>Forces update of last_called echo device for each Alexa account.</summary>
    public void UpdateLastCalled(AlexaMediaUpdateLastCalledParameters data)
    {
        _haContext.CallService("alexa_media", "update_last_called", null, data);
    }

    ///<summary>Forces update of last_called echo device for each Alexa account.</summary>
    ///<param name="email">List of Alexa accounts to update. If empty, will update all known accounts. eg: my_email@alexa.com</param>
    public void UpdateLastCalled(object? email = null)
    {
        _haContext.CallService("alexa_media", "update_last_called", null, new AlexaMediaUpdateLastCalledParameters { Email = email });
    }
}

public partial record AlexaMediaForceLogoutParameters
{
    ///<summary>Accounts to clear. Empty will clear all. eg: my_email@alexa.com</summary>
    [JsonPropertyName("email")]
    public object? Email { get; init; }
}

public partial record AlexaMediaUpdateLastCalledParameters
{
    ///<summary>List of Alexa accounts to update. If empty, will update all known accounts. eg: my_email@alexa.com</summary>
    [JsonPropertyName("email")]
    public object? Email { get; init; }
}

public partial class AutomationServices
{
    private readonly IHaContext _haContext;
    public AutomationServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads the automation configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("automation", "reload", null, data);
    }

    ///<summary>Toggles (enable / disable) an automation.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("automation", "toggle", target, data);
    }

    ///<summary>Triggers the actions of an automation.</summary>
    ///<param name="target">The target for this service call</param>
    public void Trigger(ServiceTarget target, AutomationTriggerParameters data)
    {
        _haContext.CallService("automation", "trigger", target, data);
    }

    ///<summary>Triggers the actions of an automation.</summary>
    ///<param name="skipCondition">Defines whether or not the conditions will be skipped.</param>
    public void Trigger(ServiceTarget target, bool? skipCondition = null)
    {
        _haContext.CallService("automation", "trigger", target, new AutomationTriggerParameters { SkipCondition = skipCondition });
    }

    ///<summary>Disables an automation.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, AutomationTurnOffParameters data)
    {
        _haContext.CallService("automation", "turn_off", target, data);
    }

    ///<summary>Disables an automation.</summary>
    ///<param name="stopActions">Stops currently running actions.</param>
    public void TurnOff(ServiceTarget target, bool? stopActions = null)
    {
        _haContext.CallService("automation", "turn_off", target, new AutomationTurnOffParameters { StopActions = stopActions });
    }

    ///<summary>Enables an automation.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("automation", "turn_on", target, data);
    }
}

public partial record AutomationTriggerParameters
{
    ///<summary>Defines whether or not the conditions will be skipped.</summary>
    [JsonPropertyName("skip_condition")]
    public bool? SkipCondition { get; init; }
}

public partial record AutomationTurnOffParameters
{
    ///<summary>Stops currently running actions.</summary>
    [JsonPropertyName("stop_actions")]
    public bool? StopActions { get; init; }
}

public partial class BrowserModServices
{
    private readonly IHaContext _haContext;
    public BrowserModServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Close a popup</summary>
    public void ClosePopup(BrowserModClosePopupParameters data)
    {
        _haContext.CallService("browser_mod", "close_popup", null, data);
    }

    ///<summary>Close a popup</summary>
    ///<param name="browserId"></param>
    public void ClosePopup(IEnumerable<string>? browserId = null)
    {
        _haContext.CallService("browser_mod", "close_popup", null, new BrowserModClosePopupParameters { BrowserId = browserId });
    }

    ///<summary>Print text to browser console</summary>
    public void Console(BrowserModConsoleParameters data)
    {
        _haContext.CallService("browser_mod", "console", null, data);
    }

    ///<summary>Print text to browser console</summary>
    ///<param name="browserId"></param>
    ///<param name="message">Text to print</param>
    public void Console(IEnumerable<string>? browserId = null, string? message = null)
    {
        _haContext.CallService("browser_mod", "console", null, new BrowserModConsoleParameters { BrowserId = browserId, Message = message });
    }

    ///<summary>Wait for a time</summary>
    public void Delay(BrowserModDelayParameters data)
    {
        _haContext.CallService("browser_mod", "delay", null, data);
    }

    ///<summary>Wait for a time</summary>
    ///<param name="browserId"></param>
    ///<param name="time">Time to wait (ms)</param>
    public void Delay(IEnumerable<string>? browserId = null, double? time = null)
    {
        _haContext.CallService("browser_mod", "delay", null, new BrowserModDelayParameters { BrowserId = browserId, Time = time });
    }

    ///<summary>Run arbitrary JavaScript code</summary>
    public void Javascript(BrowserModJavascriptParameters data)
    {
        _haContext.CallService("browser_mod", "javascript", null, data);
    }

    ///<summary>Run arbitrary JavaScript code</summary>
    ///<param name="browserId"></param>
    ///<param name="code">JavaScript code to run</param>
    public void Javascript(IEnumerable<string>? browserId = null, object? code = null)
    {
        _haContext.CallService("browser_mod", "javascript", null, new BrowserModJavascriptParameters { BrowserId = browserId, Code = code });
    }

    ///<summary>Show more-info dialog</summary>
    public void MoreInfo(BrowserModMoreInfoParameters data)
    {
        _haContext.CallService("browser_mod", "more_info", null, data);
    }

    ///<summary>Show more-info dialog</summary>
    ///<param name="browserId"></param>
    ///<param name="entity"></param>
    ///<param name="large"></param>
    ///<param name="ignorePopupCard"></param>
    public void MoreInfo(string entity, IEnumerable<string>? browserId = null, bool? large = null, bool? ignorePopupCard = null)
    {
        _haContext.CallService("browser_mod", "more_info", null, new BrowserModMoreInfoParameters { BrowserId = browserId, Entity = entity, Large = large, IgnorePopupCard = ignorePopupCard });
    }

    ///<summary>Navigate browser to a different page</summary>
    public void Navigate(BrowserModNavigateParameters data)
    {
        _haContext.CallService("browser_mod", "navigate", null, data);
    }

    ///<summary>Navigate browser to a different page</summary>
    ///<param name="browserId"></param>
    ///<param name="path">Target path</param>
    public void Navigate(IEnumerable<string>? browserId = null, string? path = null)
    {
        _haContext.CallService("browser_mod", "navigate", null, new BrowserModNavigateParameters { BrowserId = browserId, Path = path });
    }

    ///<summary>Display a short notification</summary>
    public void Notification(BrowserModNotificationParameters data)
    {
        _haContext.CallService("browser_mod", "notification", null, data);
    }

    ///<summary>Display a short notification</summary>
    ///<param name="browserId"></param>
    ///<param name="message">Message to display</param>
    ///<param name="duration">Time before closing (ms)</param>
    ///<param name="actionText">Text of optional action button</param>
    ///<param name="action">Action to perform when the action button is pressed</param>
    public void Notification(string message, IEnumerable<string>? browserId = null, double? duration = null, string? actionText = null, object? action = null)
    {
        _haContext.CallService("browser_mod", "notification", null, new BrowserModNotificationParameters { BrowserId = browserId, Message = message, Duration = duration, ActionText = actionText, Action = action });
    }

    ///<summary>Display a popup</summary>
    public void Popup(BrowserModPopupParameters data)
    {
        _haContext.CallService("browser_mod", "popup", null, data);
    }

    ///<summary>Display a popup</summary>
    ///<param name="browserId"></param>
    ///<param name="title">Popup title</param>
    ///<param name="content">Popup content (Test or lovelace card configuration)</param>
    ///<param name="size"></param>
    ///<param name="rightButton">Text of the right button</param>
    ///<param name="rightButtonAction">Action to perform when the right button is pressed</param>
    ///<param name="leftButton">Text of the left button</param>
    ///<param name="leftButtonAction">Action to perform when left button is pressed</param>
    ///<param name="dismissable">Whether the popup can be closed by the user without action</param>
    ///<param name="dismissAction">Action to perform when popup is dismissed</param>
    ///<param name="autoclose">Close the popup automatically on mouse, pointer or keyboard activity</param>
    ///<param name="timeout">Time before closing (ms)</param>
    ///<param name="timeoutAction">Action to perform when popup is closed by timeout</param>
    ///<param name="style">CSS code to apply to the popup window</param>
    public void Popup(object content, IEnumerable<string>? browserId = null, string? title = null, object? size = null, string? rightButton = null, object? rightButtonAction = null, string? leftButton = null, object? leftButtonAction = null, bool? dismissable = null, object? dismissAction = null, bool? autoclose = null, double? timeout = null, object? timeoutAction = null, string? style = null)
    {
        _haContext.CallService("browser_mod", "popup", null, new BrowserModPopupParameters { BrowserId = browserId, Title = title, Content = content, Size = size, RightButton = rightButton, RightButtonAction = rightButtonAction, LeftButton = leftButton, LeftButtonAction = leftButtonAction, Dismissable = dismissable, DismissAction = dismissAction, Autoclose = autoclose, Timeout = timeout, TimeoutAction = timeoutAction, Style = style });
    }

    ///<summary>Refresh page</summary>
    public void Refresh(BrowserModRefreshParameters data)
    {
        _haContext.CallService("browser_mod", "refresh", null, data);
    }

    ///<summary>Refresh page</summary>
    ///<param name="browserId"></param>
    public void Refresh(IEnumerable<string>? browserId = null)
    {
        _haContext.CallService("browser_mod", "refresh", null, new BrowserModRefreshParameters { BrowserId = browserId });
    }

    ///<summary>Run a sequence of services</summary>
    public void Sequence(BrowserModSequenceParameters data)
    {
        _haContext.CallService("browser_mod", "sequence", null, data);
    }

    ///<summary>Run a sequence of services</summary>
    ///<param name="browserId"></param>
    ///<param name="sequence">List of services to run</param>
    public void Sequence(IEnumerable<string>? browserId = null, object? sequence = null)
    {
        _haContext.CallService("browser_mod", "sequence", null, new BrowserModSequenceParameters { BrowserId = browserId, Sequence = sequence });
    }

    ///<summary>Change the current theme</summary>
    public void SetTheme(BrowserModSetThemeParameters data)
    {
        _haContext.CallService("browser_mod", "set_theme", null, data);
    }

    ///<summary>Change the current theme</summary>
    ///<param name="browserId"></param>
    ///<param name="theme">Name of theme or &apos;auto&apos;</param>
    ///<param name="dark">Dark/light mode</param>
    ///<param name="primaryColor">Primary theme color</param>
    ///<param name="accentColor">Accent theme color</param>
    public void SetTheme(IEnumerable<string>? browserId = null, string? theme = null, object? dark = null, IReadOnlyCollection<int>? primaryColor = null, IReadOnlyCollection<int>? accentColor = null)
    {
        _haContext.CallService("browser_mod", "set_theme", null, new BrowserModSetThemeParameters { BrowserId = browserId, Theme = theme, Dark = dark, PrimaryColor = primaryColor, AccentColor = accentColor });
    }
}

public partial record BrowserModClosePopupParameters
{
    [JsonPropertyName("browser_id")]
    public IEnumerable<string>? BrowserId { get; init; }
}

public partial record BrowserModConsoleParameters
{
    [JsonPropertyName("browser_id")]
    public IEnumerable<string>? BrowserId { get; init; }

    ///<summary>Text to print</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }
}

public partial record BrowserModDelayParameters
{
    [JsonPropertyName("browser_id")]
    public IEnumerable<string>? BrowserId { get; init; }

    ///<summary>Time to wait (ms)</summary>
    [JsonPropertyName("time")]
    public double? Time { get; init; }
}

public partial record BrowserModJavascriptParameters
{
    [JsonPropertyName("browser_id")]
    public IEnumerable<string>? BrowserId { get; init; }

    ///<summary>JavaScript code to run</summary>
    [JsonPropertyName("code")]
    public object? Code { get; init; }
}

public partial record BrowserModMoreInfoParameters
{
    [JsonPropertyName("browser_id")]
    public IEnumerable<string>? BrowserId { get; init; }

    [JsonPropertyName("entity")]
    public string? Entity { get; init; }

    [JsonPropertyName("large")]
    public bool? Large { get; init; }

    [JsonPropertyName("ignore_popup_card")]
    public bool? IgnorePopupCard { get; init; }
}

public partial record BrowserModNavigateParameters
{
    [JsonPropertyName("browser_id")]
    public IEnumerable<string>? BrowserId { get; init; }

    ///<summary>Target path</summary>
    [JsonPropertyName("path")]
    public string? Path { get; init; }
}

public partial record BrowserModNotificationParameters
{
    [JsonPropertyName("browser_id")]
    public IEnumerable<string>? BrowserId { get; init; }

    ///<summary>Message to display</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary>Time before closing (ms)</summary>
    [JsonPropertyName("duration")]
    public double? Duration { get; init; }

    ///<summary>Text of optional action button</summary>
    [JsonPropertyName("action_text")]
    public string? ActionText { get; init; }

    ///<summary>Action to perform when the action button is pressed</summary>
    [JsonPropertyName("action")]
    public object? Action { get; init; }
}

public partial record BrowserModPopupParameters
{
    [JsonPropertyName("browser_id")]
    public IEnumerable<string>? BrowserId { get; init; }

    ///<summary>Popup title</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary>Popup content (Test or lovelace card configuration)</summary>
    [JsonPropertyName("content")]
    public object? Content { get; init; }

    [JsonPropertyName("size")]
    public object? Size { get; init; }

    ///<summary>Text of the right button</summary>
    [JsonPropertyName("right_button")]
    public string? RightButton { get; init; }

    ///<summary>Action to perform when the right button is pressed</summary>
    [JsonPropertyName("right_button_action")]
    public object? RightButtonAction { get; init; }

    ///<summary>Text of the left button</summary>
    [JsonPropertyName("left_button")]
    public string? LeftButton { get; init; }

    ///<summary>Action to perform when left button is pressed</summary>
    [JsonPropertyName("left_button_action")]
    public object? LeftButtonAction { get; init; }

    ///<summary>Whether the popup can be closed by the user without action</summary>
    [JsonPropertyName("dismissable")]
    public bool? Dismissable { get; init; }

    ///<summary>Action to perform when popup is dismissed</summary>
    [JsonPropertyName("dismiss_action")]
    public object? DismissAction { get; init; }

    ///<summary>Close the popup automatically on mouse, pointer or keyboard activity</summary>
    [JsonPropertyName("autoclose")]
    public bool? Autoclose { get; init; }

    ///<summary>Time before closing (ms)</summary>
    [JsonPropertyName("timeout")]
    public double? Timeout { get; init; }

    ///<summary>Action to perform when popup is closed by timeout</summary>
    [JsonPropertyName("timeout_action")]
    public object? TimeoutAction { get; init; }

    ///<summary>CSS code to apply to the popup window</summary>
    [JsonPropertyName("style")]
    public string? Style { get; init; }
}

public partial record BrowserModRefreshParameters
{
    [JsonPropertyName("browser_id")]
    public IEnumerable<string>? BrowserId { get; init; }
}

public partial record BrowserModSequenceParameters
{
    [JsonPropertyName("browser_id")]
    public IEnumerable<string>? BrowserId { get; init; }

    ///<summary>List of services to run</summary>
    [JsonPropertyName("sequence")]
    public object? Sequence { get; init; }
}

public partial record BrowserModSetThemeParameters
{
    [JsonPropertyName("browser_id")]
    public IEnumerable<string>? BrowserId { get; init; }

    ///<summary>Name of theme or &apos;auto&apos;</summary>
    [JsonPropertyName("theme")]
    public string? Theme { get; init; }

    ///<summary>Dark/light mode</summary>
    [JsonPropertyName("dark")]
    public object? Dark { get; init; }

    ///<summary>Primary theme color</summary>
    [JsonPropertyName("primaryColor")]
    public IReadOnlyCollection<int>? PrimaryColor { get; init; }

    ///<summary>Accent theme color</summary>
    [JsonPropertyName("accentColor")]
    public IReadOnlyCollection<int>? AccentColor { get; init; }
}

public partial class ButtonServices
{
    private readonly IHaContext _haContext;
    public ButtonServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Press the button entity.</summary>
    ///<param name="target">The target for this service call</param>
    public void Press(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("button", "press", target, data);
    }
}

public partial class CalendarServices
{
    private readonly IHaContext _haContext;
    public CalendarServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Adds a new calendar event.</summary>
    ///<param name="target">The target for this service call</param>
    public void CreateEvent(ServiceTarget target, CalendarCreateEventParameters data)
    {
        _haContext.CallService("calendar", "create_event", target, data);
    }

    ///<summary>Adds a new calendar event.</summary>
    ///<param name="summary">Defines the short summary or subject for the event. eg: Department Party</param>
    ///<param name="description">A more complete description of the event than the one provided by the summary. eg: Meeting to provide technical review for &apos;Phoenix&apos; design.</param>
    ///<param name="startDateTime">The date and time the event should start. eg: 2022-03-22 20:00:00</param>
    ///<param name="endDateTime">The date and time the event should end. eg: 2022-03-22 22:00:00</param>
    ///<param name="startDate">The date the all-day event should start. eg: 2022-03-22</param>
    ///<param name="endDate">The date the all-day event should end (exclusive). eg: 2022-03-23</param>
    ///<param name="in">Days or weeks that you want to create the event in. eg: {&quot;days&quot;: 2} or {&quot;weeks&quot;: 2}</param>
    ///<param name="location">The location of the event. eg: Conference Room - F123, Bldg. 002</param>
    public void CreateEvent(ServiceTarget target, string summary, string? description = null, DateTime? startDateTime = null, DateTime? endDateTime = null, DateOnly? startDate = null, DateOnly? endDate = null, object? @in = null, string? location = null)
    {
        _haContext.CallService("calendar", "create_event", target, new CalendarCreateEventParameters { Summary = summary, Description = description, StartDateTime = startDateTime, EndDateTime = endDateTime, StartDate = startDate, EndDate = endDate, In = @in, Location = location });
    }

    ///<summary>Get events on a calendar within a time range.</summary>
    ///<param name="target">The target for this service call</param>
    public void GetEvents(ServiceTarget target, CalendarGetEventsParameters data)
    {
        _haContext.CallService("calendar", "get_events", target, data);
    }

    ///<summary>Get events on a calendar within a time range.</summary>
    ///<param name="startDateTime">Returns active events after this time (exclusive). When not set, defaults to now. eg: 2022-03-22 20:00:00</param>
    ///<param name="endDateTime">Returns active events before this time (exclusive). Cannot be used with &apos;duration&apos;. eg: 2022-03-22 22:00:00</param>
    ///<param name="duration">Returns active events from start_date_time until the specified duration.</param>
    public void GetEvents(ServiceTarget target, DateTime? startDateTime = null, DateTime? endDateTime = null, object? duration = null)
    {
        _haContext.CallService("calendar", "get_events", target, new CalendarGetEventsParameters { StartDateTime = startDateTime, EndDateTime = endDateTime, Duration = duration });
    }

    ///<summary>Get events on a calendar within a time range.</summary>
    ///<param name="target">The target for this service call</param>
    public Task<JsonElement?> GetEventsAsync(ServiceTarget target, CalendarGetEventsParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("calendar", "get_events", target, data);
    }

    ///<summary>Get events on a calendar within a time range.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="startDateTime">Returns active events after this time (exclusive). When not set, defaults to now. eg: 2022-03-22 20:00:00</param>
    ///<param name="endDateTime">Returns active events before this time (exclusive). Cannot be used with &apos;duration&apos;. eg: 2022-03-22 22:00:00</param>
    ///<param name="duration">Returns active events from start_date_time until the specified duration.</param>
    public Task<JsonElement?> GetEventsAsync(ServiceTarget target, DateTime? startDateTime = null, DateTime? endDateTime = null, object? duration = null)
    {
        return _haContext.CallServiceWithResponseAsync("calendar", "get_events", target, new CalendarGetEventsParameters { StartDateTime = startDateTime, EndDateTime = endDateTime, Duration = duration });
    }
}

public partial record CalendarCreateEventParameters
{
    ///<summary>Defines the short summary or subject for the event. eg: Department Party</summary>
    [JsonPropertyName("summary")]
    public string? Summary { get; init; }

    ///<summary>A more complete description of the event than the one provided by the summary. eg: Meeting to provide technical review for &apos;Phoenix&apos; design.</summary>
    [JsonPropertyName("description")]
    public string? Description { get; init; }

    ///<summary>The date and time the event should start. eg: 2022-03-22 20:00:00</summary>
    [JsonPropertyName("start_date_time")]
    public DateTime? StartDateTime { get; init; }

    ///<summary>The date and time the event should end. eg: 2022-03-22 22:00:00</summary>
    [JsonPropertyName("end_date_time")]
    public DateTime? EndDateTime { get; init; }

    ///<summary>The date the all-day event should start. eg: 2022-03-22</summary>
    [JsonPropertyName("start_date")]
    public DateOnly? StartDate { get; init; }

    ///<summary>The date the all-day event should end (exclusive). eg: 2022-03-23</summary>
    [JsonPropertyName("end_date")]
    public DateOnly? EndDate { get; init; }

    ///<summary>Days or weeks that you want to create the event in. eg: {&quot;days&quot;: 2} or {&quot;weeks&quot;: 2}</summary>
    [JsonPropertyName("in")]
    public object? In { get; init; }

    ///<summary>The location of the event. eg: Conference Room - F123, Bldg. 002</summary>
    [JsonPropertyName("location")]
    public string? Location { get; init; }
}

public partial record CalendarGetEventsParameters
{
    ///<summary>Returns active events after this time (exclusive). When not set, defaults to now. eg: 2022-03-22 20:00:00</summary>
    [JsonPropertyName("start_date_time")]
    public DateTime? StartDateTime { get; init; }

    ///<summary>Returns active events before this time (exclusive). Cannot be used with &apos;duration&apos;. eg: 2022-03-22 22:00:00</summary>
    [JsonPropertyName("end_date_time")]
    public DateTime? EndDateTime { get; init; }

    ///<summary>Returns active events from start_date_time until the specified duration.</summary>
    [JsonPropertyName("duration")]
    public object? Duration { get; init; }
}

public partial class CameraServices
{
    private readonly IHaContext _haContext;
    public CameraServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Disables the motion detection.</summary>
    ///<param name="target">The target for this service call</param>
    public void DisableMotionDetection(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("camera", "disable_motion_detection", target, data);
    }

    ///<summary>Enables the motion detection.</summary>
    ///<param name="target">The target for this service call</param>
    public void EnableMotionDetection(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("camera", "enable_motion_detection", target, data);
    }

    ///<summary>Plays the camera stream on a supported media player.</summary>
    ///<param name="target">The target for this service call</param>
    public void PlayStream(ServiceTarget target, CameraPlayStreamParameters data)
    {
        _haContext.CallService("camera", "play_stream", target, data);
    }

    ///<summary>Plays the camera stream on a supported media player.</summary>
    ///<param name="mediaPlayer">Media players to stream to.</param>
    ///<param name="format">Stream format supported by the media player.</param>
    public void PlayStream(ServiceTarget target, string mediaPlayer, object? format = null)
    {
        _haContext.CallService("camera", "play_stream", target, new CameraPlayStreamParameters { MediaPlayer = mediaPlayer, Format = format });
    }

    ///<summary>Creates a recording of a live camera feed.</summary>
    ///<param name="target">The target for this service call</param>
    public void Record(ServiceTarget target, CameraRecordParameters data)
    {
        _haContext.CallService("camera", "record", target, data);
    }

    ///<summary>Creates a recording of a live camera feed.</summary>
    ///<param name="filename">Full path to filename. Must be mp4. eg: /tmp/snapshot_{{ entity_id.name }}.mp4</param>
    ///<param name="duration">Planned duration of the recording. The actual duration may vary.</param>
    ///<param name="lookback">Planned lookback period to include in the recording (in addition to the duration). Only available if there is currently an active HLS stream. The actual length of the lookback period may vary.</param>
    public void Record(ServiceTarget target, string filename, double? duration = null, double? lookback = null)
    {
        _haContext.CallService("camera", "record", target, new CameraRecordParameters { Filename = filename, Duration = duration, Lookback = lookback });
    }

    ///<summary>Takes a snapshot from a camera.</summary>
    ///<param name="target">The target for this service call</param>
    public void Snapshot(ServiceTarget target, CameraSnapshotParameters data)
    {
        _haContext.CallService("camera", "snapshot", target, data);
    }

    ///<summary>Takes a snapshot from a camera.</summary>
    ///<param name="filename">Full path to filename. eg: /tmp/snapshot_{{ entity_id.name }}.jpg</param>
    public void Snapshot(ServiceTarget target, string filename)
    {
        _haContext.CallService("camera", "snapshot", target, new CameraSnapshotParameters { Filename = filename });
    }

    ///<summary>Turns off the camera.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("camera", "turn_off", target, data);
    }

    ///<summary>Turns on the camera.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("camera", "turn_on", target, data);
    }
}

public partial record CameraPlayStreamParameters
{
    ///<summary>Media players to stream to.</summary>
    [JsonPropertyName("media_player")]
    public string? MediaPlayer { get; init; }

    ///<summary>Stream format supported by the media player.</summary>
    [JsonPropertyName("format")]
    public object? Format { get; init; }
}

public partial record CameraRecordParameters
{
    ///<summary>Full path to filename. Must be mp4. eg: /tmp/snapshot_{{ entity_id.name }}.mp4</summary>
    [JsonPropertyName("filename")]
    public string? Filename { get; init; }

    ///<summary>Planned duration of the recording. The actual duration may vary.</summary>
    [JsonPropertyName("duration")]
    public double? Duration { get; init; }

    ///<summary>Planned lookback period to include in the recording (in addition to the duration). Only available if there is currently an active HLS stream. The actual length of the lookback period may vary.</summary>
    [JsonPropertyName("lookback")]
    public double? Lookback { get; init; }
}

public partial record CameraSnapshotParameters
{
    ///<summary>Full path to filename. eg: /tmp/snapshot_{{ entity_id.name }}.jpg</summary>
    [JsonPropertyName("filename")]
    public string? Filename { get; init; }
}

public partial class ClimateServices
{
    private readonly IHaContext _haContext;
    public ClimateServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Turns auxiliary heater on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetAuxHeat(ServiceTarget target, ClimateSetAuxHeatParameters data)
    {
        _haContext.CallService("climate", "set_aux_heat", target, data);
    }

    ///<summary>Turns auxiliary heater on/off.</summary>
    ///<param name="auxHeat">New value of auxiliary heater.</param>
    public void SetAuxHeat(ServiceTarget target, bool auxHeat)
    {
        _haContext.CallService("climate", "set_aux_heat", target, new ClimateSetAuxHeatParameters { AuxHeat = auxHeat });
    }

    ///<summary>Sets fan operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetFanMode(ServiceTarget target, ClimateSetFanModeParameters data)
    {
        _haContext.CallService("climate", "set_fan_mode", target, data);
    }

    ///<summary>Sets fan operation mode.</summary>
    ///<param name="fanMode">Fan operation mode. eg: low</param>
    public void SetFanMode(ServiceTarget target, string fanMode)
    {
        _haContext.CallService("climate", "set_fan_mode", target, new ClimateSetFanModeParameters { FanMode = fanMode });
    }

    ///<summary>Sets target humidity.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetHumidity(ServiceTarget target, ClimateSetHumidityParameters data)
    {
        _haContext.CallService("climate", "set_humidity", target, data);
    }

    ///<summary>Sets target humidity.</summary>
    ///<param name="humidity">Target humidity.</param>
    public void SetHumidity(ServiceTarget target, double humidity)
    {
        _haContext.CallService("climate", "set_humidity", target, new ClimateSetHumidityParameters { Humidity = humidity });
    }

    ///<summary>Sets HVAC operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetHvacMode(ServiceTarget target, ClimateSetHvacModeParameters data)
    {
        _haContext.CallService("climate", "set_hvac_mode", target, data);
    }

    ///<summary>Sets HVAC operation mode.</summary>
    ///<param name="hvacMode">HVAC operation mode.</param>
    public void SetHvacMode(ServiceTarget target, object? hvacMode = null)
    {
        _haContext.CallService("climate", "set_hvac_mode", target, new ClimateSetHvacModeParameters { HvacMode = hvacMode });
    }

    ///<summary>Sets preset mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetPresetMode(ServiceTarget target, ClimateSetPresetModeParameters data)
    {
        _haContext.CallService("climate", "set_preset_mode", target, data);
    }

    ///<summary>Sets preset mode.</summary>
    ///<param name="presetMode">Preset mode. eg: away</param>
    public void SetPresetMode(ServiceTarget target, string presetMode)
    {
        _haContext.CallService("climate", "set_preset_mode", target, new ClimateSetPresetModeParameters { PresetMode = presetMode });
    }

    ///<summary>Sets swing operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetSwingMode(ServiceTarget target, ClimateSetSwingModeParameters data)
    {
        _haContext.CallService("climate", "set_swing_mode", target, data);
    }

    ///<summary>Sets swing operation mode.</summary>
    ///<param name="swingMode">Swing operation mode. eg: horizontal</param>
    public void SetSwingMode(ServiceTarget target, string swingMode)
    {
        _haContext.CallService("climate", "set_swing_mode", target, new ClimateSetSwingModeParameters { SwingMode = swingMode });
    }

    ///<summary>Sets target temperature.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetTemperature(ServiceTarget target, ClimateSetTemperatureParameters data)
    {
        _haContext.CallService("climate", "set_temperature", target, data);
    }

    ///<summary>Sets target temperature.</summary>
    ///<param name="temperature">Target temperature.</param>
    ///<param name="targetTempHigh">High target temperature.</param>
    ///<param name="targetTempLow">Low target temperature.</param>
    ///<param name="hvacMode">HVAC operation mode.</param>
    public void SetTemperature(ServiceTarget target, double? temperature = null, double? targetTempHigh = null, double? targetTempLow = null, object? hvacMode = null)
    {
        _haContext.CallService("climate", "set_temperature", target, new ClimateSetTemperatureParameters { Temperature = temperature, TargetTempHigh = targetTempHigh, TargetTempLow = targetTempLow, HvacMode = hvacMode });
    }

    ///<summary>Toggles climate device, from on to off, or off to on.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("climate", "toggle", target, data);
    }

    ///<summary>Turns climate device off.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("climate", "turn_off", target, data);
    }

    ///<summary>Turns climate device on.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("climate", "turn_on", target, data);
    }
}

public partial record ClimateSetAuxHeatParameters
{
    ///<summary>New value of auxiliary heater.</summary>
    [JsonPropertyName("aux_heat")]
    public bool? AuxHeat { get; init; }
}

public partial record ClimateSetFanModeParameters
{
    ///<summary>Fan operation mode. eg: low</summary>
    [JsonPropertyName("fan_mode")]
    public string? FanMode { get; init; }
}

public partial record ClimateSetHumidityParameters
{
    ///<summary>Target humidity.</summary>
    [JsonPropertyName("humidity")]
    public double? Humidity { get; init; }
}

public partial record ClimateSetHvacModeParameters
{
    ///<summary>HVAC operation mode.</summary>
    [JsonPropertyName("hvac_mode")]
    public object? HvacMode { get; init; }
}

public partial record ClimateSetPresetModeParameters
{
    ///<summary>Preset mode. eg: away</summary>
    [JsonPropertyName("preset_mode")]
    public string? PresetMode { get; init; }
}

public partial record ClimateSetSwingModeParameters
{
    ///<summary>Swing operation mode. eg: horizontal</summary>
    [JsonPropertyName("swing_mode")]
    public string? SwingMode { get; init; }
}

public partial record ClimateSetTemperatureParameters
{
    ///<summary>Target temperature.</summary>
    [JsonPropertyName("temperature")]
    public double? Temperature { get; init; }

    ///<summary>High target temperature.</summary>
    [JsonPropertyName("target_temp_high")]
    public double? TargetTempHigh { get; init; }

    ///<summary>Low target temperature.</summary>
    [JsonPropertyName("target_temp_low")]
    public double? TargetTempLow { get; init; }

    ///<summary>HVAC operation mode.</summary>
    [JsonPropertyName("hvac_mode")]
    public object? HvacMode { get; init; }
}

public partial class CloudServices
{
    private readonly IHaContext _haContext;
    public CloudServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Makes the instance UI accessible from outside of the local network by using Home Assistant Cloud.</summary>
    public void RemoteConnect(object? data = null)
    {
        _haContext.CallService("cloud", "remote_connect", null, data);
    }

    ///<summary>Disconnects the Home Assistant UI from the Home Assistant Cloud. You will no longer be able to access your Home Assistant instance from outside your local network.</summary>
    public void RemoteDisconnect(object? data = null)
    {
        _haContext.CallService("cloud", "remote_disconnect", null, data);
    }
}

public partial class ConversationServices
{
    private readonly IHaContext _haContext;
    public ConversationServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Launches a conversation from a transcribed text.</summary>
    public void Process(ConversationProcessParameters data)
    {
        _haContext.CallService("conversation", "process", null, data);
    }

    ///<summary>Launches a conversation from a transcribed text.</summary>
    ///<param name="text">Transcribed text input. eg: Turn all lights on</param>
    ///<param name="language">Language of text. Defaults to server language. eg: NL</param>
    ///<param name="agentId">Conversation agent to process your request. The conversation agent is the brains of your assistant. It processes the incoming text commands. eg: homeassistant</param>
    ///<param name="conversationId">ID of the conversation, to be able to continue a previous conversation eg: my_conversation_1</param>
    public void Process(string text, string? language = null, object? agentId = null, string? conversationId = null)
    {
        _haContext.CallService("conversation", "process", null, new ConversationProcessParameters { Text = text, Language = language, AgentId = agentId, ConversationId = conversationId });
    }

    ///<summary>Launches a conversation from a transcribed text.</summary>
    public Task<JsonElement?> ProcessAsync(ConversationProcessParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("conversation", "process", null, data);
    }

    ///<summary>Launches a conversation from a transcribed text.</summary>
    ///<param name="text">Transcribed text input. eg: Turn all lights on</param>
    ///<param name="language">Language of text. Defaults to server language. eg: NL</param>
    ///<param name="agentId">Conversation agent to process your request. The conversation agent is the brains of your assistant. It processes the incoming text commands. eg: homeassistant</param>
    ///<param name="conversationId">ID of the conversation, to be able to continue a previous conversation eg: my_conversation_1</param>
    public Task<JsonElement?> ProcessAsync(string text, string? language = null, object? agentId = null, string? conversationId = null)
    {
        return _haContext.CallServiceWithResponseAsync("conversation", "process", null, new ConversationProcessParameters { Text = text, Language = language, AgentId = agentId, ConversationId = conversationId });
    }

    ///<summary>Reloads the intent configuration.</summary>
    public void Reload(ConversationReloadParameters data)
    {
        _haContext.CallService("conversation", "reload", null, data);
    }

    ///<summary>Reloads the intent configuration.</summary>
    ///<param name="language">Language to clear cached intents for. Defaults to server language. eg: NL</param>
    ///<param name="agentId">Conversation agent to reload. eg: homeassistant</param>
    public void Reload(string? language = null, object? agentId = null)
    {
        _haContext.CallService("conversation", "reload", null, new ConversationReloadParameters { Language = language, AgentId = agentId });
    }
}

public partial record ConversationProcessParameters
{
    ///<summary>Transcribed text input. eg: Turn all lights on</summary>
    [JsonPropertyName("text")]
    public string? Text { get; init; }

    ///<summary>Language of text. Defaults to server language. eg: NL</summary>
    [JsonPropertyName("language")]
    public string? Language { get; init; }

    ///<summary>Conversation agent to process your request. The conversation agent is the brains of your assistant. It processes the incoming text commands. eg: homeassistant</summary>
    [JsonPropertyName("agent_id")]
    public object? AgentId { get; init; }

    ///<summary>ID of the conversation, to be able to continue a previous conversation eg: my_conversation_1</summary>
    [JsonPropertyName("conversation_id")]
    public string? ConversationId { get; init; }
}

public partial record ConversationReloadParameters
{
    ///<summary>Language to clear cached intents for. Defaults to server language. eg: NL</summary>
    [JsonPropertyName("language")]
    public string? Language { get; init; }

    ///<summary>Conversation agent to reload. eg: homeassistant</summary>
    [JsonPropertyName("agent_id")]
    public object? AgentId { get; init; }
}

public partial class CounterServices
{
    private readonly IHaContext _haContext;
    public CounterServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Decrements a counter.</summary>
    ///<param name="target">The target for this service call</param>
    public void Decrement(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("counter", "decrement", target, data);
    }

    ///<summary>Increments a counter.</summary>
    ///<param name="target">The target for this service call</param>
    public void Increment(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("counter", "increment", target, data);
    }

    ///<summary>Resets a counter.</summary>
    ///<param name="target">The target for this service call</param>
    public void Reset(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("counter", "reset", target, data);
    }

    ///<summary>Sets the counter value.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValue(ServiceTarget target, CounterSetValueParameters data)
    {
        _haContext.CallService("counter", "set_value", target, data);
    }

    ///<summary>Sets the counter value.</summary>
    ///<param name="value">The new counter value the entity should be set to.</param>
    public void SetValue(ServiceTarget target, double value)
    {
        _haContext.CallService("counter", "set_value", target, new CounterSetValueParameters { Value = value });
    }
}

public partial record CounterSetValueParameters
{
    ///<summary>The new counter value the entity should be set to.</summary>
    [JsonPropertyName("value")]
    public double? Value { get; init; }
}

public partial class CoverServices
{
    private readonly IHaContext _haContext;
    public CoverServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Closes a cover.</summary>
    ///<param name="target">The target for this service call</param>
    public void CloseCover(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("cover", "close_cover", target, data);
    }

    ///<summary>Tilts a cover to close.</summary>
    ///<param name="target">The target for this service call</param>
    public void CloseCoverTilt(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("cover", "close_cover_tilt", target, data);
    }

    ///<summary>Opens a cover.</summary>
    ///<param name="target">The target for this service call</param>
    public void OpenCover(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("cover", "open_cover", target, data);
    }

    ///<summary>Tilts a cover open.</summary>
    ///<param name="target">The target for this service call</param>
    public void OpenCoverTilt(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("cover", "open_cover_tilt", target, data);
    }

    ///<summary>Moves a cover to a specific position.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetCoverPosition(ServiceTarget target, CoverSetCoverPositionParameters data)
    {
        _haContext.CallService("cover", "set_cover_position", target, data);
    }

    ///<summary>Moves a cover to a specific position.</summary>
    ///<param name="position">Target position.</param>
    public void SetCoverPosition(ServiceTarget target, double position)
    {
        _haContext.CallService("cover", "set_cover_position", target, new CoverSetCoverPositionParameters { Position = position });
    }

    ///<summary>Moves a cover tilt to a specific position.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetCoverTiltPosition(ServiceTarget target, CoverSetCoverTiltPositionParameters data)
    {
        _haContext.CallService("cover", "set_cover_tilt_position", target, data);
    }

    ///<summary>Moves a cover tilt to a specific position.</summary>
    ///<param name="tiltPosition">Target tilt positition.</param>
    public void SetCoverTiltPosition(ServiceTarget target, double tiltPosition)
    {
        _haContext.CallService("cover", "set_cover_tilt_position", target, new CoverSetCoverTiltPositionParameters { TiltPosition = tiltPosition });
    }

    ///<summary>Stops the cover movement.</summary>
    ///<param name="target">The target for this service call</param>
    public void StopCover(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("cover", "stop_cover", target, data);
    }

    ///<summary>Stops a tilting cover movement.</summary>
    ///<param name="target">The target for this service call</param>
    public void StopCoverTilt(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("cover", "stop_cover_tilt", target, data);
    }

    ///<summary>Toggles a cover open/closed.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("cover", "toggle", target, data);
    }

    ///<summary>Toggles a cover tilt open/closed.</summary>
    ///<param name="target">The target for this service call</param>
    public void ToggleCoverTilt(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("cover", "toggle_cover_tilt", target, data);
    }
}

public partial record CoverSetCoverPositionParameters
{
    ///<summary>Target position.</summary>
    [JsonPropertyName("position")]
    public double? Position { get; init; }
}

public partial record CoverSetCoverTiltPositionParameters
{
    ///<summary>Target tilt positition.</summary>
    [JsonPropertyName("tilt_position")]
    public double? TiltPosition { get; init; }
}

public partial class DeviceTrackerServices
{
    private readonly IHaContext _haContext;
    public DeviceTrackerServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Records a seen tracked device.</summary>
    public void See(DeviceTrackerSeeParameters data)
    {
        _haContext.CallService("device_tracker", "see", null, data);
    }

    ///<summary>Records a seen tracked device.</summary>
    ///<param name="mac">MAC address of the device. eg: FF:FF:FF:FF:FF:FF</param>
    ///<param name="devId">ID of the device (find the ID in `known_devices.yaml`). eg: phonedave</param>
    ///<param name="hostName">Hostname of the device. eg: Dave</param>
    ///<param name="locationName">Name of the location where the device is located. The options are: `home`, `not_home`, or the name of the zone. eg: home</param>
    ///<param name="gps">GPS coordinates where the device is located, specified by latitude and longitude (for example: [51.513845, -0.100539]). eg: [51.509802, -0.086692]</param>
    ///<param name="gpsAccuracy">Accuracy of the GPS coordinates.</param>
    ///<param name="battery">Battery level of the device.</param>
    public void See(string? mac = null, string? devId = null, string? hostName = null, string? locationName = null, object? gps = null, double? gpsAccuracy = null, double? battery = null)
    {
        _haContext.CallService("device_tracker", "see", null, new DeviceTrackerSeeParameters { Mac = mac, DevId = devId, HostName = hostName, LocationName = locationName, Gps = gps, GpsAccuracy = gpsAccuracy, Battery = battery });
    }
}

public partial record DeviceTrackerSeeParameters
{
    ///<summary>MAC address of the device. eg: FF:FF:FF:FF:FF:FF</summary>
    [JsonPropertyName("mac")]
    public string? Mac { get; init; }

    ///<summary>ID of the device (find the ID in `known_devices.yaml`). eg: phonedave</summary>
    [JsonPropertyName("dev_id")]
    public string? DevId { get; init; }

    ///<summary>Hostname of the device. eg: Dave</summary>
    [JsonPropertyName("host_name")]
    public string? HostName { get; init; }

    ///<summary>Name of the location where the device is located. The options are: `home`, `not_home`, or the name of the zone. eg: home</summary>
    [JsonPropertyName("location_name")]
    public string? LocationName { get; init; }

    ///<summary>GPS coordinates where the device is located, specified by latitude and longitude (for example: [51.513845, -0.100539]). eg: [51.509802, -0.086692]</summary>
    [JsonPropertyName("gps")]
    public object? Gps { get; init; }

    ///<summary>Accuracy of the GPS coordinates.</summary>
    [JsonPropertyName("gps_accuracy")]
    public double? GpsAccuracy { get; init; }

    ///<summary>Battery level of the device.</summary>
    [JsonPropertyName("battery")]
    public double? Battery { get; init; }
}

public partial class EsphomeServices
{
    private readonly IHaContext _haContext;
    public EsphomeServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Calls the service notification_clear of the node nspanel</summary>
    public void NspanelNotificationClear(object? data = null)
    {
        _haContext.CallService("esphome", "nspanel_notification_clear", null, data);
    }

    ///<summary>Calls the service notification_show of the node nspanel</summary>
    public void NspanelNotificationShow(EsphomeNspanelNotificationShowParameters data)
    {
        _haContext.CallService("esphome", "nspanel_notification_show", null, data);
    }

    ///<summary>Calls the service notification_show of the node nspanel</summary>
    ///<param name="label"> eg: Example text</param>
    ///<param name="text"> eg: Example text</param>
    public void NspanelNotificationShow(string label, string text)
    {
        _haContext.CallService("esphome", "nspanel_notification_show", null, new EsphomeNspanelNotificationShowParameters { Label = label, Text = text });
    }

    ///<summary>Calls the service play_rtttl of the node nspanel</summary>
    public void NspanelPlayRtttl(EsphomeNspanelPlayRtttlParameters data)
    {
        _haContext.CallService("esphome", "nspanel_play_rtttl", null, data);
    }

    ///<summary>Calls the service play_rtttl of the node nspanel</summary>
    ///<param name="songStr"> eg: Example text</param>
    public void NspanelPlayRtttl(string songStr)
    {
        _haContext.CallService("esphome", "nspanel_play_rtttl", null, new EsphomeNspanelPlayRtttlParameters { SongStr = songStr });
    }

    ///<summary>Calls the service qr_code of the node nspanel</summary>
    public void NspanelQrCode(EsphomeNspanelQrCodeParameters data)
    {
        _haContext.CallService("esphome", "nspanel_qr_code", null, data);
    }

    ///<summary>Calls the service qr_code of the node nspanel</summary>
    ///<param name="qrdata"> eg: Example text</param>
    public void NspanelQrCode(string qrdata)
    {
        _haContext.CallService("esphome", "nspanel_qr_code", null, new EsphomeNspanelQrCodeParameters { Qrdata = qrdata });
    }

    ///<summary>Calls the service send_command_background_color of the node nspanel</summary>
    public void NspanelSendCommandBackgroundColor(EsphomeNspanelSendCommandBackgroundColorParameters data)
    {
        _haContext.CallService("esphome", "nspanel_send_command_background_color", null, data);
    }

    ///<summary>Calls the service send_command_background_color of the node nspanel</summary>
    ///<param name="component"> eg: Example text</param>
    ///<param name="message"> eg: 42</param>
    public void NspanelSendCommandBackgroundColor(string component, double message)
    {
        _haContext.CallService("esphome", "nspanel_send_command_background_color", null, new EsphomeNspanelSendCommandBackgroundColorParameters { Component = component, Message = message });
    }

    ///<summary>Calls the service send_command_font_color of the node nspanel</summary>
    public void NspanelSendCommandFontColor(EsphomeNspanelSendCommandFontColorParameters data)
    {
        _haContext.CallService("esphome", "nspanel_send_command_font_color", null, data);
    }

    ///<summary>Calls the service send_command_font_color of the node nspanel</summary>
    ///<param name="component"> eg: Example text</param>
    ///<param name="message"> eg: 42</param>
    public void NspanelSendCommandFontColor(string component, double message)
    {
        _haContext.CallService("esphome", "nspanel_send_command_font_color", null, new EsphomeNspanelSendCommandFontColorParameters { Component = component, Message = message });
    }

    ///<summary>Calls the service send_command_hide of the node nspanel</summary>
    public void NspanelSendCommandHide(EsphomeNspanelSendCommandHideParameters data)
    {
        _haContext.CallService("esphome", "nspanel_send_command_hide", null, data);
    }

    ///<summary>Calls the service send_command_hide of the node nspanel</summary>
    ///<param name="component"> eg: Example text</param>
    public void NspanelSendCommandHide(string component)
    {
        _haContext.CallService("esphome", "nspanel_send_command_hide", null, new EsphomeNspanelSendCommandHideParameters { Component = component });
    }

    ///<summary>Calls the service send_command_printf of the node nspanel</summary>
    public void NspanelSendCommandPrintf(EsphomeNspanelSendCommandPrintfParameters data)
    {
        _haContext.CallService("esphome", "nspanel_send_command_printf", null, data);
    }

    ///<summary>Calls the service send_command_printf of the node nspanel</summary>
    ///<param name="cmd"> eg: Example text</param>
    public void NspanelSendCommandPrintf(string cmd)
    {
        _haContext.CallService("esphome", "nspanel_send_command_printf", null, new EsphomeNspanelSendCommandPrintfParameters { Cmd = cmd });
    }

    ///<summary>Calls the service send_command_show of the node nspanel</summary>
    public void NspanelSendCommandShow(EsphomeNspanelSendCommandShowParameters data)
    {
        _haContext.CallService("esphome", "nspanel_send_command_show", null, data);
    }

    ///<summary>Calls the service send_command_show of the node nspanel</summary>
    ///<param name="component"> eg: Example text</param>
    public void NspanelSendCommandShow(string component)
    {
        _haContext.CallService("esphome", "nspanel_send_command_show", null, new EsphomeNspanelSendCommandShowParameters { Component = component });
    }

    ///<summary>Calls the service send_command_show_all of the node nspanel</summary>
    public void NspanelSendCommandShowAll(object? data = null)
    {
        _haContext.CallService("esphome", "nspanel_send_command_show_all", null, data);
    }

    ///<summary>Calls the service send_command_text_printf of the node nspanel</summary>
    public void NspanelSendCommandTextPrintf(EsphomeNspanelSendCommandTextPrintfParameters data)
    {
        _haContext.CallService("esphome", "nspanel_send_command_text_printf", null, data);
    }

    ///<summary>Calls the service send_command_text_printf of the node nspanel</summary>
    ///<param name="component"> eg: Example text</param>
    ///<param name="message"> eg: Example text</param>
    public void NspanelSendCommandTextPrintf(string component, string message)
    {
        _haContext.CallService("esphome", "nspanel_send_command_text_printf", null, new EsphomeNspanelSendCommandTextPrintfParameters { Component = component, Message = message });
    }

    ///<summary>Calls the service send_command_value of the node nspanel</summary>
    public void NspanelSendCommandValue(EsphomeNspanelSendCommandValueParameters data)
    {
        _haContext.CallService("esphome", "nspanel_send_command_value", null, data);
    }

    ///<summary>Calls the service send_command_value of the node nspanel</summary>
    ///<param name="component"> eg: Example text</param>
    ///<param name="message"> eg: 42</param>
    public void NspanelSendCommandValue(string component, double message)
    {
        _haContext.CallService("esphome", "nspanel_send_command_value", null, new EsphomeNspanelSendCommandValueParameters { Component = component, Message = message });
    }

    ///<summary>Calls the service send_thermostat_cycle_state of the node nspanel</summary>
    public void NspanelSendThermostatCycleState(EsphomeNspanelSendThermostatCycleStateParameters data)
    {
        _haContext.CallService("esphome", "nspanel_send_thermostat_cycle_state", null, data);
    }

    ///<summary>Calls the service send_thermostat_cycle_state of the node nspanel</summary>
    ///<param name="value"> eg: 12.3</param>
    public void NspanelSendThermostatCycleState(double value)
    {
        _haContext.CallService("esphome", "nspanel_send_thermostat_cycle_state", null, new EsphomeNspanelSendThermostatCycleStateParameters { Value = value });
    }

    ///<summary>Calls the service set_button of the node nspanel</summary>
    public void NspanelSetButton(EsphomeNspanelSetButtonParameters data)
    {
        _haContext.CallService("esphome", "nspanel_set_button", null, data);
    }

    ///<summary>Calls the service set_button of the node nspanel</summary>
    ///<param name="btnId"> eg: Example text</param>
    ///<param name="btnPic"> eg: 42</param>
    ///<param name="btnBg"> eg: 42</param>
    ///<param name="btnIconFont"> eg: 42</param>
    ///<param name="btnTxtFont"> eg: 42</param>
    ///<param name="btnBriFont"> eg: 42</param>
    ///<param name="btnIcon"> eg: Example text</param>
    ///<param name="btnLabel"> eg: Example text</param>
    ///<param name="btnBriTxt"> eg: Example text</param>
    public void NspanelSetButton(string btnId, double btnPic, double btnBg, double btnIconFont, double btnTxtFont, double btnBriFont, string btnIcon, string btnLabel, string btnBriTxt)
    {
        _haContext.CallService("esphome", "nspanel_set_button", null, new EsphomeNspanelSetButtonParameters { BtnId = btnId, BtnPic = btnPic, BtnBg = btnBg, BtnIconFont = btnIconFont, BtnTxtFont = btnTxtFont, BtnBriFont = btnBriFont, BtnIcon = btnIcon, BtnLabel = btnLabel, BtnBriTxt = btnBriTxt });
    }

    ///<summary>Calls the service set_settings_entity of the node nspanel</summary>
    public void NspanelSetSettingsEntity(EsphomeNspanelSetSettingsEntityParameters data)
    {
        _haContext.CallService("esphome", "nspanel_set_settings_entity", null, data);
    }

    ///<summary>Calls the service set_settings_entity of the node nspanel</summary>
    ///<param name="entity"> eg: Example text</param>
    public void NspanelSetSettingsEntity(string entity)
    {
        _haContext.CallService("esphome", "nspanel_set_settings_entity", null, new EsphomeNspanelSetSettingsEntityParameters { Entity = entity });
    }

    ///<summary>Calls the service upload_tft of the node nspanel</summary>
    public void NspanelUploadTft(object? data = null)
    {
        _haContext.CallService("esphome", "nspanel_upload_tft", null, data);
    }

    ///<summary>Calls the service upload_tft_url of the node nspanel</summary>
    public void NspanelUploadTftUrl(EsphomeNspanelUploadTftUrlParameters data)
    {
        _haContext.CallService("esphome", "nspanel_upload_tft_url", null, data);
    }

    ///<summary>Calls the service upload_tft_url of the node nspanel</summary>
    ///<param name="url"> eg: Example text</param>
    public void NspanelUploadTftUrl(string url)
    {
        _haContext.CallService("esphome", "nspanel_upload_tft_url", null, new EsphomeNspanelUploadTftUrlParameters { Url = url });
    }
}

public partial record EsphomeNspanelNotificationShowParameters
{
    ///<summary> eg: Example text</summary>
    [JsonPropertyName("label")]
    public string? Label { get; init; }

    ///<summary> eg: Example text</summary>
    [JsonPropertyName("text")]
    public string? Text { get; init; }
}

public partial record EsphomeNspanelPlayRtttlParameters
{
    ///<summary> eg: Example text</summary>
    [JsonPropertyName("song_str")]
    public string? SongStr { get; init; }
}

public partial record EsphomeNspanelQrCodeParameters
{
    ///<summary> eg: Example text</summary>
    [JsonPropertyName("qrdata")]
    public string? Qrdata { get; init; }
}

public partial record EsphomeNspanelSendCommandBackgroundColorParameters
{
    ///<summary> eg: Example text</summary>
    [JsonPropertyName("component")]
    public string? Component { get; init; }

    ///<summary> eg: 42</summary>
    [JsonPropertyName("message")]
    public double? Message { get; init; }
}

public partial record EsphomeNspanelSendCommandFontColorParameters
{
    ///<summary> eg: Example text</summary>
    [JsonPropertyName("component")]
    public string? Component { get; init; }

    ///<summary> eg: 42</summary>
    [JsonPropertyName("message")]
    public double? Message { get; init; }
}

public partial record EsphomeNspanelSendCommandHideParameters
{
    ///<summary> eg: Example text</summary>
    [JsonPropertyName("component")]
    public string? Component { get; init; }
}

public partial record EsphomeNspanelSendCommandPrintfParameters
{
    ///<summary> eg: Example text</summary>
    [JsonPropertyName("cmd")]
    public string? Cmd { get; init; }
}

public partial record EsphomeNspanelSendCommandShowParameters
{
    ///<summary> eg: Example text</summary>
    [JsonPropertyName("component")]
    public string? Component { get; init; }
}

public partial record EsphomeNspanelSendCommandTextPrintfParameters
{
    ///<summary> eg: Example text</summary>
    [JsonPropertyName("component")]
    public string? Component { get; init; }

    ///<summary> eg: Example text</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }
}

public partial record EsphomeNspanelSendCommandValueParameters
{
    ///<summary> eg: Example text</summary>
    [JsonPropertyName("component")]
    public string? Component { get; init; }

    ///<summary> eg: 42</summary>
    [JsonPropertyName("message")]
    public double? Message { get; init; }
}

public partial record EsphomeNspanelSendThermostatCycleStateParameters
{
    ///<summary> eg: 12.3</summary>
    [JsonPropertyName("value")]
    public double? Value { get; init; }
}

public partial record EsphomeNspanelSetButtonParameters
{
    ///<summary> eg: Example text</summary>
    [JsonPropertyName("btn_id")]
    public string? BtnId { get; init; }

    ///<summary> eg: 42</summary>
    [JsonPropertyName("btn_pic")]
    public double? BtnPic { get; init; }

    ///<summary> eg: 42</summary>
    [JsonPropertyName("btn_bg")]
    public double? BtnBg { get; init; }

    ///<summary> eg: 42</summary>
    [JsonPropertyName("btn_icon_font")]
    public double? BtnIconFont { get; init; }

    ///<summary> eg: 42</summary>
    [JsonPropertyName("btn_txt_font")]
    public double? BtnTxtFont { get; init; }

    ///<summary> eg: 42</summary>
    [JsonPropertyName("btn_bri_font")]
    public double? BtnBriFont { get; init; }

    ///<summary> eg: Example text</summary>
    [JsonPropertyName("btn_icon")]
    public string? BtnIcon { get; init; }

    ///<summary> eg: Example text</summary>
    [JsonPropertyName("btn_label")]
    public string? BtnLabel { get; init; }

    ///<summary> eg: Example text</summary>
    [JsonPropertyName("btn_bri_txt")]
    public string? BtnBriTxt { get; init; }
}

public partial record EsphomeNspanelSetSettingsEntityParameters
{
    ///<summary> eg: Example text</summary>
    [JsonPropertyName("entity")]
    public string? Entity { get; init; }
}

public partial record EsphomeNspanelUploadTftUrlParameters
{
    ///<summary> eg: Example text</summary>
    [JsonPropertyName("url")]
    public string? Url { get; init; }
}

public partial class FanServices
{
    private readonly IHaContext _haContext;
    public FanServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Decreases the speed of the fan.</summary>
    ///<param name="target">The target for this service call</param>
    public void DecreaseSpeed(ServiceTarget target, FanDecreaseSpeedParameters data)
    {
        _haContext.CallService("fan", "decrease_speed", target, data);
    }

    ///<summary>Decreases the speed of the fan.</summary>
    ///<param name="percentageStep">Decreases the speed by a percentage step.</param>
    public void DecreaseSpeed(ServiceTarget target, double? percentageStep = null)
    {
        _haContext.CallService("fan", "decrease_speed", target, new FanDecreaseSpeedParameters { PercentageStep = percentageStep });
    }

    ///<summary>Increases the speed of the fan.</summary>
    ///<param name="target">The target for this service call</param>
    public void IncreaseSpeed(ServiceTarget target, FanIncreaseSpeedParameters data)
    {
        _haContext.CallService("fan", "increase_speed", target, data);
    }

    ///<summary>Increases the speed of the fan.</summary>
    ///<param name="percentageStep">Increases the speed by a percentage step.</param>
    public void IncreaseSpeed(ServiceTarget target, double? percentageStep = null)
    {
        _haContext.CallService("fan", "increase_speed", target, new FanIncreaseSpeedParameters { PercentageStep = percentageStep });
    }

    ///<summary>Controls oscillatation of the fan.</summary>
    ///<param name="target">The target for this service call</param>
    public void Oscillate(ServiceTarget target, FanOscillateParameters data)
    {
        _haContext.CallService("fan", "oscillate", target, data);
    }

    ///<summary>Controls oscillatation of the fan.</summary>
    ///<param name="oscillating">Turn on/off oscillation.</param>
    public void Oscillate(ServiceTarget target, bool oscillating)
    {
        _haContext.CallService("fan", "oscillate", target, new FanOscillateParameters { Oscillating = oscillating });
    }

    ///<summary>Sets the fan rotation direction.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetDirection(ServiceTarget target, FanSetDirectionParameters data)
    {
        _haContext.CallService("fan", "set_direction", target, data);
    }

    ///<summary>Sets the fan rotation direction.</summary>
    ///<param name="direction">Direction to rotate.</param>
    public void SetDirection(ServiceTarget target, object direction)
    {
        _haContext.CallService("fan", "set_direction", target, new FanSetDirectionParameters { Direction = direction });
    }

    ///<summary>Sets the fan speed.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetPercentage(ServiceTarget target, FanSetPercentageParameters data)
    {
        _haContext.CallService("fan", "set_percentage", target, data);
    }

    ///<summary>Sets the fan speed.</summary>
    ///<param name="percentage">Speed of the fan.</param>
    public void SetPercentage(ServiceTarget target, double percentage)
    {
        _haContext.CallService("fan", "set_percentage", target, new FanSetPercentageParameters { Percentage = percentage });
    }

    ///<summary>Sets preset mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetPresetMode(ServiceTarget target, FanSetPresetModeParameters data)
    {
        _haContext.CallService("fan", "set_preset_mode", target, data);
    }

    ///<summary>Sets preset mode.</summary>
    ///<param name="presetMode">Preset mode. eg: auto</param>
    public void SetPresetMode(ServiceTarget target, string presetMode)
    {
        _haContext.CallService("fan", "set_preset_mode", target, new FanSetPresetModeParameters { PresetMode = presetMode });
    }

    ///<summary>Toggles the fan on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("fan", "toggle", target, data);
    }

    ///<summary>Turns fan off.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("fan", "turn_off", target, data);
    }

    ///<summary>Turns fan on.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, FanTurnOnParameters data)
    {
        _haContext.CallService("fan", "turn_on", target, data);
    }

    ///<summary>Turns fan on.</summary>
    ///<param name="percentage">Speed of the fan.</param>
    ///<param name="presetMode">Preset mode. eg: auto</param>
    public void TurnOn(ServiceTarget target, double? percentage = null, string? presetMode = null)
    {
        _haContext.CallService("fan", "turn_on", target, new FanTurnOnParameters { Percentage = percentage, PresetMode = presetMode });
    }
}

public partial record FanDecreaseSpeedParameters
{
    ///<summary>Decreases the speed by a percentage step.</summary>
    [JsonPropertyName("percentage_step")]
    public double? PercentageStep { get; init; }
}

public partial record FanIncreaseSpeedParameters
{
    ///<summary>Increases the speed by a percentage step.</summary>
    [JsonPropertyName("percentage_step")]
    public double? PercentageStep { get; init; }
}

public partial record FanOscillateParameters
{
    ///<summary>Turn on/off oscillation.</summary>
    [JsonPropertyName("oscillating")]
    public bool? Oscillating { get; init; }
}

public partial record FanSetDirectionParameters
{
    ///<summary>Direction to rotate.</summary>
    [JsonPropertyName("direction")]
    public object? Direction { get; init; }
}

public partial record FanSetPercentageParameters
{
    ///<summary>Speed of the fan.</summary>
    [JsonPropertyName("percentage")]
    public double? Percentage { get; init; }
}

public partial record FanSetPresetModeParameters
{
    ///<summary>Preset mode. eg: auto</summary>
    [JsonPropertyName("preset_mode")]
    public string? PresetMode { get; init; }
}

public partial record FanTurnOnParameters
{
    ///<summary>Speed of the fan.</summary>
    [JsonPropertyName("percentage")]
    public double? Percentage { get; init; }

    ///<summary>Preset mode. eg: auto</summary>
    [JsonPropertyName("preset_mode")]
    public string? PresetMode { get; init; }
}

public partial class FfmpegServices
{
    private readonly IHaContext _haContext;
    public FfmpegServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sends a restart command to a ffmpeg based sensor.</summary>
    public void Restart(FfmpegRestartParameters data)
    {
        _haContext.CallService("ffmpeg", "restart", null, data);
    }

    ///<summary>Sends a restart command to a ffmpeg based sensor.</summary>
    ///<param name="entityId">Name of entity that will restart. Platform dependent.</param>
    public void Restart(string? entityId = null)
    {
        _haContext.CallService("ffmpeg", "restart", null, new FfmpegRestartParameters { EntityId = entityId });
    }

    ///<summary>Sends a start command to a ffmpeg based sensor.</summary>
    public void Start(FfmpegStartParameters data)
    {
        _haContext.CallService("ffmpeg", "start", null, data);
    }

    ///<summary>Sends a start command to a ffmpeg based sensor.</summary>
    ///<param name="entityId">Name of entity that will start. Platform dependent.</param>
    public void Start(string? entityId = null)
    {
        _haContext.CallService("ffmpeg", "start", null, new FfmpegStartParameters { EntityId = entityId });
    }

    ///<summary>Sends a stop command to a ffmpeg based sensor.</summary>
    public void Stop(FfmpegStopParameters data)
    {
        _haContext.CallService("ffmpeg", "stop", null, data);
    }

    ///<summary>Sends a stop command to a ffmpeg based sensor.</summary>
    ///<param name="entityId">Name of entity that will stop. Platform dependent.</param>
    public void Stop(string? entityId = null)
    {
        _haContext.CallService("ffmpeg", "stop", null, new FfmpegStopParameters { EntityId = entityId });
    }
}

public partial record FfmpegRestartParameters
{
    ///<summary>Name of entity that will restart. Platform dependent.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }
}

public partial record FfmpegStartParameters
{
    ///<summary>Name of entity that will start. Platform dependent.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }
}

public partial record FfmpegStopParameters
{
    ///<summary>Name of entity that will stop. Platform dependent.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }
}

public partial class FrontendServices
{
    private readonly IHaContext _haContext;
    public FrontendServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads themes from the YAML-configuration.</summary>
    public void ReloadThemes(object? data = null)
    {
        _haContext.CallService("frontend", "reload_themes", null, data);
    }

    ///<summary>Sets the default theme Home Assistant uses. Can be overridden by a user.</summary>
    public void SetTheme(FrontendSetThemeParameters data)
    {
        _haContext.CallService("frontend", "set_theme", null, data);
    }

    ///<summary>Sets the default theme Home Assistant uses. Can be overridden by a user.</summary>
    ///<param name="name">Name of a theme. eg: default</param>
    ///<param name="mode">Theme mode.</param>
    public void SetTheme(object name, object? mode = null)
    {
        _haContext.CallService("frontend", "set_theme", null, new FrontendSetThemeParameters { Name = name, Mode = mode });
    }
}

public partial record FrontendSetThemeParameters
{
    ///<summary>Name of a theme. eg: default</summary>
    [JsonPropertyName("name")]
    public object? Name { get; init; }

    ///<summary>Theme mode.</summary>
    [JsonPropertyName("mode")]
    public object? Mode { get; init; }
}

public partial class FullyKioskServices
{
    private readonly IHaContext _haContext;
    public FullyKioskServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Loads a URL on Fully Kiosk Browser.</summary>
    ///<param name="target">The target for this service call</param>
    public void LoadUrl(ServiceTarget target, FullyKioskLoadUrlParameters data)
    {
        _haContext.CallService("fully_kiosk", "load_url", target, data);
    }

    ///<summary>Loads a URL on Fully Kiosk Browser.</summary>
    ///<param name="url">URL to load. eg: https://home-assistant.io</param>
    public void LoadUrl(ServiceTarget target, string url)
    {
        _haContext.CallService("fully_kiosk", "load_url", target, new FullyKioskLoadUrlParameters { Url = url });
    }

    ///<summary>Sets a configuration parameter on Fully Kiosk Browser.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetConfig(ServiceTarget target, FullyKioskSetConfigParameters data)
    {
        _haContext.CallService("fully_kiosk", "set_config", target, data);
    }

    ///<summary>Sets a configuration parameter on Fully Kiosk Browser.</summary>
    ///<param name="key">Configuration parameter to set. eg: motionSensitivity</param>
    ///<param name="value">Value for the configuration parameter. eg: 90</param>
    public void SetConfig(ServiceTarget target, string key, string value)
    {
        _haContext.CallService("fully_kiosk", "set_config", target, new FullyKioskSetConfigParameters { Key = key, Value = value });
    }

    ///<summary>Starts an application on the device running Fully Kiosk Browser.</summary>
    ///<param name="target">The target for this service call</param>
    public void StartApplication(ServiceTarget target, FullyKioskStartApplicationParameters data)
    {
        _haContext.CallService("fully_kiosk", "start_application", target, data);
    }

    ///<summary>Starts an application on the device running Fully Kiosk Browser.</summary>
    ///<param name="application">Package name of the application to start. eg: de.ozerov.fully</param>
    public void StartApplication(ServiceTarget target, string application)
    {
        _haContext.CallService("fully_kiosk", "start_application", target, new FullyKioskStartApplicationParameters { Application = application });
    }
}

public partial record FullyKioskLoadUrlParameters
{
    ///<summary>URL to load. eg: https://home-assistant.io</summary>
    [JsonPropertyName("url")]
    public string? Url { get; init; }
}

public partial record FullyKioskSetConfigParameters
{
    ///<summary>Configuration parameter to set. eg: motionSensitivity</summary>
    [JsonPropertyName("key")]
    public string? Key { get; init; }

    ///<summary>Value for the configuration parameter. eg: 90</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }
}

public partial record FullyKioskStartApplicationParameters
{
    ///<summary>Package name of the application to start. eg: de.ozerov.fully</summary>
    [JsonPropertyName("application")]
    public string? Application { get; init; }
}

public partial class GoogleServices
{
    private readonly IHaContext _haContext;
    public GoogleServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Adds a new calendar event.</summary>
    public void AddEvent(GoogleAddEventParameters data)
    {
        _haContext.CallService("google", "add_event", null, data);
    }

    ///<summary>Adds a new calendar event.</summary>
    ///<param name="calendarId">The id of the calendar you want. eg: Your email</param>
    ///<param name="summary">Acts as the title of the event. eg: Bowling</param>
    ///<param name="description">The description of the event. Optional. eg: Birthday bowling</param>
    ///<param name="startDateTime">The date and time the event should start. eg: 2019-03-22 20:00:00</param>
    ///<param name="endDateTime">The date and time the event should end. eg: 2019-03-22 22:00:00</param>
    ///<param name="startDate">The date the whole day event should start. eg: 2019-03-10</param>
    ///<param name="endDate">The date the whole day event should end. eg: 2019-03-11</param>
    ///<param name="in">Days or weeks that you want to create the event in. eg: &quot;days&quot;: 2 or &quot;weeks&quot;: 2</param>
    public void AddEvent(string calendarId, string summary, string? description = null, string? startDateTime = null, string? endDateTime = null, string? startDate = null, string? endDate = null, object? @in = null)
    {
        _haContext.CallService("google", "add_event", null, new GoogleAddEventParameters { CalendarId = calendarId, Summary = summary, Description = description, StartDateTime = startDateTime, EndDateTime = endDateTime, StartDate = startDate, EndDate = endDate, In = @in });
    }

    ///<summary>Add a new calendar event.</summary>
    ///<param name="target">The target for this service call</param>
    public void CreateEvent(ServiceTarget target, GoogleCreateEventParameters data)
    {
        _haContext.CallService("google", "create_event", target, data);
    }

    ///<summary>Add a new calendar event.</summary>
    ///<param name="summary">Acts as the title of the event. eg: Bowling</param>
    ///<param name="description">The description of the event. Optional. eg: Birthday bowling</param>
    ///<param name="startDateTime">The date and time the event should start. eg: 2022-03-22 20:00:00</param>
    ///<param name="endDateTime">The date and time the event should end. eg: 2022-03-22 22:00:00</param>
    ///<param name="startDate">The date the whole day event should start. eg: 2022-03-10</param>
    ///<param name="endDate">The date the whole day event should end. eg: 2022-03-11</param>
    ///<param name="in">Days or weeks that you want to create the event in. eg: &quot;days&quot;: 2 or &quot;weeks&quot;: 2</param>
    ///<param name="location">The location of the event. Optional. eg: Conference Room - F123, Bldg. 002</param>
    public void CreateEvent(ServiceTarget target, string summary, string? description = null, string? startDateTime = null, string? endDateTime = null, string? startDate = null, string? endDate = null, object? @in = null, string? location = null)
    {
        _haContext.CallService("google", "create_event", target, new GoogleCreateEventParameters { Summary = summary, Description = description, StartDateTime = startDateTime, EndDateTime = endDateTime, StartDate = startDate, EndDate = endDate, In = @in, Location = location });
    }
}

public partial record GoogleAddEventParameters
{
    ///<summary>The id of the calendar you want. eg: Your email</summary>
    [JsonPropertyName("calendar_id")]
    public string? CalendarId { get; init; }

    ///<summary>Acts as the title of the event. eg: Bowling</summary>
    [JsonPropertyName("summary")]
    public string? Summary { get; init; }

    ///<summary>The description of the event. Optional. eg: Birthday bowling</summary>
    [JsonPropertyName("description")]
    public string? Description { get; init; }

    ///<summary>The date and time the event should start. eg: 2019-03-22 20:00:00</summary>
    [JsonPropertyName("start_date_time")]
    public string? StartDateTime { get; init; }

    ///<summary>The date and time the event should end. eg: 2019-03-22 22:00:00</summary>
    [JsonPropertyName("end_date_time")]
    public string? EndDateTime { get; init; }

    ///<summary>The date the whole day event should start. eg: 2019-03-10</summary>
    [JsonPropertyName("start_date")]
    public string? StartDate { get; init; }

    ///<summary>The date the whole day event should end. eg: 2019-03-11</summary>
    [JsonPropertyName("end_date")]
    public string? EndDate { get; init; }

    ///<summary>Days or weeks that you want to create the event in. eg: &quot;days&quot;: 2 or &quot;weeks&quot;: 2</summary>
    [JsonPropertyName("in")]
    public object? In { get; init; }
}

public partial record GoogleCreateEventParameters
{
    ///<summary>Acts as the title of the event. eg: Bowling</summary>
    [JsonPropertyName("summary")]
    public string? Summary { get; init; }

    ///<summary>The description of the event. Optional. eg: Birthday bowling</summary>
    [JsonPropertyName("description")]
    public string? Description { get; init; }

    ///<summary>The date and time the event should start. eg: 2022-03-22 20:00:00</summary>
    [JsonPropertyName("start_date_time")]
    public string? StartDateTime { get; init; }

    ///<summary>The date and time the event should end. eg: 2022-03-22 22:00:00</summary>
    [JsonPropertyName("end_date_time")]
    public string? EndDateTime { get; init; }

    ///<summary>The date the whole day event should start. eg: 2022-03-10</summary>
    [JsonPropertyName("start_date")]
    public string? StartDate { get; init; }

    ///<summary>The date the whole day event should end. eg: 2022-03-11</summary>
    [JsonPropertyName("end_date")]
    public string? EndDate { get; init; }

    ///<summary>Days or weeks that you want to create the event in. eg: &quot;days&quot;: 2 or &quot;weeks&quot;: 2</summary>
    [JsonPropertyName("in")]
    public object? In { get; init; }

    ///<summary>The location of the event. Optional. eg: Conference Room - F123, Bldg. 002</summary>
    [JsonPropertyName("location")]
    public string? Location { get; init; }
}

public partial class GoogleGenerativeAiConversationServices
{
    private readonly IHaContext _haContext;
    public GoogleGenerativeAiConversationServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Generate content from a prompt consisting of text and optionally images</summary>
    public void GenerateContent(GoogleGenerativeAiConversationGenerateContentParameters data)
    {
        _haContext.CallService("google_generative_ai_conversation", "generate_content", null, data);
    }

    ///<summary>Generate content from a prompt consisting of text and optionally images</summary>
    ///<param name="prompt">The prompt eg: Describe what you see in these images</param>
    ///<param name="imageFilename">Images eg: /config/www/image.jpg</param>
    public void GenerateContent(string prompt, object? imageFilename = null)
    {
        _haContext.CallService("google_generative_ai_conversation", "generate_content", null, new GoogleGenerativeAiConversationGenerateContentParameters { Prompt = prompt, ImageFilename = imageFilename });
    }

    ///<summary>Generate content from a prompt consisting of text and optionally images</summary>
    public Task<JsonElement?> GenerateContentAsync(GoogleGenerativeAiConversationGenerateContentParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("google_generative_ai_conversation", "generate_content", null, data);
    }

    ///<summary>Generate content from a prompt consisting of text and optionally images</summary>
    ///<param name="prompt">The prompt eg: Describe what you see in these images</param>
    ///<param name="imageFilename">Images eg: /config/www/image.jpg</param>
    public Task<JsonElement?> GenerateContentAsync(string prompt, object? imageFilename = null)
    {
        return _haContext.CallServiceWithResponseAsync("google_generative_ai_conversation", "generate_content", null, new GoogleGenerativeAiConversationGenerateContentParameters { Prompt = prompt, ImageFilename = imageFilename });
    }
}

public partial record GoogleGenerativeAiConversationGenerateContentParameters
{
    ///<summary>The prompt eg: Describe what you see in these images</summary>
    [JsonPropertyName("prompt")]
    public string? Prompt { get; init; }

    ///<summary>Images eg: /config/www/image.jpg</summary>
    [JsonPropertyName("image_filename")]
    public object? ImageFilename { get; init; }
}

public partial class GroupServices
{
    private readonly IHaContext _haContext;
    public GroupServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads group configuration, entities, and notify services from YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("group", "reload", null, data);
    }

    ///<summary>Removes a group.</summary>
    public void Remove(GroupRemoveParameters data)
    {
        _haContext.CallService("group", "remove", null, data);
    }

    ///<summary>Removes a group.</summary>
    ///<param name="objectId">Object ID of this group. This object ID is used as part of the entity ID. Entity ID format: [domain].[object_id]. eg: test_group</param>
    public void Remove(object objectId)
    {
        _haContext.CallService("group", "remove", null, new GroupRemoveParameters { ObjectId = objectId });
    }

    ///<summary>Creates/Updates a user group.</summary>
    public void Set(GroupSetParameters data)
    {
        _haContext.CallService("group", "set", null, data);
    }

    ///<summary>Creates/Updates a user group.</summary>
    ///<param name="objectId">Object ID of this group. This object ID is used as part of the entity ID. Entity ID format: [domain].[object_id]. eg: test_group</param>
    ///<param name="name">Name of the group. eg: My test group</param>
    ///<param name="icon">Name of the icon for the group. eg: mdi:camera</param>
    ///<param name="entities">List of all members in the group. Cannot be used in combination with `Add entities` or `Remove entities`. eg: domain.entity_id1, domain.entity_id2</param>
    ///<param name="addEntities">List of members to be added to the group. Cannot be used in combination with `Entities` or `Remove entities`. eg: domain.entity_id1, domain.entity_id2</param>
    ///<param name="removeEntities">List of members to be removed from a group. Cannot be used in combination with `Entities` or `Add entities`. eg: domain.entity_id1, domain.entity_id2</param>
    ///<param name="all">Enable this option if the group should only be used when all entities are in state `on`.</param>
    public void Set(string objectId, string? name = null, object? icon = null, IEnumerable<string>? entities = null, IEnumerable<string>? addEntities = null, IEnumerable<string>? removeEntities = null, bool? all = null)
    {
        _haContext.CallService("group", "set", null, new GroupSetParameters { ObjectId = objectId, Name = name, Icon = icon, Entities = entities, AddEntities = addEntities, RemoveEntities = removeEntities, All = all });
    }
}

public partial record GroupRemoveParameters
{
    ///<summary>Object ID of this group. This object ID is used as part of the entity ID. Entity ID format: [domain].[object_id]. eg: test_group</summary>
    [JsonPropertyName("object_id")]
    public object? ObjectId { get; init; }
}

public partial record GroupSetParameters
{
    ///<summary>Object ID of this group. This object ID is used as part of the entity ID. Entity ID format: [domain].[object_id]. eg: test_group</summary>
    [JsonPropertyName("object_id")]
    public string? ObjectId { get; init; }

    ///<summary>Name of the group. eg: My test group</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>Name of the icon for the group. eg: mdi:camera</summary>
    [JsonPropertyName("icon")]
    public object? Icon { get; init; }

    ///<summary>List of all members in the group. Cannot be used in combination with `Add entities` or `Remove entities`. eg: domain.entity_id1, domain.entity_id2</summary>
    [JsonPropertyName("entities")]
    public IEnumerable<string>? Entities { get; init; }

    ///<summary>List of members to be added to the group. Cannot be used in combination with `Entities` or `Remove entities`. eg: domain.entity_id1, domain.entity_id2</summary>
    [JsonPropertyName("add_entities")]
    public IEnumerable<string>? AddEntities { get; init; }

    ///<summary>List of members to be removed from a group. Cannot be used in combination with `Entities` or `Add entities`. eg: domain.entity_id1, domain.entity_id2</summary>
    [JsonPropertyName("remove_entities")]
    public IEnumerable<string>? RemoveEntities { get; init; }

    ///<summary>Enable this option if the group should only be used when all entities are in state `on`.</summary>
    [JsonPropertyName("all")]
    public bool? All { get; init; }
}

public partial class HabiticaServices
{
    private readonly IHaContext _haContext;
    public HabiticaServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Calls Habitica API.</summary>
    public void ApiCall(HabiticaApiCallParameters data)
    {
        _haContext.CallService("habitica", "api_call", null, data);
    }

    ///<summary>Calls Habitica API.</summary>
    ///<param name="name">Habitica&apos;s username to call for. eg: xxxNotAValidNickxxx</param>
    ///<param name="path">Items from API URL in form of an array with method attached at the end. Consult https://habitica.com/apidoc/. Example uses https://habitica.com/apidoc/#api-Task-CreateUserTasks. eg: [&quot;tasks&quot;, &quot;user&quot;, &quot;post&quot;]</param>
    ///<param name="args">Any additional JSON or URL parameter arguments. See apidoc mentioned for path. Example uses same API endpoint. eg: {&quot;text&quot;: &quot;Use API from Home Assistant&quot;, &quot;type&quot;: &quot;todo&quot;}</param>
    public void ApiCall(string name, object path, object? args = null)
    {
        _haContext.CallService("habitica", "api_call", null, new HabiticaApiCallParameters { Name = name, Path = path, Args = args });
    }

    ///<summary>Use a skill or spell from your Habitica character on a specific task to affect its progress or status.</summary>
    public void CastSkill(HabiticaCastSkillParameters data)
    {
        _haContext.CallService("habitica", "cast_skill", null, data);
    }

    ///<summary>Use a skill or spell from your Habitica character on a specific task to affect its progress or status.</summary>
    ///<param name="configEntry">Choose the Habitica character to cast the skill.</param>
    ///<param name="skill">Select the skill or spell you want to cast on the task. Only skills corresponding to your character&apos;s class can be used.</param>
    ///<param name="task">The name (or task ID) of the task you want to target with the skill or spell.</param>
    public void CastSkill(object configEntry, object skill, string task)
    {
        _haContext.CallService("habitica", "cast_skill", null, new HabiticaCastSkillParameters { ConfigEntry = configEntry, Skill = skill, Task = task });
    }

    ///<summary>Use a skill or spell from your Habitica character on a specific task to affect its progress or status.</summary>
    public Task<JsonElement?> CastSkillAsync(HabiticaCastSkillParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("habitica", "cast_skill", null, data);
    }

    ///<summary>Use a skill or spell from your Habitica character on a specific task to affect its progress or status.</summary>
    ///<param name="configEntry">Choose the Habitica character to cast the skill.</param>
    ///<param name="skill">Select the skill or spell you want to cast on the task. Only skills corresponding to your character&apos;s class can be used.</param>
    ///<param name="task">The name (or task ID) of the task you want to target with the skill or spell.</param>
    public Task<JsonElement?> CastSkillAsync(object configEntry, object skill, string task)
    {
        return _haContext.CallServiceWithResponseAsync("habitica", "cast_skill", null, new HabiticaCastSkillParameters { ConfigEntry = configEntry, Skill = skill, Task = task });
    }
}

public partial record HabiticaApiCallParameters
{
    ///<summary>Habitica&apos;s username to call for. eg: xxxNotAValidNickxxx</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>Items from API URL in form of an array with method attached at the end. Consult https://habitica.com/apidoc/. Example uses https://habitica.com/apidoc/#api-Task-CreateUserTasks. eg: [&quot;tasks&quot;, &quot;user&quot;, &quot;post&quot;]</summary>
    [JsonPropertyName("path")]
    public object? Path { get; init; }

    ///<summary>Any additional JSON or URL parameter arguments. See apidoc mentioned for path. Example uses same API endpoint. eg: {&quot;text&quot;: &quot;Use API from Home Assistant&quot;, &quot;type&quot;: &quot;todo&quot;}</summary>
    [JsonPropertyName("args")]
    public object? Args { get; init; }
}

public partial record HabiticaCastSkillParameters
{
    ///<summary>Choose the Habitica character to cast the skill.</summary>
    [JsonPropertyName("config_entry")]
    public object? ConfigEntry { get; init; }

    ///<summary>Select the skill or spell you want to cast on the task. Only skills corresponding to your character&apos;s class can be used.</summary>
    [JsonPropertyName("skill")]
    public object? Skill { get; init; }

    ///<summary>The name (or task ID) of the task you want to target with the skill or spell.</summary>
    [JsonPropertyName("task")]
    public string? Task { get; init; }
}

public partial class HassioServices
{
    private readonly IHaContext _haContext;
    public HassioServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Restarts an add-on.</summary>
    public void AddonRestart(HassioAddonRestartParameters data)
    {
        _haContext.CallService("hassio", "addon_restart", null, data);
    }

    ///<summary>Restarts an add-on.</summary>
    ///<param name="addon">The add-on slug. eg: core_ssh</param>
    public void AddonRestart(object addon)
    {
        _haContext.CallService("hassio", "addon_restart", null, new HassioAddonRestartParameters { Addon = addon });
    }

    ///<summary>Starts an add-on.</summary>
    public void AddonStart(HassioAddonStartParameters data)
    {
        _haContext.CallService("hassio", "addon_start", null, data);
    }

    ///<summary>Starts an add-on.</summary>
    ///<param name="addon">The add-on slug. eg: core_ssh</param>
    public void AddonStart(object addon)
    {
        _haContext.CallService("hassio", "addon_start", null, new HassioAddonStartParameters { Addon = addon });
    }

    ///<summary>Writes data to add-on stdin.</summary>
    public void AddonStdin(HassioAddonStdinParameters data)
    {
        _haContext.CallService("hassio", "addon_stdin", null, data);
    }

    ///<summary>Writes data to add-on stdin.</summary>
    ///<param name="addon">The add-on slug. eg: core_ssh</param>
    public void AddonStdin(object addon)
    {
        _haContext.CallService("hassio", "addon_stdin", null, new HassioAddonStdinParameters { Addon = addon });
    }

    ///<summary>Stops an add-on.</summary>
    public void AddonStop(HassioAddonStopParameters data)
    {
        _haContext.CallService("hassio", "addon_stop", null, data);
    }

    ///<summary>Stops an add-on.</summary>
    ///<param name="addon">The add-on slug. eg: core_ssh</param>
    public void AddonStop(object addon)
    {
        _haContext.CallService("hassio", "addon_stop", null, new HassioAddonStopParameters { Addon = addon });
    }

    ///<summary>Updates an add-on. This action should be used with caution since add-on updates can contain breaking changes. It is highly recommended that you review release notes/change logs before updating an add-on.</summary>
    public void AddonUpdate(HassioAddonUpdateParameters data)
    {
        _haContext.CallService("hassio", "addon_update", null, data);
    }

    ///<summary>Updates an add-on. This action should be used with caution since add-on updates can contain breaking changes. It is highly recommended that you review release notes/change logs before updating an add-on.</summary>
    ///<param name="addon">The add-on slug. eg: core_ssh</param>
    public void AddonUpdate(object addon)
    {
        _haContext.CallService("hassio", "addon_update", null, new HassioAddonUpdateParameters { Addon = addon });
    }

    ///<summary>Creates a full backup.</summary>
    public void BackupFull(HassioBackupFullParameters data)
    {
        _haContext.CallService("hassio", "backup_full", null, data);
    }

    ///<summary>Creates a full backup.</summary>
    ///<param name="name">Optional (default = current date and time). eg: Backup 1</param>
    ///<param name="password">Password to protect the backup with. eg: password</param>
    ///<param name="compressed">Compresses the backup files.</param>
    ///<param name="location">Name of a backup network storage to host backups. eg: my_backup_mount</param>
    ///<param name="homeassistantExcludeDatabase">Exclude the Home Assistant database file from backup</param>
    public void BackupFull(string? name = null, string? password = null, bool? compressed = null, object? location = null, bool? homeassistantExcludeDatabase = null)
    {
        _haContext.CallService("hassio", "backup_full", null, new HassioBackupFullParameters { Name = name, Password = password, Compressed = compressed, Location = location, HomeassistantExcludeDatabase = homeassistantExcludeDatabase });
    }

    ///<summary>Creates a partial backup.</summary>
    public void BackupPartial(HassioBackupPartialParameters data)
    {
        _haContext.CallService("hassio", "backup_partial", null, data);
    }

    ///<summary>Creates a partial backup.</summary>
    ///<param name="homeassistant">Includes Home Assistant settings in the backup.</param>
    ///<param name="homeassistantExcludeDatabase">Exclude the Home Assistant database file from backup</param>
    ///<param name="addons">List of add-ons to include in the backup. Use the name slug of the add-on. eg: [&quot;core_ssh&quot;,&quot;core_samba&quot;,&quot;core_mosquitto&quot;]</param>
    ///<param name="folders">List of directories to include in the backup. eg: [&quot;homeassistant&quot;,&quot;share&quot;]</param>
    ///<param name="name">Optional (default = current date and time). eg: Partial backup 1</param>
    ///<param name="password">Password to protect the backup with. eg: password</param>
    ///<param name="compressed">Compresses the backup files.</param>
    ///<param name="location">Name of a backup network storage to host backups. eg: my_backup_mount</param>
    public void BackupPartial(bool? homeassistant = null, bool? homeassistantExcludeDatabase = null, object? addons = null, object? folders = null, string? name = null, string? password = null, bool? compressed = null, object? location = null)
    {
        _haContext.CallService("hassio", "backup_partial", null, new HassioBackupPartialParameters { Homeassistant = homeassistant, HomeassistantExcludeDatabase = homeassistantExcludeDatabase, Addons = addons, Folders = folders, Name = name, Password = password, Compressed = compressed, Location = location });
    }

    ///<summary>Reboots the host system.</summary>
    public void HostReboot(object? data = null)
    {
        _haContext.CallService("hassio", "host_reboot", null, data);
    }

    ///<summary>Powers off the host system.</summary>
    public void HostShutdown(object? data = null)
    {
        _haContext.CallService("hassio", "host_shutdown", null, data);
    }

    ///<summary>Restores from full backup.</summary>
    public void RestoreFull(HassioRestoreFullParameters data)
    {
        _haContext.CallService("hassio", "restore_full", null, data);
    }

    ///<summary>Restores from full backup.</summary>
    ///<param name="slug">Slug of backup to restore from.</param>
    ///<param name="password">Optional password. eg: password</param>
    public void RestoreFull(string slug, string? password = null)
    {
        _haContext.CallService("hassio", "restore_full", null, new HassioRestoreFullParameters { Slug = slug, Password = password });
    }

    ///<summary>Restores from a partial backup.</summary>
    public void RestorePartial(HassioRestorePartialParameters data)
    {
        _haContext.CallService("hassio", "restore_partial", null, data);
    }

    ///<summary>Restores from a partial backup.</summary>
    ///<param name="slug">Slug of backup to restore from.</param>
    ///<param name="homeassistant">Restores Home Assistant.</param>
    ///<param name="folders">List of directories to include in the backup. eg: [&quot;homeassistant&quot;,&quot;share&quot;]</param>
    ///<param name="addons">List of add-ons to include in the backup. Use the name slug of the add-on. eg: [&quot;core_ssh&quot;,&quot;core_samba&quot;,&quot;core_mosquitto&quot;]</param>
    ///<param name="password">Optional password. eg: password</param>
    public void RestorePartial(string slug, bool? homeassistant = null, object? folders = null, object? addons = null, string? password = null)
    {
        _haContext.CallService("hassio", "restore_partial", null, new HassioRestorePartialParameters { Slug = slug, Homeassistant = homeassistant, Folders = folders, Addons = addons, Password = password });
    }
}

public partial record HassioAddonRestartParameters
{
    ///<summary>The add-on slug. eg: core_ssh</summary>
    [JsonPropertyName("addon")]
    public object? Addon { get; init; }
}

public partial record HassioAddonStartParameters
{
    ///<summary>The add-on slug. eg: core_ssh</summary>
    [JsonPropertyName("addon")]
    public object? Addon { get; init; }
}

public partial record HassioAddonStdinParameters
{
    ///<summary>The add-on slug. eg: core_ssh</summary>
    [JsonPropertyName("addon")]
    public object? Addon { get; init; }
}

public partial record HassioAddonStopParameters
{
    ///<summary>The add-on slug. eg: core_ssh</summary>
    [JsonPropertyName("addon")]
    public object? Addon { get; init; }
}

public partial record HassioAddonUpdateParameters
{
    ///<summary>The add-on slug. eg: core_ssh</summary>
    [JsonPropertyName("addon")]
    public object? Addon { get; init; }
}

public partial record HassioBackupFullParameters
{
    ///<summary>Optional (default = current date and time). eg: Backup 1</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>Password to protect the backup with. eg: password</summary>
    [JsonPropertyName("password")]
    public string? Password { get; init; }

    ///<summary>Compresses the backup files.</summary>
    [JsonPropertyName("compressed")]
    public bool? Compressed { get; init; }

    ///<summary>Name of a backup network storage to host backups. eg: my_backup_mount</summary>
    [JsonPropertyName("location")]
    public object? Location { get; init; }

    ///<summary>Exclude the Home Assistant database file from backup</summary>
    [JsonPropertyName("homeassistant_exclude_database")]
    public bool? HomeassistantExcludeDatabase { get; init; }
}

public partial record HassioBackupPartialParameters
{
    ///<summary>Includes Home Assistant settings in the backup.</summary>
    [JsonPropertyName("homeassistant")]
    public bool? Homeassistant { get; init; }

    ///<summary>Exclude the Home Assistant database file from backup</summary>
    [JsonPropertyName("homeassistant_exclude_database")]
    public bool? HomeassistantExcludeDatabase { get; init; }

    ///<summary>List of add-ons to include in the backup. Use the name slug of the add-on. eg: [&quot;core_ssh&quot;,&quot;core_samba&quot;,&quot;core_mosquitto&quot;]</summary>
    [JsonPropertyName("addons")]
    public object? Addons { get; init; }

    ///<summary>List of directories to include in the backup. eg: [&quot;homeassistant&quot;,&quot;share&quot;]</summary>
    [JsonPropertyName("folders")]
    public object? Folders { get; init; }

    ///<summary>Optional (default = current date and time). eg: Partial backup 1</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>Password to protect the backup with. eg: password</summary>
    [JsonPropertyName("password")]
    public string? Password { get; init; }

    ///<summary>Compresses the backup files.</summary>
    [JsonPropertyName("compressed")]
    public bool? Compressed { get; init; }

    ///<summary>Name of a backup network storage to host backups. eg: my_backup_mount</summary>
    [JsonPropertyName("location")]
    public object? Location { get; init; }
}

public partial record HassioRestoreFullParameters
{
    ///<summary>Slug of backup to restore from.</summary>
    [JsonPropertyName("slug")]
    public string? Slug { get; init; }

    ///<summary>Optional password. eg: password</summary>
    [JsonPropertyName("password")]
    public string? Password { get; init; }
}

public partial record HassioRestorePartialParameters
{
    ///<summary>Slug of backup to restore from.</summary>
    [JsonPropertyName("slug")]
    public string? Slug { get; init; }

    ///<summary>Restores Home Assistant.</summary>
    [JsonPropertyName("homeassistant")]
    public bool? Homeassistant { get; init; }

    ///<summary>List of directories to include in the backup. eg: [&quot;homeassistant&quot;,&quot;share&quot;]</summary>
    [JsonPropertyName("folders")]
    public object? Folders { get; init; }

    ///<summary>List of add-ons to include in the backup. Use the name slug of the add-on. eg: [&quot;core_ssh&quot;,&quot;core_samba&quot;,&quot;core_mosquitto&quot;]</summary>
    [JsonPropertyName("addons")]
    public object? Addons { get; init; }

    ///<summary>Optional password. eg: password</summary>
    [JsonPropertyName("password")]
    public string? Password { get; init; }
}

public partial class HomeassistantServices
{
    private readonly IHaContext _haContext;
    public HomeassistantServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Checks the Home Assistant YAML-configuration files for errors. Errors will be shown in the Home Assistant logs.</summary>
    public void CheckConfig(object? data = null)
    {
        _haContext.CallService("homeassistant", "check_config", null, data);
    }

    ///<summary>Reload all YAML configuration that can be reloaded without restarting Home Assistant.</summary>
    public void ReloadAll(object? data = null)
    {
        _haContext.CallService("homeassistant", "reload_all", null, data);
    }

    ///<summary>Reloads the specified config entry.</summary>
    ///<param name="target">The target for this service call</param>
    public void ReloadConfigEntry(ServiceTarget target, HomeassistantReloadConfigEntryParameters data)
    {
        _haContext.CallService("homeassistant", "reload_config_entry", target, data);
    }

    ///<summary>Reloads the specified config entry.</summary>
    ///<param name="entryId">The configuration entry ID of the entry to be reloaded. eg: 8955375327824e14ba89e4b29cc3ec9a</param>
    public void ReloadConfigEntry(ServiceTarget target, string? entryId = null)
    {
        _haContext.CallService("homeassistant", "reload_config_entry", target, new HomeassistantReloadConfigEntryParameters { EntryId = entryId });
    }

    ///<summary>Reloads the core configuration from the YAML-configuration.</summary>
    public void ReloadCoreConfig(object? data = null)
    {
        _haContext.CallService("homeassistant", "reload_core_config", null, data);
    }

    ///<summary>Reloads Jinja2 templates found in the `custom_templates` folder in your config. New values will be applied on the next render of the template.</summary>
    public void ReloadCustomTemplates(object? data = null)
    {
        _haContext.CallService("homeassistant", "reload_custom_templates", null, data);
    }

    ///<summary>Restarts Home Assistant.</summary>
    public void Restart(object? data = null)
    {
        _haContext.CallService("homeassistant", "restart", null, data);
    }

    ///<summary>Saves the persistent states immediately. Maintains the normal periodic saving interval.</summary>
    public void SavePersistentStates(object? data = null)
    {
        _haContext.CallService("homeassistant", "save_persistent_states", null, data);
    }

    ///<summary>Updates the Home Assistant location.</summary>
    public void SetLocation(HomeassistantSetLocationParameters data)
    {
        _haContext.CallService("homeassistant", "set_location", null, data);
    }

    ///<summary>Updates the Home Assistant location.</summary>
    ///<param name="latitude">Latitude of your location. eg: 32.87336</param>
    ///<param name="longitude">Longitude of your location. eg: 117.22743</param>
    ///<param name="elevation">Elevation of your location. eg: 120</param>
    public void SetLocation(double latitude, double longitude, double? elevation = null)
    {
        _haContext.CallService("homeassistant", "set_location", null, new HomeassistantSetLocationParameters { Latitude = latitude, Longitude = longitude, Elevation = elevation });
    }

    ///<summary>Stops Home Assistant.</summary>
    public void Stop(object? data = null)
    {
        _haContext.CallService("homeassistant", "stop", null, data);
    }

    ///<summary>Generic action to toggle devices on/off under any domain.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("homeassistant", "toggle", target, data);
    }

    ///<summary>Generic action to turn devices off under any domain.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("homeassistant", "turn_off", target, data);
    }

    ///<summary>Generic action to turn devices on under any domain.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("homeassistant", "turn_on", target, data);
    }

    ///<summary>Forces one or more entities to update its data.</summary>
    public void UpdateEntity(HomeassistantUpdateEntityParameters data)
    {
        _haContext.CallService("homeassistant", "update_entity", null, data);
    }

    ///<summary>Forces one or more entities to update its data.</summary>
    ///<param name="entityId">List of entities to force update.</param>
    public void UpdateEntity(IEnumerable<string> entityId)
    {
        _haContext.CallService("homeassistant", "update_entity", null, new HomeassistantUpdateEntityParameters { EntityId = entityId });
    }
}

public partial record HomeassistantReloadConfigEntryParameters
{
    ///<summary>The configuration entry ID of the entry to be reloaded. eg: 8955375327824e14ba89e4b29cc3ec9a</summary>
    [JsonPropertyName("entry_id")]
    public string? EntryId { get; init; }
}

public partial record HomeassistantSetLocationParameters
{
    ///<summary>Latitude of your location. eg: 32.87336</summary>
    [JsonPropertyName("latitude")]
    public double? Latitude { get; init; }

    ///<summary>Longitude of your location. eg: 117.22743</summary>
    [JsonPropertyName("longitude")]
    public double? Longitude { get; init; }

    ///<summary>Elevation of your location. eg: 120</summary>
    [JsonPropertyName("elevation")]
    public double? Elevation { get; init; }
}

public partial record HomeassistantUpdateEntityParameters
{
    ///<summary>List of entities to force update.</summary>
    [JsonPropertyName("entity_id")]
    public IEnumerable<string>? EntityId { get; init; }
}

public partial class HumidifierServices
{
    private readonly IHaContext _haContext;
    public HumidifierServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sets the target humidity.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetHumidity(ServiceTarget target, HumidifierSetHumidityParameters data)
    {
        _haContext.CallService("humidifier", "set_humidity", target, data);
    }

    ///<summary>Sets the target humidity.</summary>
    ///<param name="humidity">Target humidity.</param>
    public void SetHumidity(ServiceTarget target, double humidity)
    {
        _haContext.CallService("humidifier", "set_humidity", target, new HumidifierSetHumidityParameters { Humidity = humidity });
    }

    ///<summary>Sets the humidifier operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetMode(ServiceTarget target, HumidifierSetModeParameters data)
    {
        _haContext.CallService("humidifier", "set_mode", target, data);
    }

    ///<summary>Sets the humidifier operation mode.</summary>
    ///<param name="mode">Operation mode. For example, _normal_, _eco_, or _away_. For a list of possible values, refer to the integration documentation. eg: away</param>
    public void SetMode(ServiceTarget target, string mode)
    {
        _haContext.CallService("humidifier", "set_mode", target, new HumidifierSetModeParameters { Mode = mode });
    }

    ///<summary>Toggles the humidifier on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("humidifier", "toggle", target, data);
    }

    ///<summary>Turns the humidifier off.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("humidifier", "turn_off", target, data);
    }

    ///<summary>Turns the humidifier on.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("humidifier", "turn_on", target, data);
    }
}

public partial record HumidifierSetHumidityParameters
{
    ///<summary>Target humidity.</summary>
    [JsonPropertyName("humidity")]
    public double? Humidity { get; init; }
}

public partial record HumidifierSetModeParameters
{
    ///<summary>Operation mode. For example, _normal_, _eco_, or _away_. For a list of possible values, refer to the integration documentation. eg: away</summary>
    [JsonPropertyName("mode")]
    public string? Mode { get; init; }
}

public partial class ImageServices
{
    private readonly IHaContext _haContext;
    public ImageServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Takes a snapshot from an image.</summary>
    ///<param name="target">The target for this service call</param>
    public void Snapshot(ServiceTarget target, ImageSnapshotParameters data)
    {
        _haContext.CallService("image", "snapshot", target, data);
    }

    ///<summary>Takes a snapshot from an image.</summary>
    ///<param name="filename">Template of a filename. Variable available is `entity_id`. eg: /tmp/image_snapshot.jpg</param>
    public void Snapshot(ServiceTarget target, string filename)
    {
        _haContext.CallService("image", "snapshot", target, new ImageSnapshotParameters { Filename = filename });
    }
}

public partial record ImageSnapshotParameters
{
    ///<summary>Template of a filename. Variable available is `entity_id`. eg: /tmp/image_snapshot.jpg</summary>
    [JsonPropertyName("filename")]
    public string? Filename { get; init; }
}

public partial class InputBooleanServices
{
    private readonly IHaContext _haContext;
    public InputBooleanServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads helpers from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("input_boolean", "reload", null, data);
    }

    ///<summary>Toggles the helper on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("input_boolean", "toggle", target, data);
    }

    ///<summary>Turns off the helper.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("input_boolean", "turn_off", target, data);
    }

    ///<summary>Turns on the helper.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("input_boolean", "turn_on", target, data);
    }
}

public partial class InputButtonServices
{
    private readonly IHaContext _haContext;
    public InputButtonServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Mimics the physical button press on the device.</summary>
    ///<param name="target">The target for this service call</param>
    public void Press(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("input_button", "press", target, data);
    }

    ///<summary>Reloads helpers from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("input_button", "reload", null, data);
    }
}

public partial class InputDatetimeServices
{
    private readonly IHaContext _haContext;
    public InputDatetimeServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads helpers from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("input_datetime", "reload", null, data);
    }

    ///<summary>Sets the date and/or time.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetDatetime(ServiceTarget target, InputDatetimeSetDatetimeParameters data)
    {
        _haContext.CallService("input_datetime", "set_datetime", target, data);
    }

    ///<summary>Sets the date and/or time.</summary>
    ///<param name="date">The target date. eg: &quot;2019-04-20&quot;</param>
    ///<param name="time">The target time. eg: &quot;05:04:20&quot;</param>
    ///<param name="datetime">The target date &amp; time. eg: &quot;2019-04-20 05:04:20&quot;</param>
    ///<param name="timestamp">The target date &amp; time, expressed by a UNIX timestamp.</param>
    public void SetDatetime(ServiceTarget target, string? date = null, TimeOnly? time = null, string? datetime = null, double? timestamp = null)
    {
        _haContext.CallService("input_datetime", "set_datetime", target, new InputDatetimeSetDatetimeParameters { Date = date, Time = time, Datetime = datetime, Timestamp = timestamp });
    }
}

public partial record InputDatetimeSetDatetimeParameters
{
    ///<summary>The target date. eg: &quot;2019-04-20&quot;</summary>
    [JsonPropertyName("date")]
    public string? Date { get; init; }

    ///<summary>The target time. eg: &quot;05:04:20&quot;</summary>
    [JsonPropertyName("time")]
    public TimeOnly? Time { get; init; }

    ///<summary>The target date &amp; time. eg: &quot;2019-04-20 05:04:20&quot;</summary>
    [JsonPropertyName("datetime")]
    public string? Datetime { get; init; }

    ///<summary>The target date &amp; time, expressed by a UNIX timestamp.</summary>
    [JsonPropertyName("timestamp")]
    public double? Timestamp { get; init; }
}

public partial class InputNumberServices
{
    private readonly IHaContext _haContext;
    public InputNumberServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Decrements the current value by 1 step.</summary>
    ///<param name="target">The target for this service call</param>
    public void Decrement(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("input_number", "decrement", target, data);
    }

    ///<summary>Increments the value by 1 step.</summary>
    ///<param name="target">The target for this service call</param>
    public void Increment(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("input_number", "increment", target, data);
    }

    ///<summary>Reloads helpers from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("input_number", "reload", null, data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValue(ServiceTarget target, InputNumberSetValueParameters data)
    {
        _haContext.CallService("input_number", "set_value", target, data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="value">The target value.</param>
    public void SetValue(ServiceTarget target, double value)
    {
        _haContext.CallService("input_number", "set_value", target, new InputNumberSetValueParameters { Value = value });
    }
}

public partial record InputNumberSetValueParameters
{
    ///<summary>The target value.</summary>
    [JsonPropertyName("value")]
    public double? Value { get; init; }
}

public partial class InputSelectServices
{
    private readonly IHaContext _haContext;
    public InputSelectServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads helpers from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("input_select", "reload", null, data);
    }

    ///<summary>Selects the first option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectFirst(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("input_select", "select_first", target, data);
    }

    ///<summary>Selects the last option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectLast(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("input_select", "select_last", target, data);
    }

    ///<summary>Select the next option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectNext(ServiceTarget target, InputSelectSelectNextParameters data)
    {
        _haContext.CallService("input_select", "select_next", target, data);
    }

    ///<summary>Select the next option.</summary>
    ///<param name="cycle">If the option should cycle from the last to the first option on the list.</param>
    public void SelectNext(ServiceTarget target, bool? cycle = null)
    {
        _haContext.CallService("input_select", "select_next", target, new InputSelectSelectNextParameters { Cycle = cycle });
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectOption(ServiceTarget target, InputSelectSelectOptionParameters data)
    {
        _haContext.CallService("input_select", "select_option", target, data);
    }

    ///<summary>Selects an option.</summary>
    ///<param name="option">Option to be selected. eg: &quot;Item A&quot;</param>
    public void SelectOption(ServiceTarget target, string option)
    {
        _haContext.CallService("input_select", "select_option", target, new InputSelectSelectOptionParameters { Option = option });
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectPrevious(ServiceTarget target, InputSelectSelectPreviousParameters data)
    {
        _haContext.CallService("input_select", "select_previous", target, data);
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="cycle">If the option should cycle from the last to the first option on the list.</param>
    public void SelectPrevious(ServiceTarget target, bool? cycle = null)
    {
        _haContext.CallService("input_select", "select_previous", target, new InputSelectSelectPreviousParameters { Cycle = cycle });
    }

    ///<summary>Sets the options.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetOptions(ServiceTarget target, InputSelectSetOptionsParameters data)
    {
        _haContext.CallService("input_select", "set_options", target, data);
    }

    ///<summary>Sets the options.</summary>
    ///<param name="options">List of options. eg: [&quot;Item A&quot;, &quot;Item B&quot;, &quot;Item C&quot;]</param>
    public void SetOptions(ServiceTarget target, IEnumerable<string> options)
    {
        _haContext.CallService("input_select", "set_options", target, new InputSelectSetOptionsParameters { Options = options });
    }
}

public partial record InputSelectSelectNextParameters
{
    ///<summary>If the option should cycle from the last to the first option on the list.</summary>
    [JsonPropertyName("cycle")]
    public bool? Cycle { get; init; }
}

public partial record InputSelectSelectOptionParameters
{
    ///<summary>Option to be selected. eg: &quot;Item A&quot;</summary>
    [JsonPropertyName("option")]
    public string? Option { get; init; }
}

public partial record InputSelectSelectPreviousParameters
{
    ///<summary>If the option should cycle from the last to the first option on the list.</summary>
    [JsonPropertyName("cycle")]
    public bool? Cycle { get; init; }
}

public partial record InputSelectSetOptionsParameters
{
    ///<summary>List of options. eg: [&quot;Item A&quot;, &quot;Item B&quot;, &quot;Item C&quot;]</summary>
    [JsonPropertyName("options")]
    public IEnumerable<string>? Options { get; init; }
}

public partial class InputTextServices
{
    private readonly IHaContext _haContext;
    public InputTextServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads helpers from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("input_text", "reload", null, data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValue(ServiceTarget target, InputTextSetValueParameters data)
    {
        _haContext.CallService("input_text", "set_value", target, data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="value">The target value. eg: This is an example text</param>
    public void SetValue(ServiceTarget target, string value)
    {
        _haContext.CallService("input_text", "set_value", target, new InputTextSetValueParameters { Value = value });
    }
}

public partial record InputTextSetValueParameters
{
    ///<summary>The target value. eg: This is an example text</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }
}

public partial class LightServices
{
    private readonly IHaContext _haContext;
    public LightServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Toggles one or more lights, from on to off, or, off to on, based on their current state.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, LightToggleParameters data)
    {
        _haContext.CallService("light", "toggle", target, data);
    }

    ///<summary>Toggles one or more lights, from on to off, or, off to on, based on their current state.</summary>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="rgbColor">The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</param>
    ///<param name="kelvin">Color temperature in Kelvin.</param>
    ///<param name="brightnessPct">Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</param>
    ///<param name="effect">Light effect.</param>
    ///<param name="rgbwColor"> eg: [255, 100, 100, 50]</param>
    ///<param name="rgbwwColor"> eg: [255, 100, 100, 50, 70]</param>
    ///<param name="colorName"></param>
    ///<param name="hsColor"> eg: [300, 70]</param>
    ///<param name="xyColor"> eg: [0.52, 0.43]</param>
    ///<param name="colorTemp"></param>
    ///<param name="brightness"></param>
    ///<param name="white"></param>
    ///<param name="profile"> eg: relax</param>
    ///<param name="flash"></param>
    public void Toggle(ServiceTarget target, double? transition = null, IReadOnlyCollection<int>? rgbColor = null, object? kelvin = null, double? brightnessPct = null, string? effect = null, object? rgbwColor = null, object? rgbwwColor = null, object? colorName = null, object? hsColor = null, object? xyColor = null, object? colorTemp = null, double? brightness = null, object? white = null, string? profile = null, object? flash = null)
    {
        _haContext.CallService("light", "toggle", target, new LightToggleParameters { Transition = transition, RgbColor = rgbColor, Kelvin = kelvin, BrightnessPct = brightnessPct, Effect = effect, RgbwColor = rgbwColor, RgbwwColor = rgbwwColor, ColorName = colorName, HsColor = hsColor, XyColor = xyColor, ColorTemp = colorTemp, Brightness = brightness, White = white, Profile = profile, Flash = flash });
    }

    ///<summary>Turn off one or more lights.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, LightTurnOffParameters data)
    {
        _haContext.CallService("light", "turn_off", target, data);
    }

    ///<summary>Turn off one or more lights.</summary>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="flash"></param>
    public void TurnOff(ServiceTarget target, double? transition = null, object? flash = null)
    {
        _haContext.CallService("light", "turn_off", target, new LightTurnOffParameters { Transition = transition, Flash = flash });
    }

    ///<summary>Turn on one or more lights and adjust properties of the light, even when they are turned on already.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, LightTurnOnParameters data)
    {
        _haContext.CallService("light", "turn_on", target, data);
    }

    ///<summary>Turn on one or more lights and adjust properties of the light, even when they are turned on already.</summary>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="rgbColor">The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</param>
    ///<param name="kelvin">Color temperature in Kelvin.</param>
    ///<param name="brightnessPct">Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</param>
    ///<param name="brightnessStepPct">Change brightness by a percentage.</param>
    ///<param name="effect">Light effect.</param>
    ///<param name="rgbwColor"> eg: [255, 100, 100, 50]</param>
    ///<param name="rgbwwColor"> eg: [255, 100, 100, 50, 70]</param>
    ///<param name="colorName"></param>
    ///<param name="hsColor"> eg: [300, 70]</param>
    ///<param name="xyColor"> eg: [0.52, 0.43]</param>
    ///<param name="colorTemp"></param>
    ///<param name="brightness"></param>
    ///<param name="brightnessStep"></param>
    ///<param name="white"></param>
    ///<param name="profile"> eg: relax</param>
    ///<param name="flash"></param>
    public void TurnOn(ServiceTarget target, double? transition = null, IReadOnlyCollection<int>? rgbColor = null, object? kelvin = null, double? brightnessPct = null, double? brightnessStepPct = null, string? effect = null, object? rgbwColor = null, object? rgbwwColor = null, object? colorName = null, object? hsColor = null, object? xyColor = null, object? colorTemp = null, double? brightness = null, double? brightnessStep = null, object? white = null, string? profile = null, object? flash = null)
    {
        _haContext.CallService("light", "turn_on", target, new LightTurnOnParameters { Transition = transition, RgbColor = rgbColor, Kelvin = kelvin, BrightnessPct = brightnessPct, BrightnessStepPct = brightnessStepPct, Effect = effect, RgbwColor = rgbwColor, RgbwwColor = rgbwwColor, ColorName = colorName, HsColor = hsColor, XyColor = xyColor, ColorTemp = colorTemp, Brightness = brightness, BrightnessStep = brightnessStep, White = white, Profile = profile, Flash = flash });
    }
}

public partial record LightToggleParameters
{
    ///<summary>Duration it takes to get to next state.</summary>
    [JsonPropertyName("transition")]
    public double? Transition { get; init; }

    ///<summary>The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</summary>
    [JsonPropertyName("rgb_color")]
    public IReadOnlyCollection<int>? RgbColor { get; init; }

    ///<summary>Color temperature in Kelvin.</summary>
    [JsonPropertyName("kelvin")]
    public object? Kelvin { get; init; }

    ///<summary>Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</summary>
    [JsonPropertyName("brightness_pct")]
    public double? BrightnessPct { get; init; }

    ///<summary>Light effect.</summary>
    [JsonPropertyName("effect")]
    public string? Effect { get; init; }

    ///<summary> eg: [255, 100, 100, 50]</summary>
    [JsonPropertyName("rgbw_color")]
    public object? RgbwColor { get; init; }

    ///<summary> eg: [255, 100, 100, 50, 70]</summary>
    [JsonPropertyName("rgbww_color")]
    public object? RgbwwColor { get; init; }

    [JsonPropertyName("color_name")]
    public object? ColorName { get; init; }

    ///<summary> eg: [300, 70]</summary>
    [JsonPropertyName("hs_color")]
    public object? HsColor { get; init; }

    ///<summary> eg: [0.52, 0.43]</summary>
    [JsonPropertyName("xy_color")]
    public object? XyColor { get; init; }

    [JsonPropertyName("color_temp")]
    public object? ColorTemp { get; init; }

    [JsonPropertyName("brightness")]
    public double? Brightness { get; init; }

    [JsonPropertyName("white")]
    public object? White { get; init; }

    ///<summary> eg: relax</summary>
    [JsonPropertyName("profile")]
    public string? Profile { get; init; }

    [JsonPropertyName("flash")]
    public object? Flash { get; init; }
}

public partial record LightTurnOffParameters
{
    ///<summary>Duration it takes to get to next state.</summary>
    [JsonPropertyName("transition")]
    public double? Transition { get; init; }

    [JsonPropertyName("flash")]
    public object? Flash { get; init; }
}

public partial record LightTurnOnParameters
{
    ///<summary>Duration it takes to get to next state.</summary>
    [JsonPropertyName("transition")]
    public double? Transition { get; init; }

    ///<summary>The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</summary>
    [JsonPropertyName("rgb_color")]
    public IReadOnlyCollection<int>? RgbColor { get; init; }

    ///<summary>Color temperature in Kelvin.</summary>
    [JsonPropertyName("kelvin")]
    public object? Kelvin { get; init; }

    ///<summary>Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</summary>
    [JsonPropertyName("brightness_pct")]
    public double? BrightnessPct { get; init; }

    ///<summary>Change brightness by a percentage.</summary>
    [JsonPropertyName("brightness_step_pct")]
    public double? BrightnessStepPct { get; init; }

    ///<summary>Light effect.</summary>
    [JsonPropertyName("effect")]
    public string? Effect { get; init; }

    ///<summary> eg: [255, 100, 100, 50]</summary>
    [JsonPropertyName("rgbw_color")]
    public object? RgbwColor { get; init; }

    ///<summary> eg: [255, 100, 100, 50, 70]</summary>
    [JsonPropertyName("rgbww_color")]
    public object? RgbwwColor { get; init; }

    [JsonPropertyName("color_name")]
    public object? ColorName { get; init; }

    ///<summary> eg: [300, 70]</summary>
    [JsonPropertyName("hs_color")]
    public object? HsColor { get; init; }

    ///<summary> eg: [0.52, 0.43]</summary>
    [JsonPropertyName("xy_color")]
    public object? XyColor { get; init; }

    [JsonPropertyName("color_temp")]
    public object? ColorTemp { get; init; }

    [JsonPropertyName("brightness")]
    public double? Brightness { get; init; }

    [JsonPropertyName("brightness_step")]
    public double? BrightnessStep { get; init; }

    [JsonPropertyName("white")]
    public object? White { get; init; }

    ///<summary> eg: relax</summary>
    [JsonPropertyName("profile")]
    public string? Profile { get; init; }

    [JsonPropertyName("flash")]
    public object? Flash { get; init; }
}

public partial class LocaltuyaServices
{
    private readonly IHaContext _haContext;
    public LocaltuyaServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reload localtuya and reconnect to all devices.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("localtuya", "reload", null, data);
    }

    ///<summary>Change the value of a datapoint (DP)</summary>
    public void SetDp(LocaltuyaSetDpParameters data)
    {
        _haContext.CallService("localtuya", "set_dp", null, data);
    }

    ///<summary>Change the value of a datapoint (DP)</summary>
    ///<param name="deviceId">Device ID of device to change datapoint value for eg: 11100118278aab4de001</param>
    ///<param name="dp">Datapoint index eg: 1</param>
    ///<param name="value">New value to set eg: False</param>
    public void SetDp(object? deviceId = null, object? dp = null, object? value = null)
    {
        _haContext.CallService("localtuya", "set_dp", null, new LocaltuyaSetDpParameters { DeviceId = deviceId, Dp = dp, Value = value });
    }
}

public partial record LocaltuyaSetDpParameters
{
    ///<summary>Device ID of device to change datapoint value for eg: 11100118278aab4de001</summary>
    [JsonPropertyName("device_id")]
    public object? DeviceId { get; init; }

    ///<summary>Datapoint index eg: 1</summary>
    [JsonPropertyName("dp")]
    public object? Dp { get; init; }

    ///<summary>New value to set eg: False</summary>
    [JsonPropertyName("value")]
    public object? Value { get; init; }
}

public partial class LockServices
{
    private readonly IHaContext _haContext;
    public LockServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Locks a lock.</summary>
    ///<param name="target">The target for this service call</param>
    public void Lock(ServiceTarget target, LockLockParameters data)
    {
        _haContext.CallService("lock", "lock", target, data);
    }

    ///<summary>Locks a lock.</summary>
    ///<param name="code">Code used to lock the lock. eg: 1234</param>
    public void Lock(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("lock", "lock", target, new LockLockParameters { Code = code });
    }

    ///<summary>Opens a lock.</summary>
    ///<param name="target">The target for this service call</param>
    public void Open(ServiceTarget target, LockOpenParameters data)
    {
        _haContext.CallService("lock", "open", target, data);
    }

    ///<summary>Opens a lock.</summary>
    ///<param name="code">Code used to open the lock. eg: 1234</param>
    public void Open(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("lock", "open", target, new LockOpenParameters { Code = code });
    }

    ///<summary>Unlocks a lock.</summary>
    ///<param name="target">The target for this service call</param>
    public void Unlock(ServiceTarget target, LockUnlockParameters data)
    {
        _haContext.CallService("lock", "unlock", target, data);
    }

    ///<summary>Unlocks a lock.</summary>
    ///<param name="code">Code used to unlock the lock. eg: 1234</param>
    public void Unlock(ServiceTarget target, string? code = null)
    {
        _haContext.CallService("lock", "unlock", target, new LockUnlockParameters { Code = code });
    }
}

public partial record LockLockParameters
{
    ///<summary>Code used to lock the lock. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record LockOpenParameters
{
    ///<summary>Code used to open the lock. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial record LockUnlockParameters
{
    ///<summary>Code used to unlock the lock. eg: 1234</summary>
    [JsonPropertyName("code")]
    public string? Code { get; init; }
}

public partial class LogbookServices
{
    private readonly IHaContext _haContext;
    public LogbookServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Creates a custom entry in the logbook.</summary>
    public void Log(LogbookLogParameters data)
    {
        _haContext.CallService("logbook", "log", null, data);
    }

    ///<summary>Creates a custom entry in the logbook.</summary>
    ///<param name="name">Custom name for an entity, can be referenced using an `entity_id`. eg: Kitchen</param>
    ///<param name="message">Message of the logbook entry. eg: is being used</param>
    ///<param name="entityId">Entity to reference in the logbook entry.</param>
    ///<param name="domain">Determines which icon is used in the logbook entry. The icon illustrates the integration domain related to this logbook entry. eg: light</param>
    public void Log(string name, string message, string? entityId = null, string? domain = null)
    {
        _haContext.CallService("logbook", "log", null, new LogbookLogParameters { Name = name, Message = message, EntityId = entityId, Domain = domain });
    }
}

public partial record LogbookLogParameters
{
    ///<summary>Custom name for an entity, can be referenced using an `entity_id`. eg: Kitchen</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }

    ///<summary>Message of the logbook entry. eg: is being used</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary>Entity to reference in the logbook entry.</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary>Determines which icon is used in the logbook entry. The icon illustrates the integration domain related to this logbook entry. eg: light</summary>
    [JsonPropertyName("domain")]
    public string? Domain { get; init; }
}

public partial class LoggerServices
{
    private readonly IHaContext _haContext;
    public LoggerServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sets the default log level for integrations.</summary>
    public void SetDefaultLevel(LoggerSetDefaultLevelParameters data)
    {
        _haContext.CallService("logger", "set_default_level", null, data);
    }

    ///<summary>Sets the default log level for integrations.</summary>
    ///<param name="level">Default severity level for all integrations.</param>
    public void SetDefaultLevel(object? level = null)
    {
        _haContext.CallService("logger", "set_default_level", null, new LoggerSetDefaultLevelParameters { Level = level });
    }

    ///<summary>Sets the log level for one or more integrations.</summary>
    public void SetLevel(object? data = null)
    {
        _haContext.CallService("logger", "set_level", null, data);
    }
}

public partial record LoggerSetDefaultLevelParameters
{
    ///<summary>Default severity level for all integrations.</summary>
    [JsonPropertyName("level")]
    public object? Level { get; init; }
}

public partial class MediaPlayerServices
{
    private readonly IHaContext _haContext;
    public MediaPlayerServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Clears the playlist.</summary>
    ///<param name="target">The target for this service call</param>
    public void ClearPlaylist(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "clear_playlist", target, data);
    }

    ///<summary>Groups media players together for synchronous playback. Only works on supported multiroom audio systems.</summary>
    ///<param name="target">The target for this service call</param>
    public void Join(ServiceTarget target, MediaPlayerJoinParameters data)
    {
        _haContext.CallService("media_player", "join", target, data);
    }

    ///<summary>Groups media players together for synchronous playback. Only works on supported multiroom audio systems.</summary>
    ///<param name="groupMembers">The players which will be synced with the playback specified in `target`. eg: - media_player.multiroom_player2 - media_player.multiroom_player3 </param>
    public void Join(ServiceTarget target, IEnumerable<string> groupMembers)
    {
        _haContext.CallService("media_player", "join", target, new MediaPlayerJoinParameters { GroupMembers = groupMembers });
    }

    ///<summary>Selects the next track.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaNextTrack(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "media_next_track", target, data);
    }

    ///<summary>Pauses.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaPause(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "media_pause", target, data);
    }

    ///<summary>Starts playing.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaPlay(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "media_play", target, data);
    }

    ///<summary>Toggles play/pause.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaPlayPause(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "media_play_pause", target, data);
    }

    ///<summary>Selects the previous track.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaPreviousTrack(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "media_previous_track", target, data);
    }

    ///<summary>Allows you to go to a different part of the media that is currently playing.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaSeek(ServiceTarget target, MediaPlayerMediaSeekParameters data)
    {
        _haContext.CallService("media_player", "media_seek", target, data);
    }

    ///<summary>Allows you to go to a different part of the media that is currently playing.</summary>
    ///<param name="seekPosition">Target position in the currently playing media. The format is platform dependent.</param>
    public void MediaSeek(ServiceTarget target, double seekPosition)
    {
        _haContext.CallService("media_player", "media_seek", target, new MediaPlayerMediaSeekParameters { SeekPosition = seekPosition });
    }

    ///<summary>Stops playing.</summary>
    ///<param name="target">The target for this service call</param>
    public void MediaStop(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "media_stop", target, data);
    }

    ///<summary>Starts playing specified media.</summary>
    ///<param name="target">The target for this service call</param>
    public void PlayMedia(ServiceTarget target, MediaPlayerPlayMediaParameters data)
    {
        _haContext.CallService("media_player", "play_media", target, data);
    }

    ///<summary>Starts playing specified media.</summary>
    ///<param name="mediaContentId">The ID of the content to play. Platform dependent. eg: https://home-assistant.io/images/cast/splash.png</param>
    ///<param name="mediaContentType">The type of the content to play. Such as image, music, tv show, video, episode, channel, or playlist. eg: music</param>
    ///<param name="enqueue">If the content should be played now or be added to the queue.</param>
    ///<param name="announce">If the media should be played as an announcement. eg: true</param>
    public void PlayMedia(ServiceTarget target, string mediaContentId, string mediaContentType, object? enqueue = null, bool? announce = null)
    {
        _haContext.CallService("media_player", "play_media", target, new MediaPlayerPlayMediaParameters { MediaContentId = mediaContentId, MediaContentType = mediaContentType, Enqueue = enqueue, Announce = announce });
    }

    ///<summary>Playback mode that plays the media in a loop.</summary>
    ///<param name="target">The target for this service call</param>
    public void RepeatSet(ServiceTarget target, MediaPlayerRepeatSetParameters data)
    {
        _haContext.CallService("media_player", "repeat_set", target, data);
    }

    ///<summary>Playback mode that plays the media in a loop.</summary>
    ///<param name="repeat">Repeat mode to set.</param>
    public void RepeatSet(ServiceTarget target, object repeat)
    {
        _haContext.CallService("media_player", "repeat_set", target, new MediaPlayerRepeatSetParameters { Repeat = repeat });
    }

    ///<summary>Selects a specific sound mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectSoundMode(ServiceTarget target, MediaPlayerSelectSoundModeParameters data)
    {
        _haContext.CallService("media_player", "select_sound_mode", target, data);
    }

    ///<summary>Selects a specific sound mode.</summary>
    ///<param name="soundMode">Name of the sound mode to switch to. eg: Music</param>
    public void SelectSoundMode(ServiceTarget target, string? soundMode = null)
    {
        _haContext.CallService("media_player", "select_sound_mode", target, new MediaPlayerSelectSoundModeParameters { SoundMode = soundMode });
    }

    ///<summary>Sends the media player the command to change input source.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectSource(ServiceTarget target, MediaPlayerSelectSourceParameters data)
    {
        _haContext.CallService("media_player", "select_source", target, data);
    }

    ///<summary>Sends the media player the command to change input source.</summary>
    ///<param name="source">Name of the source to switch to. Platform dependent. eg: video1</param>
    public void SelectSource(ServiceTarget target, string source)
    {
        _haContext.CallService("media_player", "select_source", target, new MediaPlayerSelectSourceParameters { Source = source });
    }

    ///<summary>Playback mode that selects the media in randomized order.</summary>
    ///<param name="target">The target for this service call</param>
    public void ShuffleSet(ServiceTarget target, MediaPlayerShuffleSetParameters data)
    {
        _haContext.CallService("media_player", "shuffle_set", target, data);
    }

    ///<summary>Playback mode that selects the media in randomized order.</summary>
    ///<param name="shuffle">Whether or not shuffle mode is enabled.</param>
    public void ShuffleSet(ServiceTarget target, bool shuffle)
    {
        _haContext.CallService("media_player", "shuffle_set", target, new MediaPlayerShuffleSetParameters { Shuffle = shuffle });
    }

    ///<summary>Toggles a media player on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "toggle", target, data);
    }

    ///<summary>Turns off the power of the media player.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "turn_off", target, data);
    }

    ///<summary>Turns on the power of the media player.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "turn_on", target, data);
    }

    ///<summary>Removes the player from a group. Only works on platforms which support player groups.</summary>
    ///<param name="target">The target for this service call</param>
    public void Unjoin(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "unjoin", target, data);
    }

    ///<summary>Turns down the volume.</summary>
    ///<param name="target">The target for this service call</param>
    public void VolumeDown(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "volume_down", target, data);
    }

    ///<summary>Mutes or unmutes the media player.</summary>
    ///<param name="target">The target for this service call</param>
    public void VolumeMute(ServiceTarget target, MediaPlayerVolumeMuteParameters data)
    {
        _haContext.CallService("media_player", "volume_mute", target, data);
    }

    ///<summary>Mutes or unmutes the media player.</summary>
    ///<param name="isVolumeMuted">Defines whether or not it is muted.</param>
    public void VolumeMute(ServiceTarget target, bool isVolumeMuted)
    {
        _haContext.CallService("media_player", "volume_mute", target, new MediaPlayerVolumeMuteParameters { IsVolumeMuted = isVolumeMuted });
    }

    ///<summary>Sets the volume level.</summary>
    ///<param name="target">The target for this service call</param>
    public void VolumeSet(ServiceTarget target, MediaPlayerVolumeSetParameters data)
    {
        _haContext.CallService("media_player", "volume_set", target, data);
    }

    ///<summary>Sets the volume level.</summary>
    ///<param name="volumeLevel">The volume. 0 is inaudible, 1 is the maximum volume.</param>
    public void VolumeSet(ServiceTarget target, double volumeLevel)
    {
        _haContext.CallService("media_player", "volume_set", target, new MediaPlayerVolumeSetParameters { VolumeLevel = volumeLevel });
    }

    ///<summary>Turns up the volume.</summary>
    ///<param name="target">The target for this service call</param>
    public void VolumeUp(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("media_player", "volume_up", target, data);
    }
}

public partial record MediaPlayerJoinParameters
{
    ///<summary>The players which will be synced with the playback specified in `target`. eg: - media_player.multiroom_player2 - media_player.multiroom_player3 </summary>
    [JsonPropertyName("group_members")]
    public IEnumerable<string>? GroupMembers { get; init; }
}

public partial record MediaPlayerMediaSeekParameters
{
    ///<summary>Target position in the currently playing media. The format is platform dependent.</summary>
    [JsonPropertyName("seek_position")]
    public double? SeekPosition { get; init; }
}

public partial record MediaPlayerPlayMediaParameters
{
    ///<summary>The ID of the content to play. Platform dependent. eg: https://home-assistant.io/images/cast/splash.png</summary>
    [JsonPropertyName("media_content_id")]
    public string? MediaContentId { get; init; }

    ///<summary>The type of the content to play. Such as image, music, tv show, video, episode, channel, or playlist. eg: music</summary>
    [JsonPropertyName("media_content_type")]
    public string? MediaContentType { get; init; }

    ///<summary>If the content should be played now or be added to the queue.</summary>
    [JsonPropertyName("enqueue")]
    public object? Enqueue { get; init; }

    ///<summary>If the media should be played as an announcement. eg: true</summary>
    [JsonPropertyName("announce")]
    public bool? Announce { get; init; }
}

public partial record MediaPlayerRepeatSetParameters
{
    ///<summary>Repeat mode to set.</summary>
    [JsonPropertyName("repeat")]
    public object? Repeat { get; init; }
}

public partial record MediaPlayerSelectSoundModeParameters
{
    ///<summary>Name of the sound mode to switch to. eg: Music</summary>
    [JsonPropertyName("sound_mode")]
    public string? SoundMode { get; init; }
}

public partial record MediaPlayerSelectSourceParameters
{
    ///<summary>Name of the source to switch to. Platform dependent. eg: video1</summary>
    [JsonPropertyName("source")]
    public string? Source { get; init; }
}

public partial record MediaPlayerShuffleSetParameters
{
    ///<summary>Whether or not shuffle mode is enabled.</summary>
    [JsonPropertyName("shuffle")]
    public bool? Shuffle { get; init; }
}

public partial record MediaPlayerVolumeMuteParameters
{
    ///<summary>Defines whether or not it is muted.</summary>
    [JsonPropertyName("is_volume_muted")]
    public bool? IsVolumeMuted { get; init; }
}

public partial record MediaPlayerVolumeSetParameters
{
    ///<summary>The volume. 0 is inaudible, 1 is the maximum volume.</summary>
    [JsonPropertyName("volume_level")]
    public double? VolumeLevel { get; init; }
}

public partial class MqttServices
{
    private readonly IHaContext _haContext;
    public MqttServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Writes all messages on a specific topic into the `mqtt_dump.txt` file in your configuration folder.</summary>
    public void Dump(MqttDumpParameters data)
    {
        _haContext.CallService("mqtt", "dump", null, data);
    }

    ///<summary>Writes all messages on a specific topic into the `mqtt_dump.txt` file in your configuration folder.</summary>
    ///<param name="topic">Topic to listen to. eg: OpenZWave/#</param>
    ///<param name="duration">How long we should listen for messages in seconds.</param>
    public void Dump(string? topic = null, double? duration = null)
    {
        _haContext.CallService("mqtt", "dump", null, new MqttDumpParameters { Topic = topic, Duration = duration });
    }

    ///<summary>Publishes a message to an MQTT topic.</summary>
    public void Publish(MqttPublishParameters data)
    {
        _haContext.CallService("mqtt", "publish", null, data);
    }

    ///<summary>Publishes a message to an MQTT topic.</summary>
    ///<param name="topic">Topic to publish to. eg: /homeassistant/hello</param>
    ///<param name="payload">The payload to publish. eg: The temperature is {{ states(&apos;sensor.temperature&apos;) }}</param>
    ///<param name="evaluatePayload">When `payload` is a Python bytes literal, evaluate the bytes literal and publish the raw data.</param>
    ///<param name="qos">Quality of Service to use. 0: At most once. 1: At least once. 2: Exactly once.</param>
    ///<param name="retain">If the message should have the retain flag set. If set, the broker stores the most recent message on a topic.</param>
    public void Publish(string topic, object payload, bool? evaluatePayload = null, object? qos = null, bool? retain = null)
    {
        _haContext.CallService("mqtt", "publish", null, new MqttPublishParameters { Topic = topic, Payload = payload, EvaluatePayload = evaluatePayload, Qos = qos, Retain = retain });
    }

    ///<summary>Reloads MQTT entities from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("mqtt", "reload", null, data);
    }
}

public partial record MqttDumpParameters
{
    ///<summary>Topic to listen to. eg: OpenZWave/#</summary>
    [JsonPropertyName("topic")]
    public string? Topic { get; init; }

    ///<summary>How long we should listen for messages in seconds.</summary>
    [JsonPropertyName("duration")]
    public double? Duration { get; init; }
}

public partial record MqttPublishParameters
{
    ///<summary>Topic to publish to. eg: /homeassistant/hello</summary>
    [JsonPropertyName("topic")]
    public string? Topic { get; init; }

    ///<summary>The payload to publish. eg: The temperature is {{ states(&apos;sensor.temperature&apos;) }}</summary>
    [JsonPropertyName("payload")]
    public object? Payload { get; init; }

    ///<summary>When `payload` is a Python bytes literal, evaluate the bytes literal and publish the raw data.</summary>
    [JsonPropertyName("evaluate_payload")]
    public bool? EvaluatePayload { get; init; }

    ///<summary>Quality of Service to use. 0: At most once. 1: At least once. 2: Exactly once.</summary>
    [JsonPropertyName("qos")]
    public object? Qos { get; init; }

    ///<summary>If the message should have the retain flag set. If set, the broker stores the most recent message on a topic.</summary>
    [JsonPropertyName("retain")]
    public bool? Retain { get; init; }
}

public partial class NetdaemonServices
{
    private readonly IHaContext _haContext;
    public NetdaemonServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Create an entity</summary>
    public void EntityCreate(NetdaemonEntityCreateParameters data)
    {
        _haContext.CallService("netdaemon", "entity_create", null, data);
    }

    ///<summary>Create an entity</summary>
    ///<param name="entityId">The entity ID of the entity eg: sensor.awesome</param>
    ///<param name="state">The state of the entity eg: Lorem ipsum</param>
    ///<param name="icon">The icon for the entity eg: mdi:rocket-launch-outline</param>
    ///<param name="unit">The unit of measurement for the entity</param>
    ///<param name="options">List of options for a select entity</param>
    ///<param name="attributes">The attributes of the entity</param>
    public void EntityCreate(object? entityId = null, object? state = null, object? icon = null, object? unit = null, object? options = null, object? attributes = null)
    {
        _haContext.CallService("netdaemon", "entity_create", null, new NetdaemonEntityCreateParameters { EntityId = entityId, State = state, Icon = icon, Unit = unit, Options = options, Attributes = attributes });
    }

    ///<summary>Remove an entity</summary>
    public void EntityRemove(NetdaemonEntityRemoveParameters data)
    {
        _haContext.CallService("netdaemon", "entity_remove", null, data);
    }

    ///<summary>Remove an entity</summary>
    ///<param name="entityId">The entity ID of the entity eg: sensor.awesome</param>
    public void EntityRemove(object? entityId = null)
    {
        _haContext.CallService("netdaemon", "entity_remove", null, new NetdaemonEntityRemoveParameters { EntityId = entityId });
    }

    ///<summary>Update an entity</summary>
    public void EntityUpdate(NetdaemonEntityUpdateParameters data)
    {
        _haContext.CallService("netdaemon", "entity_update", null, data);
    }

    ///<summary>Update an entity</summary>
    ///<param name="entityId">The entity ID of the entity eg: sensor.awesome</param>
    ///<param name="state">The state of the entity eg: Lorem ipsum</param>
    ///<param name="icon">The icon for the entity eg: mdi:rocket-launch-outline</param>
    ///<param name="unit">The unit of measurement for the entity</param>
    ///<param name="options">List of options for a select entity</param>
    ///<param name="attributes">The attributes of the entity</param>
    public void EntityUpdate(object? entityId = null, object? state = null, object? icon = null, object? unit = null, object? options = null, object? attributes = null)
    {
        _haContext.CallService("netdaemon", "entity_update", null, new NetdaemonEntityUpdateParameters { EntityId = entityId, State = state, Icon = icon, Unit = unit, Options = options, Attributes = attributes });
    }

    ///<summary>Register a new service for netdaemon, used by the daemon and not to be used by users</summary>
    public void RegisterService(NetdaemonRegisterServiceParameters data)
    {
        _haContext.CallService("netdaemon", "register_service", null, data);
    }

    ///<summary>Register a new service for netdaemon, used by the daemon and not to be used by users</summary>
    ///<param name="service">The name of the service to register</param>
    ///<param name="class">The class that implements the service call</param>
    ///<param name="method">The method to call</param>
    public void RegisterService(object? service = null, object? @class = null, object? @method = null)
    {
        _haContext.CallService("netdaemon", "register_service", null, new NetdaemonRegisterServiceParameters { Service = service, Class = @class, Method = @method });
    }

    public void ReloadApps(object? data = null)
    {
        _haContext.CallService("netdaemon", "reload_apps", null, data);
    }
}

public partial record NetdaemonEntityCreateParameters
{
    ///<summary>The entity ID of the entity eg: sensor.awesome</summary>
    [JsonPropertyName("entity_id")]
    public object? EntityId { get; init; }

    ///<summary>The state of the entity eg: Lorem ipsum</summary>
    [JsonPropertyName("state")]
    public object? State { get; init; }

    ///<summary>The icon for the entity eg: mdi:rocket-launch-outline</summary>
    [JsonPropertyName("icon")]
    public object? Icon { get; init; }

    ///<summary>The unit of measurement for the entity</summary>
    [JsonPropertyName("unit")]
    public object? Unit { get; init; }

    ///<summary>List of options for a select entity</summary>
    [JsonPropertyName("options")]
    public object? Options { get; init; }

    ///<summary>The attributes of the entity</summary>
    [JsonPropertyName("attributes")]
    public object? Attributes { get; init; }
}

public partial record NetdaemonEntityRemoveParameters
{
    ///<summary>The entity ID of the entity eg: sensor.awesome</summary>
    [JsonPropertyName("entity_id")]
    public object? EntityId { get; init; }
}

public partial record NetdaemonEntityUpdateParameters
{
    ///<summary>The entity ID of the entity eg: sensor.awesome</summary>
    [JsonPropertyName("entity_id")]
    public object? EntityId { get; init; }

    ///<summary>The state of the entity eg: Lorem ipsum</summary>
    [JsonPropertyName("state")]
    public object? State { get; init; }

    ///<summary>The icon for the entity eg: mdi:rocket-launch-outline</summary>
    [JsonPropertyName("icon")]
    public object? Icon { get; init; }

    ///<summary>The unit of measurement for the entity</summary>
    [JsonPropertyName("unit")]
    public object? Unit { get; init; }

    ///<summary>List of options for a select entity</summary>
    [JsonPropertyName("options")]
    public object? Options { get; init; }

    ///<summary>The attributes of the entity</summary>
    [JsonPropertyName("attributes")]
    public object? Attributes { get; init; }
}

public partial record NetdaemonRegisterServiceParameters
{
    ///<summary>The name of the service to register</summary>
    [JsonPropertyName("service")]
    public object? Service { get; init; }

    ///<summary>The class that implements the service call</summary>
    [JsonPropertyName("class")]
    public object? Class { get; init; }

    ///<summary>The method to call</summary>
    [JsonPropertyName("method")]
    public object? Method { get; init; }
}

public partial class NotifyServices
{
    private readonly IHaContext _haContext;
    public NotifyServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sends a notification message using the alexa_media service.</summary>
    public void AlexaMedia(NotifyAlexaMediaParameters data)
    {
        _haContext.CallService("notify", "alexa_media", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media service.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMedia(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media", null, new NotifyAlexaMediaParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_all_speakers integration.</summary>
    public void AlexaMediaAllSpeakers(NotifyAlexaMediaAllSpeakersParameters data)
    {
        _haContext.CallService("notify", "alexa_media_all_speakers", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_all_speakers integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaAllSpeakers(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_all_speakers", null, new NotifyAlexaMediaAllSpeakersParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_andrew_s_echo_buds integration.</summary>
    public void AlexaMediaAndrewSEchoBuds(NotifyAlexaMediaAndrewSEchoBudsParameters data)
    {
        _haContext.CallService("notify", "alexa_media_andrew_s_echo_buds", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_andrew_s_echo_buds integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaAndrewSEchoBuds(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_andrew_s_echo_buds", null, new NotifyAlexaMediaAndrewSEchoBudsParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_andrew_s_echo_buds_2 integration.</summary>
    public void AlexaMediaAndrewSEchoBuds2(NotifyAlexaMediaAndrewSEchoBuds2Parameters data)
    {
        _haContext.CallService("notify", "alexa_media_andrew_s_echo_buds_2", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_andrew_s_echo_buds_2 integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaAndrewSEchoBuds2(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_andrew_s_echo_buds_2", null, new NotifyAlexaMediaAndrewSEchoBuds2Parameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_andrew_s_echo_buds_3 integration.</summary>
    public void AlexaMediaAndrewSEchoBuds3(NotifyAlexaMediaAndrewSEchoBuds3Parameters data)
    {
        _haContext.CallService("notify", "alexa_media_andrew_s_echo_buds_3", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_andrew_s_echo_buds_3 integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaAndrewSEchoBuds3(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_andrew_s_echo_buds_3", null, new NotifyAlexaMediaAndrewSEchoBuds3Parameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_andrew_s_echo_buds_4 integration.</summary>
    public void AlexaMediaAndrewSEchoBuds4(NotifyAlexaMediaAndrewSEchoBuds4Parameters data)
    {
        _haContext.CallService("notify", "alexa_media_andrew_s_echo_buds_4", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_andrew_s_echo_buds_4 integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaAndrewSEchoBuds4(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_andrew_s_echo_buds_4", null, new NotifyAlexaMediaAndrewSEchoBuds4Parameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_andrew_s_samsung_tv_2020_u integration.</summary>
    public void AlexaMediaAndrewSSamsungTv2020U(NotifyAlexaMediaAndrewSSamsungTv2020UParameters data)
    {
        _haContext.CallService("notify", "alexa_media_andrew_s_samsung_tv_2020_u", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_andrew_s_samsung_tv_2020_u integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaAndrewSSamsungTv2020U(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_andrew_s_samsung_tv_2020_u", null, new NotifyAlexaMediaAndrewSSamsungTv2020UParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_basement integration.</summary>
    public void AlexaMediaBasement(NotifyAlexaMediaBasementParameters data)
    {
        _haContext.CallService("notify", "alexa_media_basement", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_basement integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaBasement(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_basement", null, new NotifyAlexaMediaBasementParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_bedroom_echo_show integration.</summary>
    public void AlexaMediaBedroomEchoShow(NotifyAlexaMediaBedroomEchoShowParameters data)
    {
        _haContext.CallService("notify", "alexa_media_bedroom_echo_show", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_bedroom_echo_show integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaBedroomEchoShow(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_bedroom_echo_show", null, new NotifyAlexaMediaBedroomEchoShowParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_dining_room_echo_input integration.</summary>
    public void AlexaMediaDiningRoomEchoInput(NotifyAlexaMediaDiningRoomEchoInputParameters data)
    {
        _haContext.CallService("notify", "alexa_media_dining_room_echo_input", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_dining_room_echo_input integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaDiningRoomEchoInput(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_dining_room_echo_input", null, new NotifyAlexaMediaDiningRoomEchoInputParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_downstairs integration.</summary>
    public void AlexaMediaDownstairs(NotifyAlexaMediaDownstairsParameters data)
    {
        _haContext.CallService("notify", "alexa_media_downstairs", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_downstairs integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaDownstairs(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_downstairs", null, new NotifyAlexaMediaDownstairsParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_drawing_room_echo_dot integration.</summary>
    public void AlexaMediaDrawingRoomEchoDot(NotifyAlexaMediaDrawingRoomEchoDotParameters data)
    {
        _haContext.CallService("notify", "alexa_media_drawing_room_echo_dot", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_drawing_room_echo_dot integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaDrawingRoomEchoDot(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_drawing_room_echo_dot", null, new NotifyAlexaMediaDrawingRoomEchoDotParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_dressing_room_echo_spot integration.</summary>
    public void AlexaMediaDressingRoomEchoSpot(NotifyAlexaMediaDressingRoomEchoSpotParameters data)
    {
        _haContext.CallService("notify", "alexa_media_dressing_room_echo_spot", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_dressing_room_echo_spot integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaDressingRoomEchoSpot(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_dressing_room_echo_spot", null, new NotifyAlexaMediaDressingRoomEchoSpotParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_garden integration.</summary>
    public void AlexaMediaGarden(NotifyAlexaMediaGardenParameters data)
    {
        _haContext.CallService("notify", "alexa_media_garden", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_garden integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaGarden(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_garden", null, new NotifyAlexaMediaGardenParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_guest_room_echo_show integration.</summary>
    public void AlexaMediaGuestRoomEchoShow(NotifyAlexaMediaGuestRoomEchoShowParameters data)
    {
        _haContext.CallService("notify", "alexa_media_guest_room_echo_show", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_guest_room_echo_show integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaGuestRoomEchoShow(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_guest_room_echo_show", null, new NotifyAlexaMediaGuestRoomEchoShowParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_hall_tablet integration.</summary>
    public void AlexaMediaHallTablet(NotifyAlexaMediaHallTabletParameters data)
    {
        _haContext.CallService("notify", "alexa_media_hall_tablet", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_hall_tablet integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaHallTablet(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_hall_tablet", null, new NotifyAlexaMediaHallTabletParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_kitchen_echo_show integration.</summary>
    public void AlexaMediaKitchenEchoShow(NotifyAlexaMediaKitchenEchoShowParameters data)
    {
        _haContext.CallService("notify", "alexa_media_kitchen_echo_show", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_kitchen_echo_show integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaKitchenEchoShow(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_kitchen_echo_show", null, new NotifyAlexaMediaKitchenEchoShowParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_landing_tablet integration.</summary>
    public void AlexaMediaLandingTablet(NotifyAlexaMediaLandingTabletParameters data)
    {
        _haContext.CallService("notify", "alexa_media_landing_tablet", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_landing_tablet integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaLandingTablet(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_landing_tablet", null, new NotifyAlexaMediaLandingTabletParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_last_called integration.</summary>
    public void AlexaMediaLastCalled(NotifyAlexaMediaLastCalledParameters data)
    {
        _haContext.CallService("notify", "alexa_media_last_called", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_last_called integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaLastCalled(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_last_called", null, new NotifyAlexaMediaLastCalledParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_lounge_echo_plus integration.</summary>
    public void AlexaMediaLoungeEchoPlus(NotifyAlexaMediaLoungeEchoPlusParameters data)
    {
        _haContext.CallService("notify", "alexa_media_lounge_echo_plus", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_lounge_echo_plus integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaLoungeEchoPlus(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_lounge_echo_plus", null, new NotifyAlexaMediaLoungeEchoPlusParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_lounge_fire_tv integration.</summary>
    public void AlexaMediaLoungeFireTv(NotifyAlexaMediaLoungeFireTvParameters data)
    {
        _haContext.CallService("notify", "alexa_media_lounge_fire_tv", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_lounge_fire_tv integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaLoungeFireTv(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_lounge_fire_tv", null, new NotifyAlexaMediaLoungeFireTvParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_offices integration.</summary>
    public void AlexaMediaOffices(NotifyAlexaMediaOfficesParameters data)
    {
        _haContext.CallService("notify", "alexa_media_offices", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_offices integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaOffices(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_offices", null, new NotifyAlexaMediaOfficesParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_patio integration.</summary>
    public void AlexaMediaPatio(NotifyAlexaMediaPatioParameters data)
    {
        _haContext.CallService("notify", "alexa_media_patio", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_patio integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaPatio(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_patio", null, new NotifyAlexaMediaPatioParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_shed_echo_input integration.</summary>
    public void AlexaMediaShedEchoInput(NotifyAlexaMediaShedEchoInputParameters data)
    {
        _haContext.CallService("notify", "alexa_media_shed_echo_input", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_shed_echo_input integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaShedEchoInput(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_shed_echo_input", null, new NotifyAlexaMediaShedEchoInputParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_snug_echo_show integration.</summary>
    public void AlexaMediaSnugEchoShow(NotifyAlexaMediaSnugEchoShowParameters data)
    {
        _haContext.CallService("notify", "alexa_media_snug_echo_show", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_snug_echo_show integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaSnugEchoShow(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_snug_echo_show", null, new NotifyAlexaMediaSnugEchoShowParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_snug_fire_tv integration.</summary>
    public void AlexaMediaSnugFireTv(NotifyAlexaMediaSnugFireTvParameters data)
    {
        _haContext.CallService("notify", "alexa_media_snug_fire_tv", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_snug_fire_tv integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaSnugFireTv(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_snug_fire_tv", null, new NotifyAlexaMediaSnugFireTvParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_studio_echo_dot integration.</summary>
    public void AlexaMediaStudioEchoDot(NotifyAlexaMediaStudioEchoDotParameters data)
    {
        _haContext.CallService("notify", "alexa_media_studio_echo_dot", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_studio_echo_dot integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaStudioEchoDot(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_studio_echo_dot", null, new NotifyAlexaMediaStudioEchoDotParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_this_device_2 integration.</summary>
    public void AlexaMediaThisDevice2(NotifyAlexaMediaThisDevice2Parameters data)
    {
        _haContext.CallService("notify", "alexa_media_this_device_2", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_this_device_2 integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaThisDevice2(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_this_device_2", null, new NotifyAlexaMediaThisDevice2Parameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_upstairs integration.</summary>
    public void AlexaMediaUpstairs(NotifyAlexaMediaUpstairsParameters data)
    {
        _haContext.CallService("notify", "alexa_media_upstairs", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_upstairs integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaUpstairs(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_upstairs", null, new NotifyAlexaMediaUpstairsParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the alexa_media_utility_room_echo_dot integration.</summary>
    public void AlexaMediaUtilityRoomEchoDot(NotifyAlexaMediaUtilityRoomEchoDotParameters data)
    {
        _haContext.CallService("notify", "alexa_media_utility_room_echo_dot", null, data);
    }

    ///<summary>Sends a notification message using the alexa_media_utility_room_echo_dot integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void AlexaMediaUtilityRoomEchoDot(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "alexa_media_utility_room_echo_dot", null, new NotifyAlexaMediaUtilityRoomEchoDotParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the mobile_app_claireiphone integration.</summary>
    public void MobileAppClaireiphone(NotifyMobileAppClaireiphoneParameters data)
    {
        _haContext.CallService("notify", "mobile_app_claireiphone", null, data);
    }

    ///<summary>Sends a notification message using the mobile_app_claireiphone integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void MobileAppClaireiphone(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "mobile_app_claireiphone", null, new NotifyMobileAppClaireiphoneParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the mobile_app_pixel_6 integration.</summary>
    public void MobileAppPixel6(NotifyMobileAppPixel6Parameters data)
    {
        _haContext.CallService("notify", "mobile_app_pixel_6", null, data);
    }

    ///<summary>Sends a notification message using the mobile_app_pixel_6 integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void MobileAppPixel6(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "mobile_app_pixel_6", null, new NotifyMobileAppPixel6Parameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the mobile_app_pixel_watch integration.</summary>
    public void MobileAppPixelWatch(NotifyMobileAppPixelWatchParameters data)
    {
        _haContext.CallService("notify", "mobile_app_pixel_watch", null, data);
    }

    ///<summary>Sends a notification message using the mobile_app_pixel_watch integration.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void MobileAppPixelWatch(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "mobile_app_pixel_watch", null, new NotifyMobileAppPixelWatchParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message using the notify service.</summary>
    public void Notify(NotifyNotifyParameters data)
    {
        _haContext.CallService("notify", "notify", null, data);
    }

    ///<summary>Sends a notification message using the notify service.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void Notify(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "notify", null, new NotifyNotifyParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification that is visible in the notifications panel.</summary>
    public void PersistentNotification(NotifyPersistentNotificationParameters data)
    {
        _haContext.CallService("notify", "persistent_notification", null, data);
    }

    ///<summary>Sends a notification that is visible in the notifications panel.</summary>
    ///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title">Title of the notification. eg: Your Garage Door Friend</param>
    ///<param name="data">Some integrations provide extended functionality. For information on how to use _data_, refer to the integration documentation.. eg: platform specific</param>
    public void PersistentNotification(string message, string? title = null, object? data = null)
    {
        _haContext.CallService("notify", "persistent_notification", null, new NotifyPersistentNotificationParameters { Message = message, Title = title, Data = data });
    }

    ///<summary>Sends a notification message using the phones service.</summary>
    public void Phones(NotifyPhonesParameters data)
    {
        _haContext.CallService("notify", "phones", null, data);
    }

    ///<summary>Sends a notification message using the phones service.</summary>
    ///<param name="message"> eg: The garage door has been open for 10 minutes.</param>
    ///<param name="title"> eg: Your Garage Door Friend</param>
    ///<param name="target"> eg: platform specific</param>
    ///<param name="data"> eg: platform specific</param>
    public void Phones(string message, string? title = null, object? target = null, object? data = null)
    {
        _haContext.CallService("notify", "phones", null, new NotifyPhonesParameters { Message = message, Title = title, Target = target, Data = data });
    }

    ///<summary>Sends a notification message.</summary>
    ///<param name="target">The target for this service call</param>
    public void SendMessage(ServiceTarget target, NotifySendMessageParameters data)
    {
        _haContext.CallService("notify", "send_message", target, data);
    }

    ///<summary>Sends a notification message.</summary>
    ///<param name="message">Your notification message.</param>
    ///<param name="title">Title for your notification message.</param>
    public void SendMessage(ServiceTarget target, string message, string? title = null)
    {
        _haContext.CallService("notify", "send_message", target, new NotifySendMessageParameters { Message = message, Title = title });
    }
}

public partial record NotifyAlexaMediaParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaAllSpeakersParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaAndrewSEchoBudsParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaAndrewSEchoBuds2Parameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaAndrewSEchoBuds3Parameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaAndrewSEchoBuds4Parameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaAndrewSSamsungTv2020UParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaBasementParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaBedroomEchoShowParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaDiningRoomEchoInputParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaDownstairsParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaDrawingRoomEchoDotParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaDressingRoomEchoSpotParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaGardenParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaGuestRoomEchoShowParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaHallTabletParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaKitchenEchoShowParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaLandingTabletParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaLastCalledParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaLoungeEchoPlusParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaLoungeFireTvParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaOfficesParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaPatioParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaShedEchoInputParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaSnugEchoShowParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaSnugFireTvParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaStudioEchoDotParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaThisDevice2Parameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaUpstairsParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyAlexaMediaUtilityRoomEchoDotParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyMobileAppClaireiphoneParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyMobileAppPixel6Parameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyMobileAppPixelWatchParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyNotifyParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyPersistentNotificationParameters
{
    ///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary>Title of the notification. eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary>Some integrations provide extended functionality. For information on how to use _data_, refer to the integration documentation.. eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifyPhonesParameters
{
    ///<summary> eg: The garage door has been open for 10 minutes.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary> eg: Your Garage Door Friend</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("target")]
    public object? Target { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("data")]
    public object? Data { get; init; }
}

public partial record NotifySendMessageParameters
{
    ///<summary>Your notification message.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary>Title for your notification message.</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }
}

public partial class NumberServices
{
    private readonly IHaContext _haContext;
    public NumberServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sets the value of a number.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValue(ServiceTarget target, NumberSetValueParameters data)
    {
        _haContext.CallService("number", "set_value", target, data);
    }

    ///<summary>Sets the value of a number.</summary>
    ///<param name="value">The target value to set. eg: 42</param>
    public void SetValue(ServiceTarget target, string? value = null)
    {
        _haContext.CallService("number", "set_value", target, new NumberSetValueParameters { Value = value });
    }
}

public partial record NumberSetValueParameters
{
    ///<summary>The target value to set. eg: 42</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }
}

public partial class OctopusEnergyServices
{
    private readonly IHaContext _haContext;
    public OctopusEnergyServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Diagnose available heatpump APIs</summary>
    public void DiagnoseHeatpumpApis(object? data = null)
    {
        _haContext.CallService("octopus_energy", "diagnose_heatpump_apis", null, data);
    }

    ///<summary>Diagnose available heatpump APIs</summary>
    public Task<JsonElement?> DiagnoseHeatpumpApisAsync(object? data = null)
    {
        return _haContext.CallServiceWithResponseAsync("octopus_energy", "diagnose_heatpump_apis", null, data);
    }

    ///<summary>Joins a given Octoplus saving session event.</summary>
    ///<param name="target">The target for this service call</param>
    public void JoinOctoplusSavingSessionEvent(ServiceTarget target, OctopusEnergyJoinOctoplusSavingSessionEventParameters data)
    {
        _haContext.CallService("octopus_energy", "join_octoplus_saving_session_event", target, data);
    }

    ///<summary>Joins a given Octoplus saving session event.</summary>
    ///<param name="eventCode">The code of the event that is to be joined.</param>
    public void JoinOctoplusSavingSessionEvent(ServiceTarget target, string? eventCode = null)
    {
        _haContext.CallService("octopus_energy", "join_octoplus_saving_session_event", target, new OctopusEnergyJoinOctoplusSavingSessionEventParameters { EventCode = eventCode });
    }

    ///<summary>Removes external statistics for all meters that don&apos;t have an active tariff</summary>
    public void PurgeInvalidExternalStatisticIds(object? data = null)
    {
        _haContext.CallService("octopus_energy", "purge_invalid_external_statistic_ids", null, data);
    }

    ///<summary>Redeems a given number of octoplus points into account credit</summary>
    ///<param name="target">The target for this service call</param>
    public void RedeemOctoplusPointsIntoAccountCredit(ServiceTarget target, OctopusEnergyRedeemOctoplusPointsIntoAccountCreditParameters data)
    {
        _haContext.CallService("octopus_energy", "redeem_octoplus_points_into_account_credit", target, data);
    }

    ///<summary>Redeems a given number of octoplus points into account credit</summary>
    ///<param name="pointsToRedeem">The number of points to redeem</param>
    public void RedeemOctoplusPointsIntoAccountCredit(ServiceTarget target, long? pointsToRedeem = null)
    {
        _haContext.CallService("octopus_energy", "redeem_octoplus_points_into_account_credit", target, new OctopusEnergyRedeemOctoplusPointsIntoAccountCreditParameters { PointsToRedeem = pointsToRedeem });
    }

    ///<summary>Refreshes the previous consumption data for a given entity from a given date.</summary>
    ///<param name="target">The target for this service call</param>
    public void RefreshPreviousConsumptionData(ServiceTarget target, OctopusEnergyRefreshPreviousConsumptionDataParameters data)
    {
        _haContext.CallService("octopus_energy", "refresh_previous_consumption_data", target, data);
    }

    ///<summary>Refreshes the previous consumption data for a given entity from a given date.</summary>
    ///<param name="startDate">The date the data should be loaded from.</param>
    public void RefreshPreviousConsumptionData(ServiceTarget target, DateOnly startDate)
    {
        _haContext.CallService("octopus_energy", "refresh_previous_consumption_data", target, new OctopusEnergyRefreshPreviousConsumptionDataParameters { StartDate = startDate });
    }

    ///<summary>Spins the wheel of fortune for a given energy type</summary>
    ///<param name="target">The target for this service call</param>
    public void SpinWheelOfFortune(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("octopus_energy", "spin_wheel_of_fortune", target, data);
    }
}

public partial record OctopusEnergyJoinOctoplusSavingSessionEventParameters
{
    ///<summary>The code of the event that is to be joined.</summary>
    [JsonPropertyName("event_code")]
    public string? EventCode { get; init; }
}

public partial record OctopusEnergyRedeemOctoplusPointsIntoAccountCreditParameters
{
    ///<summary>The number of points to redeem</summary>
    [JsonPropertyName("points_to_redeem")]
    public long? PointsToRedeem { get; init; }
}

public partial record OctopusEnergyRefreshPreviousConsumptionDataParameters
{
    ///<summary>The date the data should be loaded from.</summary>
    [JsonPropertyName("start_date")]
    public DateOnly? StartDate { get; init; }
}

public partial class PersistentNotificationServices
{
    private readonly IHaContext _haContext;
    public PersistentNotificationServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Shows a notification on the notifications panel.</summary>
    public void Create(PersistentNotificationCreateParameters data)
    {
        _haContext.CallService("persistent_notification", "create", null, data);
    }

    ///<summary>Shows a notification on the notifications panel.</summary>
    ///<param name="message">Message body of the notification. eg: Please check your configuration.yaml.</param>
    ///<param name="title">Optional title of the notification. eg: Test notification</param>
    ///<param name="notificationId">ID of the notification. This new notification will overwrite an existing notification with the same ID. eg: 1234</param>
    public void Create(string message, string? title = null, string? notificationId = null)
    {
        _haContext.CallService("persistent_notification", "create", null, new PersistentNotificationCreateParameters { Message = message, Title = title, NotificationId = notificationId });
    }

    ///<summary>Removes a notification from the notifications panel.</summary>
    public void Dismiss(PersistentNotificationDismissParameters data)
    {
        _haContext.CallService("persistent_notification", "dismiss", null, data);
    }

    ///<summary>Removes a notification from the notifications panel.</summary>
    ///<param name="notificationId">ID of the notification to be removed. eg: 1234</param>
    public void Dismiss(string notificationId)
    {
        _haContext.CallService("persistent_notification", "dismiss", null, new PersistentNotificationDismissParameters { NotificationId = notificationId });
    }

    ///<summary>Removes all notifications from the notifications panel.</summary>
    public void DismissAll(object? data = null)
    {
        _haContext.CallService("persistent_notification", "dismiss_all", null, data);
    }
}

public partial record PersistentNotificationCreateParameters
{
    ///<summary>Message body of the notification. eg: Please check your configuration.yaml.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary>Optional title of the notification. eg: Test notification</summary>
    [JsonPropertyName("title")]
    public string? Title { get; init; }

    ///<summary>ID of the notification. This new notification will overwrite an existing notification with the same ID. eg: 1234</summary>
    [JsonPropertyName("notification_id")]
    public string? NotificationId { get; init; }
}

public partial record PersistentNotificationDismissParameters
{
    ///<summary>ID of the notification to be removed. eg: 1234</summary>
    [JsonPropertyName("notification_id")]
    public string? NotificationId { get; init; }
}

public partial class PersonServices
{
    private readonly IHaContext _haContext;
    public PersonServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads persons from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("person", "reload", null, data);
    }
}

public partial class RecorderServices
{
    private readonly IHaContext _haContext;
    public RecorderServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Stops the recording of events and state changes.</summary>
    public void Disable(object? data = null)
    {
        _haContext.CallService("recorder", "disable", null, data);
    }

    ///<summary>Starts the recording of events and state changes.</summary>
    public void Enable(object? data = null)
    {
        _haContext.CallService("recorder", "enable", null, data);
    }

    ///<summary>Starts purge task - to clean up old data from your database.</summary>
    public void Purge(RecorderPurgeParameters data)
    {
        _haContext.CallService("recorder", "purge", null, data);
    }

    ///<summary>Starts purge task - to clean up old data from your database.</summary>
    ///<param name="keepDays">Number of days to keep the data in the database. Starting today, counting backward. A value of `7` means that everything older than a week will be purged.</param>
    ///<param name="repack">Attempt to save disk space by rewriting the entire database file.</param>
    ///<param name="applyFilter">Apply `entity_id` and `event_type` filters in addition to time-based purge.</param>
    public void Purge(double? keepDays = null, bool? repack = null, bool? applyFilter = null)
    {
        _haContext.CallService("recorder", "purge", null, new RecorderPurgeParameters { KeepDays = keepDays, Repack = repack, ApplyFilter = applyFilter });
    }

    ///<summary>Starts a purge task to remove the data related to specific entities from your database.</summary>
    public void PurgeEntities(RecorderPurgeEntitiesParameters data)
    {
        _haContext.CallService("recorder", "purge_entities", null, data);
    }

    ///<summary>Starts a purge task to remove the data related to specific entities from your database.</summary>
    ///<param name="entityId">List of entities for which the data is to be removed from the recorder database.</param>
    ///<param name="domains">List of domains for which the data needs to be removed from the recorder database. eg: sun</param>
    ///<param name="entityGlobs">List of glob patterns used to select the entities for which the data is to be removed from the recorder database. eg: domain*.object_id*</param>
    ///<param name="keepDays">Number of days to keep the data for rows matching the filter. Starting today, counting backward. A value of `7` means that everything older than a week will be purged. The default of 0 days will remove all matching rows immediately.</param>
    public void PurgeEntities(IEnumerable<string>? entityId = null, object? domains = null, object? entityGlobs = null, double? keepDays = null)
    {
        _haContext.CallService("recorder", "purge_entities", null, new RecorderPurgeEntitiesParameters { EntityId = entityId, Domains = domains, EntityGlobs = entityGlobs, KeepDays = keepDays });
    }
}

public partial record RecorderPurgeParameters
{
    ///<summary>Number of days to keep the data in the database. Starting today, counting backward. A value of `7` means that everything older than a week will be purged.</summary>
    [JsonPropertyName("keep_days")]
    public double? KeepDays { get; init; }

    ///<summary>Attempt to save disk space by rewriting the entire database file.</summary>
    [JsonPropertyName("repack")]
    public bool? Repack { get; init; }

    ///<summary>Apply `entity_id` and `event_type` filters in addition to time-based purge.</summary>
    [JsonPropertyName("apply_filter")]
    public bool? ApplyFilter { get; init; }
}

public partial record RecorderPurgeEntitiesParameters
{
    ///<summary>List of entities for which the data is to be removed from the recorder database.</summary>
    [JsonPropertyName("entity_id")]
    public IEnumerable<string>? EntityId { get; init; }

    ///<summary>List of domains for which the data needs to be removed from the recorder database. eg: sun</summary>
    [JsonPropertyName("domains")]
    public object? Domains { get; init; }

    ///<summary>List of glob patterns used to select the entities for which the data is to be removed from the recorder database. eg: domain*.object_id*</summary>
    [JsonPropertyName("entity_globs")]
    public object? EntityGlobs { get; init; }

    ///<summary>Number of days to keep the data for rows matching the filter. Starting today, counting backward. A value of `7` means that everything older than a week will be purged. The default of 0 days will remove all matching rows immediately.</summary>
    [JsonPropertyName("keep_days")]
    public double? KeepDays { get; init; }
}

public partial class RemoteServices
{
    private readonly IHaContext _haContext;
    public RemoteServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Deletes a command or a list of commands from the database.</summary>
    ///<param name="target">The target for this service call</param>
    public void DeleteCommand(ServiceTarget target, RemoteDeleteCommandParameters data)
    {
        _haContext.CallService("remote", "delete_command", target, data);
    }

    ///<summary>Deletes a command or a list of commands from the database.</summary>
    ///<param name="device">Device from which commands will be deleted. eg: television</param>
    ///<param name="command">The single command or the list of commands to be deleted. eg: Mute</param>
    public void DeleteCommand(ServiceTarget target, object command, string? device = null)
    {
        _haContext.CallService("remote", "delete_command", target, new RemoteDeleteCommandParameters { Device = device, Command = command });
    }

    ///<summary>Learns a command or a list of commands from a device.</summary>
    ///<param name="target">The target for this service call</param>
    public void LearnCommand(ServiceTarget target, RemoteLearnCommandParameters data)
    {
        _haContext.CallService("remote", "learn_command", target, data);
    }

    ///<summary>Learns a command or a list of commands from a device.</summary>
    ///<param name="device">Device ID to learn command from. eg: television</param>
    ///<param name="command">A single command or a list of commands to learn. eg: Turn on</param>
    ///<param name="commandType">The type of command to be learned.</param>
    ///<param name="alternative">If code must be stored as an alternative. This is useful for discrete codes. Discrete codes are used for toggles that only perform one function. For example, a code to only turn a device on. If it is on already, sending the code won&apos;t change the state.</param>
    ///<param name="timeout">Timeout for the command to be learned.</param>
    public void LearnCommand(ServiceTarget target, string? device = null, object? command = null, object? commandType = null, bool? alternative = null, long? timeout = null)
    {
        _haContext.CallService("remote", "learn_command", target, new RemoteLearnCommandParameters { Device = device, Command = command, CommandType = commandType, Alternative = alternative, Timeout = timeout });
    }

    ///<summary>Sends a command or a list of commands to a device.</summary>
    ///<param name="target">The target for this service call</param>
    public void SendCommand(ServiceTarget target, RemoteSendCommandParameters data)
    {
        _haContext.CallService("remote", "send_command", target, data);
    }

    ///<summary>Sends a command or a list of commands to a device.</summary>
    ///<param name="device">Device ID to send command to. eg: 32756745</param>
    ///<param name="command">A single command or a list of commands to send. eg: Play</param>
    ///<param name="numRepeats">The number of times you want to repeat the commands.</param>
    ///<param name="delaySecs">The time you want to wait in between repeated commands.</param>
    ///<param name="holdSecs">The time you want to have it held before the release is send.</param>
    public void SendCommand(ServiceTarget target, object command, string? device = null, double? numRepeats = null, double? delaySecs = null, double? holdSecs = null)
    {
        _haContext.CallService("remote", "send_command", target, new RemoteSendCommandParameters { Device = device, Command = command, NumRepeats = numRepeats, DelaySecs = delaySecs, HoldSecs = holdSecs });
    }

    ///<summary>Toggles a device on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("remote", "toggle", target, data);
    }

    ///<summary>Turns the device off.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("remote", "turn_off", target, data);
    }

    ///<summary>Sends the power on command.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, RemoteTurnOnParameters data)
    {
        _haContext.CallService("remote", "turn_on", target, data);
    }

    ///<summary>Sends the power on command.</summary>
    ///<param name="activity">Activity ID or activity name to be started. eg: BedroomTV</param>
    public void TurnOn(ServiceTarget target, string? activity = null)
    {
        _haContext.CallService("remote", "turn_on", target, new RemoteTurnOnParameters { Activity = activity });
    }
}

public partial record RemoteDeleteCommandParameters
{
    ///<summary>Device from which commands will be deleted. eg: television</summary>
    [JsonPropertyName("device")]
    public string? Device { get; init; }

    ///<summary>The single command or the list of commands to be deleted. eg: Mute</summary>
    [JsonPropertyName("command")]
    public object? Command { get; init; }
}

public partial record RemoteLearnCommandParameters
{
    ///<summary>Device ID to learn command from. eg: television</summary>
    [JsonPropertyName("device")]
    public string? Device { get; init; }

    ///<summary>A single command or a list of commands to learn. eg: Turn on</summary>
    [JsonPropertyName("command")]
    public object? Command { get; init; }

    ///<summary>The type of command to be learned.</summary>
    [JsonPropertyName("command_type")]
    public object? CommandType { get; init; }

    ///<summary>If code must be stored as an alternative. This is useful for discrete codes. Discrete codes are used for toggles that only perform one function. For example, a code to only turn a device on. If it is on already, sending the code won&apos;t change the state.</summary>
    [JsonPropertyName("alternative")]
    public bool? Alternative { get; init; }

    ///<summary>Timeout for the command to be learned.</summary>
    [JsonPropertyName("timeout")]
    public long? Timeout { get; init; }
}

public partial record RemoteSendCommandParameters
{
    ///<summary>Device ID to send command to. eg: 32756745</summary>
    [JsonPropertyName("device")]
    public string? Device { get; init; }

    ///<summary>A single command or a list of commands to send. eg: Play</summary>
    [JsonPropertyName("command")]
    public object? Command { get; init; }

    ///<summary>The number of times you want to repeat the commands.</summary>
    [JsonPropertyName("num_repeats")]
    public double? NumRepeats { get; init; }

    ///<summary>The time you want to wait in between repeated commands.</summary>
    [JsonPropertyName("delay_secs")]
    public double? DelaySecs { get; init; }

    ///<summary>The time you want to have it held before the release is send.</summary>
    [JsonPropertyName("hold_secs")]
    public double? HoldSecs { get; init; }
}

public partial record RemoteTurnOnParameters
{
    ///<summary>Activity ID or activity name to be started. eg: BedroomTV</summary>
    [JsonPropertyName("activity")]
    public string? Activity { get; init; }
}

public partial class SceneServices
{
    private readonly IHaContext _haContext;
    public SceneServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Activates a scene with configuration.</summary>
    public void Apply(SceneApplyParameters data)
    {
        _haContext.CallService("scene", "apply", null, data);
    }

    ///<summary>Activates a scene with configuration.</summary>
    ///<param name="entities">List of entities and their target state. eg: light.kitchen: &quot;on&quot; light.ceiling:   state: &quot;on&quot;   brightness: 80 </param>
    ///<param name="transition">Time it takes the devices to transition into the states defined in the scene.</param>
    public void Apply(object entities, double? transition = null)
    {
        _haContext.CallService("scene", "apply", null, new SceneApplyParameters { Entities = entities, Transition = transition });
    }

    ///<summary>Creates a new scene.</summary>
    public void Create(SceneCreateParameters data)
    {
        _haContext.CallService("scene", "create", null, data);
    }

    ///<summary>Creates a new scene.</summary>
    ///<param name="sceneId">The entity ID of the new scene. eg: all_lights</param>
    ///<param name="entities">List of entities and their target state. If your entities are already in the target state right now, use `snapshot_entities` instead. eg: light.tv_back_light: &quot;on&quot; light.ceiling:   state: &quot;on&quot;   brightness: 200 </param>
    ///<param name="snapshotEntities">List of entities to be included in the snapshot. By taking a snapshot, you record the current state of those entities. If you do not want to use the current state of all your entities for this scene, you can combine the `snapshot_entities` with `entities`. eg: - light.ceiling - light.kitchen </param>
    public void Create(string sceneId, object? entities = null, IEnumerable<string>? snapshotEntities = null)
    {
        _haContext.CallService("scene", "create", null, new SceneCreateParameters { SceneId = sceneId, Entities = entities, SnapshotEntities = snapshotEntities });
    }

    ///<summary>Deletes a dynamically created scene.</summary>
    ///<param name="target">The target for this service call</param>
    public void Delete(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("scene", "delete", target, data);
    }

    ///<summary>Reloads the scenes from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("scene", "reload", null, data);
    }

    ///<summary>Activates a scene.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, SceneTurnOnParameters data)
    {
        _haContext.CallService("scene", "turn_on", target, data);
    }

    ///<summary>Activates a scene.</summary>
    ///<param name="transition">Time it takes the devices to transition into the states defined in the scene.</param>
    public void TurnOn(ServiceTarget target, double? transition = null)
    {
        _haContext.CallService("scene", "turn_on", target, new SceneTurnOnParameters { Transition = transition });
    }
}

public partial record SceneApplyParameters
{
    ///<summary>List of entities and their target state. eg: light.kitchen: &quot;on&quot; light.ceiling:   state: &quot;on&quot;   brightness: 80 </summary>
    [JsonPropertyName("entities")]
    public object? Entities { get; init; }

    ///<summary>Time it takes the devices to transition into the states defined in the scene.</summary>
    [JsonPropertyName("transition")]
    public double? Transition { get; init; }
}

public partial record SceneCreateParameters
{
    ///<summary>The entity ID of the new scene. eg: all_lights</summary>
    [JsonPropertyName("scene_id")]
    public string? SceneId { get; init; }

    ///<summary>List of entities and their target state. If your entities are already in the target state right now, use `snapshot_entities` instead. eg: light.tv_back_light: &quot;on&quot; light.ceiling:   state: &quot;on&quot;   brightness: 200 </summary>
    [JsonPropertyName("entities")]
    public object? Entities { get; init; }

    ///<summary>List of entities to be included in the snapshot. By taking a snapshot, you record the current state of those entities. If you do not want to use the current state of all your entities for this scene, you can combine the `snapshot_entities` with `entities`. eg: - light.ceiling - light.kitchen </summary>
    [JsonPropertyName("snapshot_entities")]
    public IEnumerable<string>? SnapshotEntities { get; init; }
}

public partial record SceneTurnOnParameters
{
    ///<summary>Time it takes the devices to transition into the states defined in the scene.</summary>
    [JsonPropertyName("transition")]
    public double? Transition { get; init; }
}

public partial class ScheduleServices
{
    private readonly IHaContext _haContext;
    public ScheduleServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads schedules from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("schedule", "reload", null, data);
    }
}

public partial class ScriptServices
{
    private readonly IHaContext _haContext;
    public ScriptServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    public void AlarmTriggered(object? data = null)
    {
        _haContext.CallService("script", "alarm_triggered", null, data);
    }

    public Task<JsonElement?> AlarmTriggeredAsync(object? data = null)
    {
        return _haContext.CallServiceWithResponseAsync("script", "alarm_triggered", null, data);
    }

    public void CameraShedSnapshotAiNotification(object? data = null)
    {
        _haContext.CallService("script", "camera_shed_snapshot_ai_notification", null, data);
    }

    public Task<JsonElement?> CameraShedSnapshotAiNotificationAsync(object? data = null)
    {
        return _haContext.CallServiceWithResponseAsync("script", "camera_shed_snapshot_ai_notification", null, data);
    }

    public void FeedCats(object? data = null)
    {
        _haContext.CallService("script", "feed_cats", null, data);
    }

    public Task<JsonElement?> FeedCatsAsync(object? data = null)
    {
        return _haContext.CallServiceWithResponseAsync("script", "feed_cats", null, data);
    }

    ///<summary>Activates an actionable notification on a specific echo device</summary>
    public void NewScript(ScriptNewScriptParameters data)
    {
        _haContext.CallService("script", "new_script", null, data);
    }

    ///<summary>Activates an actionable notification on a specific echo device</summary>
    ///<param name="text">The text you would like alexa to speak. eg: What would you like the thermostat set to?</param>
    ///<param name="eventId">Correlation ID for event responses eg: ask_for_temperature</param>
    ///<param name="alexaDevice">Alexa device you want to trigger eg: media_player.bedroom_echo</param>
    public void NewScript(object? text = null, object? eventId = null, object? alexaDevice = null)
    {
        _haContext.CallService("script", "new_script", null, new ScriptNewScriptParameters { Text = text, EventId = eventId, AlexaDevice = alexaDevice });
    }

    ///<summary>Activates an actionable notification on a specific echo device</summary>
    public Task<JsonElement?> NewScriptAsync(ScriptNewScriptParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("script", "new_script", null, data);
    }

    ///<summary>Activates an actionable notification on a specific echo device</summary>
    ///<param name="text">The text you would like alexa to speak. eg: What would you like the thermostat set to?</param>
    ///<param name="eventId">Correlation ID for event responses eg: ask_for_temperature</param>
    ///<param name="alexaDevice">Alexa device you want to trigger eg: media_player.bedroom_echo</param>
    public Task<JsonElement?> NewScriptAsync(object? text = null, object? eventId = null, object? alexaDevice = null)
    {
        return _haContext.CallServiceWithResponseAsync("script", "new_script", null, new ScriptNewScriptParameters { Text = text, EventId = eventId, AlexaDevice = alexaDevice });
    }

    public void NotifyAlexaEverywhere(object? data = null)
    {
        _haContext.CallService("script", "notify_alexa_everywhere", null, data);
    }

    public Task<JsonElement?> NotifyAlexaEverywhereAsync(object? data = null)
    {
        return _haContext.CallServiceWithResponseAsync("script", "notify_alexa_everywhere", null, data);
    }

    public void NotifyAll(object? data = null)
    {
        _haContext.CallService("script", "notify_all", null, data);
    }

    public Task<JsonElement?> NotifyAllAsync(object? data = null)
    {
        return _haContext.CallServiceWithResponseAsync("script", "notify_all", null, data);
    }

    ///<summary>Reloads all the available scripts.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("script", "reload", null, data);
    }

    public void RoomControllerReset(object? data = null)
    {
        _haContext.CallService("script", "room_controller_reset", null, data);
    }

    public Task<JsonElement?> RoomControllerResetAsync(object? data = null)
    {
        return _haContext.CallServiceWithResponseAsync("script", "room_controller_reset", null, data);
    }

    ///<summary>Toggle a script. Starts it, if isn&apos;t running, stops it otherwise.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("script", "toggle", target, data);
    }

    ///<summary>Stops a running script.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("script", "turn_off", target, data);
    }

    ///<summary>Runs the sequence of actions defined in a script.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("script", "turn_on", target, data);
    }

    public void YeelightDimmer(ScriptYeelightDimmerParameters data)
    {
        _haContext.CallService("script", "yeelight_dimmer", null, data);
    }

    ///<param name="entitiyId">The entity ID of your bulb eg: light.your_light</param>
    ///<param name="buttonState">The entity ID of the input_text helper for your button state eg: input_text.your_button_state</param>
    public void YeelightDimmer(object entitiyId, object buttonState)
    {
        _haContext.CallService("script", "yeelight_dimmer", null, new ScriptYeelightDimmerParameters { EntitiyId = entitiyId, ButtonState = buttonState });
    }

    public Task<JsonElement?> YeelightDimmerAsync(ScriptYeelightDimmerParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("script", "yeelight_dimmer", null, data);
    }

    ///<param name="entitiyId">The entity ID of your bulb eg: light.your_light</param>
    ///<param name="buttonState">The entity ID of the input_text helper for your button state eg: input_text.your_button_state</param>
    public Task<JsonElement?> YeelightDimmerAsync(object entitiyId, object buttonState)
    {
        return _haContext.CallServiceWithResponseAsync("script", "yeelight_dimmer", null, new ScriptYeelightDimmerParameters { EntitiyId = entitiyId, ButtonState = buttonState });
    }

    public void YeelightDimmerDown(ScriptYeelightDimmerDownParameters data)
    {
        _haContext.CallService("script", "yeelight_dimmer_down", null, data);
    }

    ///<param name="entitiyId">The entity ID of your bulb eg: light.your_light</param>
    ///<param name="buttonState">The entity ID of the input_text helper for your button state eg: input_text.your_button_state</param>
    public void YeelightDimmerDown(object entitiyId, object buttonState)
    {
        _haContext.CallService("script", "yeelight_dimmer_down", null, new ScriptYeelightDimmerDownParameters { EntitiyId = entitiyId, ButtonState = buttonState });
    }

    public Task<JsonElement?> YeelightDimmerDownAsync(ScriptYeelightDimmerDownParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("script", "yeelight_dimmer_down", null, data);
    }

    ///<param name="entitiyId">The entity ID of your bulb eg: light.your_light</param>
    ///<param name="buttonState">The entity ID of the input_text helper for your button state eg: input_text.your_button_state</param>
    public Task<JsonElement?> YeelightDimmerDownAsync(object entitiyId, object buttonState)
    {
        return _haContext.CallServiceWithResponseAsync("script", "yeelight_dimmer_down", null, new ScriptYeelightDimmerDownParameters { EntitiyId = entitiyId, ButtonState = buttonState });
    }
}

public partial record ScriptNewScriptParameters
{
    ///<summary>The text you would like alexa to speak. eg: What would you like the thermostat set to?</summary>
    [JsonPropertyName("text")]
    public object? Text { get; init; }

    ///<summary>Correlation ID for event responses eg: ask_for_temperature</summary>
    [JsonPropertyName("event_id")]
    public object? EventId { get; init; }

    ///<summary>Alexa device you want to trigger eg: media_player.bedroom_echo</summary>
    [JsonPropertyName("alexa_device")]
    public object? AlexaDevice { get; init; }
}

public partial record ScriptYeelightDimmerParameters
{
    ///<summary>The entity ID of your bulb eg: light.your_light</summary>
    [JsonPropertyName("entitiy_id")]
    public object? EntitiyId { get; init; }

    ///<summary>The entity ID of the input_text helper for your button state eg: input_text.your_button_state</summary>
    [JsonPropertyName("button_state")]
    public object? ButtonState { get; init; }
}

public partial record ScriptYeelightDimmerDownParameters
{
    ///<summary>The entity ID of your bulb eg: light.your_light</summary>
    [JsonPropertyName("entitiy_id")]
    public object? EntitiyId { get; init; }

    ///<summary>The entity ID of the input_text helper for your button state eg: input_text.your_button_state</summary>
    [JsonPropertyName("button_state")]
    public object? ButtonState { get; init; }
}

public partial class SelectServices
{
    private readonly IHaContext _haContext;
    public SelectServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Selects the first option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectFirst(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("select", "select_first", target, data);
    }

    ///<summary>Selects the last option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectLast(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("select", "select_last", target, data);
    }

    ///<summary>Selects the next option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectNext(ServiceTarget target, SelectSelectNextParameters data)
    {
        _haContext.CallService("select", "select_next", target, data);
    }

    ///<summary>Selects the next option.</summary>
    ///<param name="cycle">If the option should cycle from the last to the first.</param>
    public void SelectNext(ServiceTarget target, bool? cycle = null)
    {
        _haContext.CallService("select", "select_next", target, new SelectSelectNextParameters { Cycle = cycle });
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectOption(ServiceTarget target, SelectSelectOptionParameters data)
    {
        _haContext.CallService("select", "select_option", target, data);
    }

    ///<summary>Selects an option.</summary>
    ///<param name="option">Option to be selected. eg: &quot;Item A&quot;</param>
    public void SelectOption(ServiceTarget target, string option)
    {
        _haContext.CallService("select", "select_option", target, new SelectSelectOptionParameters { Option = option });
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The target for this service call</param>
    public void SelectPrevious(ServiceTarget target, SelectSelectPreviousParameters data)
    {
        _haContext.CallService("select", "select_previous", target, data);
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="cycle">If the option should cycle from the first to the last.</param>
    public void SelectPrevious(ServiceTarget target, bool? cycle = null)
    {
        _haContext.CallService("select", "select_previous", target, new SelectSelectPreviousParameters { Cycle = cycle });
    }
}

public partial record SelectSelectNextParameters
{
    ///<summary>If the option should cycle from the last to the first.</summary>
    [JsonPropertyName("cycle")]
    public bool? Cycle { get; init; }
}

public partial record SelectSelectOptionParameters
{
    ///<summary>Option to be selected. eg: &quot;Item A&quot;</summary>
    [JsonPropertyName("option")]
    public string? Option { get; init; }
}

public partial record SelectSelectPreviousParameters
{
    ///<summary>If the option should cycle from the first to the last.</summary>
    [JsonPropertyName("cycle")]
    public bool? Cycle { get; init; }
}

public partial class ShoppingListServices
{
    private readonly IHaContext _haContext;
    public ShoppingListServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Adds an item to the shopping list.</summary>
    public void AddItem(ShoppingListAddItemParameters data)
    {
        _haContext.CallService("shopping_list", "add_item", null, data);
    }

    ///<summary>Adds an item to the shopping list.</summary>
    ///<param name="name">The name of the item to add. eg: Beer</param>
    public void AddItem(string name)
    {
        _haContext.CallService("shopping_list", "add_item", null, new ShoppingListAddItemParameters { Name = name });
    }

    ///<summary>Clears completed items from the shopping list.</summary>
    public void ClearCompletedItems(object? data = null)
    {
        _haContext.CallService("shopping_list", "clear_completed_items", null, data);
    }

    ///<summary>Marks all items as completed in the shopping list (without removing them from the list).</summary>
    public void CompleteAll(object? data = null)
    {
        _haContext.CallService("shopping_list", "complete_all", null, data);
    }

    ///<summary>Marks the first item with matching name as completed in the shopping list.</summary>
    public void CompleteItem(ShoppingListCompleteItemParameters data)
    {
        _haContext.CallService("shopping_list", "complete_item", null, data);
    }

    ///<summary>Marks the first item with matching name as completed in the shopping list.</summary>
    ///<param name="name">The name of the item to mark as completed (without removing). eg: Beer</param>
    public void CompleteItem(string name)
    {
        _haContext.CallService("shopping_list", "complete_item", null, new ShoppingListCompleteItemParameters { Name = name });
    }

    ///<summary>Marks all items as incomplete in the shopping list.</summary>
    public void IncompleteAll(object? data = null)
    {
        _haContext.CallService("shopping_list", "incomplete_all", null, data);
    }

    ///<summary>Marks the first item with matching name as incomplete in the shopping list.</summary>
    public void IncompleteItem(ShoppingListIncompleteItemParameters data)
    {
        _haContext.CallService("shopping_list", "incomplete_item", null, data);
    }

    ///<summary>Marks the first item with matching name as incomplete in the shopping list.</summary>
    ///<param name="name">The name of the item to mark as incomplete. eg: Beer</param>
    public void IncompleteItem(string name)
    {
        _haContext.CallService("shopping_list", "incomplete_item", null, new ShoppingListIncompleteItemParameters { Name = name });
    }

    ///<summary>Removes the first item with matching name from the shopping list.</summary>
    public void RemoveItem(ShoppingListRemoveItemParameters data)
    {
        _haContext.CallService("shopping_list", "remove_item", null, data);
    }

    ///<summary>Removes the first item with matching name from the shopping list.</summary>
    ///<param name="name">The name of the item to remove. eg: Beer</param>
    public void RemoveItem(string name)
    {
        _haContext.CallService("shopping_list", "remove_item", null, new ShoppingListRemoveItemParameters { Name = name });
    }

    ///<summary>Sorts all items by name in the shopping list.</summary>
    public void Sort(ShoppingListSortParameters data)
    {
        _haContext.CallService("shopping_list", "sort", null, data);
    }

    ///<summary>Sorts all items by name in the shopping list.</summary>
    ///<param name="reverse">Whether to sort in reverse (descending) order.</param>
    public void Sort(bool? reverse = null)
    {
        _haContext.CallService("shopping_list", "sort", null, new ShoppingListSortParameters { Reverse = reverse });
    }
}

public partial record ShoppingListAddItemParameters
{
    ///<summary>The name of the item to add. eg: Beer</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }
}

public partial record ShoppingListCompleteItemParameters
{
    ///<summary>The name of the item to mark as completed (without removing). eg: Beer</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }
}

public partial record ShoppingListIncompleteItemParameters
{
    ///<summary>The name of the item to mark as incomplete. eg: Beer</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }
}

public partial record ShoppingListRemoveItemParameters
{
    ///<summary>The name of the item to remove. eg: Beer</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }
}

public partial record ShoppingListSortParameters
{
    ///<summary>Whether to sort in reverse (descending) order.</summary>
    [JsonPropertyName("reverse")]
    public bool? Reverse { get; init; }
}

public partial class SirenServices
{
    private readonly IHaContext _haContext;
    public SirenServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Toggles the siren on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("siren", "toggle", target, data);
    }

    ///<summary>Turns the siren off.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("siren", "turn_off", target, data);
    }

    ///<summary>Turns the siren on.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, SirenTurnOnParameters data)
    {
        _haContext.CallService("siren", "turn_on", target, data);
    }

    ///<summary>Turns the siren on.</summary>
    ///<param name="tone">The tone to emit. When `available_tones` property is a map, either the key or the value can be used. Must be supported by the integration. eg: fire</param>
    ///<param name="volumeLevel">The volume. 0 is inaudible, 1 is the maximum volume. Must be supported by the integration. eg: 0.5</param>
    ///<param name="duration">Number of seconds the sound is played. Must be supported by the integration. eg: 15</param>
    public void TurnOn(ServiceTarget target, string? tone = null, double? volumeLevel = null, string? duration = null)
    {
        _haContext.CallService("siren", "turn_on", target, new SirenTurnOnParameters { Tone = tone, VolumeLevel = volumeLevel, Duration = duration });
    }
}

public partial record SirenTurnOnParameters
{
    ///<summary>The tone to emit. When `available_tones` property is a map, either the key or the value can be used. Must be supported by the integration. eg: fire</summary>
    [JsonPropertyName("tone")]
    public string? Tone { get; init; }

    ///<summary>The volume. 0 is inaudible, 1 is the maximum volume. Must be supported by the integration. eg: 0.5</summary>
    [JsonPropertyName("volume_level")]
    public double? VolumeLevel { get; init; }

    ///<summary>Number of seconds the sound is played. Must be supported by the integration. eg: 15</summary>
    [JsonPropertyName("duration")]
    public string? Duration { get; init; }
}

public partial class SpotcastServices
{
    private readonly IHaContext _haContext;
    public SpotcastServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Starts spotify playback on chromecast devices</summary>
    public void Start(SpotcastStartParameters data)
    {
        _haContext.CallService("spotcast", "start", null, data);
    }

    ///<summary>Starts spotify playback on chromecast devices</summary>
    ///<param name="deviceName">The friendly name of the chromecast or spotify connect device. First checks spotify device list for name (not used together with entity_id and spotify_device_id). eg: Livingroom</param>
    ///<param name="spotifyDeviceId">Advanced users only. The spotify device id (not used together with entity_id or device_name). eg: 4363634563457346xcyvydgf3qwa</param>
    ///<param name="entityId">The entity_id of the chromecast mediaplayer. Friendly name MUST match the spotify connect device name (not used together with device_name and spotify_device_id). eg: media_player.vardagsrum</param>
    ///<param name="uri">Supported Spotify URI as string. None or empty uri will transfer the current/last playback (see parameter force_playback). eg: spotify:playlist:37i9dQZF1DX3yvAYDslnv8</param>
    ///<param name="category">A category to fetch playlist from. See https://developer.spotify.com/console/get-browse-categories/ for a list of categories</param>
    ///<param name="country">Country code to use with category. See https://spotipy.readthedocs.io/en/2.19.0/#spotipy.client.Spotify.country_codes for list of available codes</param>
    ///<param name="limit">Limit of playlist to fetch in a given category. Default 20</param>
    ///<param name="albumName">Filters search results for the provided album name. Don&apos;t include this if you don&apos;t want an album. eg: The Dark Side of the Moon</param>
    ///<param name="trackName">Filters search results for the provided track name. Don&apos;t include this if you don&apos;t want a particular track. eg: Money</param>
    ///<param name="playlistName">Filters search results for the provided playlist name. Don&apos;t include this if you don&apos;t want a playlist. eg: Ultimate pink floyd playlist</param>
    ///<param name="showName">Filters search results for the provided podcast show name. Don&apos;t include this if you don&apos;t want a podcast. eg: Hollywood Handbook</param>
    ///<param name="episodeName">Filters search results for the provided podcast episode name. Don&apos;t include this if you don&apos;t want a podcast. eg: Sarah Sherman, Our Close Friend</param>
    ///<param name="genreName">Filters search results by genre of music eg: post punk</param>
    ///<param name="audiobookName">Filters search results for the provided audiobook name. Don&apos;t include this if you don&apos;t want an audiobook. eg: Ulysses</param>
    ///<param name="artistName">This will filter search results to match the provided artist name. Don&apos;t include this if searching for a playlist or genre. Do include the author&apos;s name if searching for audiobooks. eg: pink floyd</param>
    ///<param name="account">Optionally starts Spotify using an alternative account specified in config. eg: my_wifes</param>
    ///<param name="forcePlayback">In case of transfering playback: If true starts playing the user&apos;s last playback even if nothing is currently playing. eg: True</param>
    ///<param name="randomSong">Starts the playback at a random position in the playlist or album. eg: True</param>
    ///<param name="repeat">Set repeat mode for playback. eg: track</param>
    ///<param name="shuffle">Set shuffle mode for playback. eg: True</param>
    ///<param name="offset">Set offset mode for playback. 0 is the first song. eg: 1</param>
    ///<param name="startPosition">Start position of the track in seconds eg: 1</param>
    ///<param name="startVolume">Set the volume for playback in percentage. eg: 50</param>
    ///<param name="ignoreFullyPlayed">Set to ignore or not already played episodes in a podcast playlist eg: True</param>
    public void Start(string? deviceName = null, string? spotifyDeviceId = null, string? entityId = null, string? uri = null, string? category = null, string? country = null, long? limit = null, string? albumName = null, string? trackName = null, string? playlistName = null, string? showName = null, string? episodeName = null, string? genreName = null, string? audiobookName = null, string? artistName = null, string? account = null, bool? forcePlayback = null, bool? randomSong = null, object? repeat = null, bool? shuffle = null, long? offset = null, long? startPosition = null, long? startVolume = null, bool? ignoreFullyPlayed = null)
    {
        _haContext.CallService("spotcast", "start", null, new SpotcastStartParameters { DeviceName = deviceName, SpotifyDeviceId = spotifyDeviceId, EntityId = entityId, Uri = uri, Category = category, Country = country, Limit = limit, AlbumName = albumName, TrackName = trackName, PlaylistName = playlistName, ShowName = showName, EpisodeName = episodeName, GenreName = genreName, AudiobookName = audiobookName, ArtistName = artistName, Account = account, ForcePlayback = forcePlayback, RandomSong = randomSong, Repeat = repeat, Shuffle = shuffle, Offset = offset, StartPosition = startPosition, StartVolume = startVolume, IgnoreFullyPlayed = ignoreFullyPlayed });
    }
}

public partial record SpotcastStartParameters
{
    ///<summary>The friendly name of the chromecast or spotify connect device. First checks spotify device list for name (not used together with entity_id and spotify_device_id). eg: Livingroom</summary>
    [JsonPropertyName("device_name")]
    public string? DeviceName { get; init; }

    ///<summary>Advanced users only. The spotify device id (not used together with entity_id or device_name). eg: 4363634563457346xcyvydgf3qwa</summary>
    [JsonPropertyName("spotify_device_id")]
    public string? SpotifyDeviceId { get; init; }

    ///<summary>The entity_id of the chromecast mediaplayer. Friendly name MUST match the spotify connect device name (not used together with device_name and spotify_device_id). eg: media_player.vardagsrum</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary>Supported Spotify URI as string. None or empty uri will transfer the current/last playback (see parameter force_playback). eg: spotify:playlist:37i9dQZF1DX3yvAYDslnv8</summary>
    [JsonPropertyName("uri")]
    public string? Uri { get; init; }

    ///<summary>A category to fetch playlist from. See https://developer.spotify.com/console/get-browse-categories/ for a list of categories</summary>
    [JsonPropertyName("category")]
    public string? Category { get; init; }

    ///<summary>Country code to use with category. See https://spotipy.readthedocs.io/en/2.19.0/#spotipy.client.Spotify.country_codes for list of available codes</summary>
    [JsonPropertyName("country")]
    public string? Country { get; init; }

    ///<summary>Limit of playlist to fetch in a given category. Default 20</summary>
    [JsonPropertyName("limit")]
    public long? Limit { get; init; }

    ///<summary>Filters search results for the provided album name. Don&apos;t include this if you don&apos;t want an album. eg: The Dark Side of the Moon</summary>
    [JsonPropertyName("album_name")]
    public string? AlbumName { get; init; }

    ///<summary>Filters search results for the provided track name. Don&apos;t include this if you don&apos;t want a particular track. eg: Money</summary>
    [JsonPropertyName("track_name")]
    public string? TrackName { get; init; }

    ///<summary>Filters search results for the provided playlist name. Don&apos;t include this if you don&apos;t want a playlist. eg: Ultimate pink floyd playlist</summary>
    [JsonPropertyName("playlist_name")]
    public string? PlaylistName { get; init; }

    ///<summary>Filters search results for the provided podcast show name. Don&apos;t include this if you don&apos;t want a podcast. eg: Hollywood Handbook</summary>
    [JsonPropertyName("show_name")]
    public string? ShowName { get; init; }

    ///<summary>Filters search results for the provided podcast episode name. Don&apos;t include this if you don&apos;t want a podcast. eg: Sarah Sherman, Our Close Friend</summary>
    [JsonPropertyName("episode_name")]
    public string? EpisodeName { get; init; }

    ///<summary>Filters search results by genre of music eg: post punk</summary>
    [JsonPropertyName("genre_name")]
    public string? GenreName { get; init; }

    ///<summary>Filters search results for the provided audiobook name. Don&apos;t include this if you don&apos;t want an audiobook. eg: Ulysses</summary>
    [JsonPropertyName("audiobook_name")]
    public string? AudiobookName { get; init; }

    ///<summary>This will filter search results to match the provided artist name. Don&apos;t include this if searching for a playlist or genre. Do include the author&apos;s name if searching for audiobooks. eg: pink floyd</summary>
    [JsonPropertyName("artist_name")]
    public string? ArtistName { get; init; }

    ///<summary>Optionally starts Spotify using an alternative account specified in config. eg: my_wifes</summary>
    [JsonPropertyName("account")]
    public string? Account { get; init; }

    ///<summary>In case of transfering playback: If true starts playing the user&apos;s last playback even if nothing is currently playing. eg: True</summary>
    [JsonPropertyName("force_playback")]
    public bool? ForcePlayback { get; init; }

    ///<summary>Starts the playback at a random position in the playlist or album. eg: True</summary>
    [JsonPropertyName("random_song")]
    public bool? RandomSong { get; init; }

    ///<summary>Set repeat mode for playback. eg: track</summary>
    [JsonPropertyName("repeat")]
    public object? Repeat { get; init; }

    ///<summary>Set shuffle mode for playback. eg: True</summary>
    [JsonPropertyName("shuffle")]
    public bool? Shuffle { get; init; }

    ///<summary>Set offset mode for playback. 0 is the first song. eg: 1</summary>
    [JsonPropertyName("offset")]
    public long? Offset { get; init; }

    ///<summary>Start position of the track in seconds eg: 1</summary>
    [JsonPropertyName("start_position")]
    public long? StartPosition { get; init; }

    ///<summary>Set the volume for playback in percentage. eg: 50</summary>
    [JsonPropertyName("start_volume")]
    public long? StartVolume { get; init; }

    ///<summary>Set to ignore or not already played episodes in a podcast playlist eg: True</summary>
    [JsonPropertyName("ignore_fully_played")]
    public bool? IgnoreFullyPlayed { get; init; }
}

public partial class SqueezeboxServices
{
    private readonly IHaContext _haContext;
    public SqueezeboxServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Calls a custom Squeezebox JSONRPC API.</summary>
    ///<param name="target">The target for this service call</param>
    public void CallMethod(ServiceTarget target, SqueezeboxCallMethodParameters data)
    {
        _haContext.CallService("squeezebox", "call_method", target, data);
    }

    ///<summary>Calls a custom Squeezebox JSONRPC API.</summary>
    ///<param name="command">Command to pass to Lyrion Music Server (p0 in the CLI documentation). eg: playlist</param>
    ///<param name="parameters">Array of additional parameters to pass to Lyrion Music Server (p1, ..., pN in the CLI documentation). . eg: [&quot;loadtracks&quot;, &quot;album.titlesearch=Revolver&quot;]</param>
    public void CallMethod(ServiceTarget target, string command, object? parameters = null)
    {
        _haContext.CallService("squeezebox", "call_method", target, new SqueezeboxCallMethodParameters { Command = command, Parameters = parameters });
    }

    ///<summary>Calls a custom Squeezebox JSONRPC API. Result will be stored in &apos;query_result&apos; attribute of the Squeezebox entity. .</summary>
    ///<param name="target">The target for this service call</param>
    public void CallQuery(ServiceTarget target, SqueezeboxCallQueryParameters data)
    {
        _haContext.CallService("squeezebox", "call_query", target, data);
    }

    ///<summary>Calls a custom Squeezebox JSONRPC API. Result will be stored in &apos;query_result&apos; attribute of the Squeezebox entity. .</summary>
    ///<param name="command">Command to pass to Lyrion Music Server (p0 in the CLI documentation). eg: albums</param>
    ///<param name="parameters">Array of additional parameters to pass to Lyrion Music Server (p1, ..., pN in the CLI documentation). . eg: [&quot;0&quot;, &quot;20&quot;, &quot;search:Revolver&quot;]</param>
    public void CallQuery(ServiceTarget target, string command, object? parameters = null)
    {
        _haContext.CallService("squeezebox", "call_query", target, new SqueezeboxCallQueryParameters { Command = command, Parameters = parameters });
    }
}

public partial record SqueezeboxCallMethodParameters
{
    ///<summary>Command to pass to Lyrion Music Server (p0 in the CLI documentation). eg: playlist</summary>
    [JsonPropertyName("command")]
    public string? Command { get; init; }

    ///<summary>Array of additional parameters to pass to Lyrion Music Server (p1, ..., pN in the CLI documentation). . eg: [&quot;loadtracks&quot;, &quot;album.titlesearch=Revolver&quot;]</summary>
    [JsonPropertyName("parameters")]
    public object? Parameters { get; init; }
}

public partial record SqueezeboxCallQueryParameters
{
    ///<summary>Command to pass to Lyrion Music Server (p0 in the CLI documentation). eg: albums</summary>
    [JsonPropertyName("command")]
    public string? Command { get; init; }

    ///<summary>Array of additional parameters to pass to Lyrion Music Server (p1, ..., pN in the CLI documentation). . eg: [&quot;0&quot;, &quot;20&quot;, &quot;search:Revolver&quot;]</summary>
    [JsonPropertyName("parameters")]
    public object? Parameters { get; init; }
}

public partial class SwitchServices
{
    private readonly IHaContext _haContext;
    public SwitchServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Toggles a switch on/off.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("switch", "toggle", target, data);
    }

    ///<summary>Turns a switch off.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOff(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("switch", "turn_off", target, data);
    }

    ///<summary>Turns a switch on.</summary>
    ///<param name="target">The target for this service call</param>
    public void TurnOn(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("switch", "turn_on", target, data);
    }
}

public partial class SystemLogServices
{
    private readonly IHaContext _haContext;
    public SystemLogServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Clears all log entries.</summary>
    public void Clear(object? data = null)
    {
        _haContext.CallService("system_log", "clear", null, data);
    }

    ///<summary>Write log entry.</summary>
    public void Write(SystemLogWriteParameters data)
    {
        _haContext.CallService("system_log", "write", null, data);
    }

    ///<summary>Write log entry.</summary>
    ///<param name="message">Message to log. eg: Something went wrong</param>
    ///<param name="level">Log level.</param>
    ///<param name="logger">Logger name under which to log the message. Defaults to `system_log.external`. eg: mycomponent.myplatform</param>
    public void Write(string message, object? level = null, string? logger = null)
    {
        _haContext.CallService("system_log", "write", null, new SystemLogWriteParameters { Message = message, Level = level, Logger = logger });
    }
}

public partial record SystemLogWriteParameters
{
    ///<summary>Message to log. eg: Something went wrong</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary>Log level.</summary>
    [JsonPropertyName("level")]
    public object? Level { get; init; }

    ///<summary>Logger name under which to log the message. Defaults to `system_log.external`. eg: mycomponent.myplatform</summary>
    [JsonPropertyName("logger")]
    public string? Logger { get; init; }
}

public partial class TemplateServices
{
    private readonly IHaContext _haContext;
    public TemplateServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads template entities from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("template", "reload", null, data);
    }
}

public partial class TextServices
{
    private readonly IHaContext _haContext;
    public TextServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValue(ServiceTarget target, TextSetValueParameters data)
    {
        _haContext.CallService("text", "set_value", target, data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="value">Enter your text. eg: Hello world!</param>
    public void SetValue(ServiceTarget target, string value)
    {
        _haContext.CallService("text", "set_value", target, new TextSetValueParameters { Value = value });
    }
}

public partial record TextSetValueParameters
{
    ///<summary>Enter your text. eg: Hello world!</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }
}

public partial class TimeServices
{
    private readonly IHaContext _haContext;
    public TimeServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Sets the time.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValue(ServiceTarget target, TimeSetValueParameters data)
    {
        _haContext.CallService("time", "set_value", target, data);
    }

    ///<summary>Sets the time.</summary>
    ///<param name="time">The time to set. eg: 22:15</param>
    public void SetValue(ServiceTarget target, TimeOnly time)
    {
        _haContext.CallService("time", "set_value", target, new TimeSetValueParameters { Time = time });
    }
}

public partial record TimeSetValueParameters
{
    ///<summary>The time to set. eg: 22:15</summary>
    [JsonPropertyName("time")]
    public TimeOnly? Time { get; init; }
}

public partial class TimerServices
{
    private readonly IHaContext _haContext;
    public TimerServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Cancels a timer.</summary>
    ///<param name="target">The target for this service call</param>
    public void Cancel(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("timer", "cancel", target, data);
    }

    ///<summary>Changes a timer.</summary>
    ///<param name="target">The target for this service call</param>
    public void Change(ServiceTarget target, TimerChangeParameters data)
    {
        _haContext.CallService("timer", "change", target, data);
    }

    ///<summary>Changes a timer.</summary>
    ///<param name="duration">Duration to add or subtract to the running timer. eg: 00:01:00, 60 or -60</param>
    public void Change(ServiceTarget target, string duration)
    {
        _haContext.CallService("timer", "change", target, new TimerChangeParameters { Duration = duration });
    }

    ///<summary>Finishes a timer.</summary>
    ///<param name="target">The target for this service call</param>
    public void Finish(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("timer", "finish", target, data);
    }

    ///<summary>Pauses a timer.</summary>
    ///<param name="target">The target for this service call</param>
    public void Pause(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("timer", "pause", target, data);
    }

    ///<summary>Reloads timers from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("timer", "reload", null, data);
    }

    ///<summary>Starts a timer.</summary>
    ///<param name="target">The target for this service call</param>
    public void Start(ServiceTarget target, TimerStartParameters data)
    {
        _haContext.CallService("timer", "start", target, data);
    }

    ///<summary>Starts a timer.</summary>
    ///<param name="duration">Duration the timer requires to finish. [optional]. eg: 00:01:00 or 60</param>
    public void Start(ServiceTarget target, string? duration = null)
    {
        _haContext.CallService("timer", "start", target, new TimerStartParameters { Duration = duration });
    }
}

public partial record TimerChangeParameters
{
    ///<summary>Duration to add or subtract to the running timer. eg: 00:01:00, 60 or -60</summary>
    [JsonPropertyName("duration")]
    public string? Duration { get; init; }
}

public partial record TimerStartParameters
{
    ///<summary>Duration the timer requires to finish. [optional]. eg: 00:01:00 or 60</summary>
    [JsonPropertyName("duration")]
    public string? Duration { get; init; }
}

public partial class TodoServices
{
    private readonly IHaContext _haContext;
    public TodoServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Add a new to-do list item.</summary>
    ///<param name="target">The target for this service call</param>
    public void AddItem(ServiceTarget target, TodoAddItemParameters data)
    {
        _haContext.CallService("todo", "add_item", target, data);
    }

    ///<summary>Add a new to-do list item.</summary>
    ///<param name="item">The name that represents the to-do item. eg: Submit income tax return</param>
    ///<param name="dueDate">The date the to-do item is expected to be completed. eg: 2023-11-17</param>
    ///<param name="dueDatetime">The date and time the to-do item is expected to be completed. eg: 2023-11-17 13:30:00</param>
    ///<param name="description">A more complete description of the to-do item than provided by the item name. eg: A more complete description of the to-do item than that provided by the summary.</param>
    public void AddItem(ServiceTarget target, string item, DateOnly? dueDate = null, DateTime? dueDatetime = null, string? description = null)
    {
        _haContext.CallService("todo", "add_item", target, new TodoAddItemParameters { Item = item, DueDate = dueDate, DueDatetime = dueDatetime, Description = description });
    }

    ///<summary>Get items on a to-do list.</summary>
    ///<param name="target">The target for this service call</param>
    public void GetItems(ServiceTarget target, TodoGetItemsParameters data)
    {
        _haContext.CallService("todo", "get_items", target, data);
    }

    ///<summary>Get items on a to-do list.</summary>
    ///<param name="status">Only return to-do items with the specified statuses. Returns not completed actions by default. eg: needs_action</param>
    public void GetItems(ServiceTarget target, IEnumerable<object>? status = null)
    {
        _haContext.CallService("todo", "get_items", target, new TodoGetItemsParameters { Status = status });
    }

    ///<summary>Get items on a to-do list.</summary>
    ///<param name="target">The target for this service call</param>
    public Task<JsonElement?> GetItemsAsync(ServiceTarget target, TodoGetItemsParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("todo", "get_items", target, data);
    }

    ///<summary>Get items on a to-do list.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="status">Only return to-do items with the specified statuses. Returns not completed actions by default. eg: needs_action</param>
    public Task<JsonElement?> GetItemsAsync(ServiceTarget target, IEnumerable<object>? status = null)
    {
        return _haContext.CallServiceWithResponseAsync("todo", "get_items", target, new TodoGetItemsParameters { Status = status });
    }

    ///<summary>Remove all to-do list items that have been completed.</summary>
    ///<param name="target">The target for this service call</param>
    public void RemoveCompletedItems(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("todo", "remove_completed_items", target, data);
    }

    ///<summary>Remove an existing to-do list item by its name.</summary>
    ///<param name="target">The target for this service call</param>
    public void RemoveItem(ServiceTarget target, TodoRemoveItemParameters data)
    {
        _haContext.CallService("todo", "remove_item", target, data);
    }

    ///<summary>Remove an existing to-do list item by its name.</summary>
    ///<param name="item">The name for the to-do list items.</param>
    public void RemoveItem(ServiceTarget target, string item)
    {
        _haContext.CallService("todo", "remove_item", target, new TodoRemoveItemParameters { Item = item });
    }

    ///<summary>Update an existing to-do list item based on its name.</summary>
    ///<param name="target">The target for this service call</param>
    public void UpdateItem(ServiceTarget target, TodoUpdateItemParameters data)
    {
        _haContext.CallService("todo", "update_item", target, data);
    }

    ///<summary>Update an existing to-do list item based on its name.</summary>
    ///<param name="item">The name for the to-do list item. eg: Submit income tax return</param>
    ///<param name="rename">The new name of the to-do item eg: Something else</param>
    ///<param name="status">A status or confirmation of the to-do item. eg: needs_action</param>
    ///<param name="dueDate">The date the to-do item is expected to be completed. eg: 2023-11-17</param>
    ///<param name="dueDatetime">The date and time the to-do item is expected to be completed. eg: 2023-11-17 13:30:00</param>
    ///<param name="description">A more complete description of the to-do item than provided by the item name. eg: A more complete description of the to-do item than that provided by the summary.</param>
    public void UpdateItem(ServiceTarget target, string item, string? rename = null, object? status = null, DateOnly? dueDate = null, DateTime? dueDatetime = null, string? description = null)
    {
        _haContext.CallService("todo", "update_item", target, new TodoUpdateItemParameters { Item = item, Rename = rename, Status = status, DueDate = dueDate, DueDatetime = dueDatetime, Description = description });
    }
}

public partial record TodoAddItemParameters
{
    ///<summary>The name that represents the to-do item. eg: Submit income tax return</summary>
    [JsonPropertyName("item")]
    public string? Item { get; init; }

    ///<summary>The date the to-do item is expected to be completed. eg: 2023-11-17</summary>
    [JsonPropertyName("due_date")]
    public DateOnly? DueDate { get; init; }

    ///<summary>The date and time the to-do item is expected to be completed. eg: 2023-11-17 13:30:00</summary>
    [JsonPropertyName("due_datetime")]
    public DateTime? DueDatetime { get; init; }

    ///<summary>A more complete description of the to-do item than provided by the item name. eg: A more complete description of the to-do item than that provided by the summary.</summary>
    [JsonPropertyName("description")]
    public string? Description { get; init; }
}

public partial record TodoGetItemsParameters
{
    ///<summary>Only return to-do items with the specified statuses. Returns not completed actions by default. eg: needs_action</summary>
    [JsonPropertyName("status")]
    public IEnumerable<object>? Status { get; init; }
}

public partial record TodoRemoveItemParameters
{
    ///<summary>The name for the to-do list items.</summary>
    [JsonPropertyName("item")]
    public string? Item { get; init; }
}

public partial record TodoUpdateItemParameters
{
    ///<summary>The name for the to-do list item. eg: Submit income tax return</summary>
    [JsonPropertyName("item")]
    public string? Item { get; init; }

    ///<summary>The new name of the to-do item eg: Something else</summary>
    [JsonPropertyName("rename")]
    public string? Rename { get; init; }

    ///<summary>A status or confirmation of the to-do item. eg: needs_action</summary>
    [JsonPropertyName("status")]
    public object? Status { get; init; }

    ///<summary>The date the to-do item is expected to be completed. eg: 2023-11-17</summary>
    [JsonPropertyName("due_date")]
    public DateOnly? DueDate { get; init; }

    ///<summary>The date and time the to-do item is expected to be completed. eg: 2023-11-17 13:30:00</summary>
    [JsonPropertyName("due_datetime")]
    public DateTime? DueDatetime { get; init; }

    ///<summary>A more complete description of the to-do item than provided by the item name. eg: A more complete description of the to-do item than that provided by the summary.</summary>
    [JsonPropertyName("description")]
    public string? Description { get; init; }
}

public partial class TtsServices
{
    private readonly IHaContext _haContext;
    public TtsServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Removes all cached text-to-speech files and purges the memory.</summary>
    public void ClearCache(object? data = null)
    {
        _haContext.CallService("tts", "clear_cache", null, data);
    }

    ///<summary>Say something using text-to-speech on a media player with cloud.</summary>
    public void CloudSay(TtsCloudSayParameters data)
    {
        _haContext.CallService("tts", "cloud_say", null, data);
    }

    ///<summary>Say something using text-to-speech on a media player with cloud.</summary>
    ///<param name="entityId"></param>
    ///<param name="message"> eg: My name is hanna</param>
    ///<param name="cache"></param>
    ///<param name="language"> eg: ru</param>
    ///<param name="options"> eg: platform specific</param>
    public void CloudSay(string entityId, string message, bool? cache = null, string? language = null, object? options = null)
    {
        _haContext.CallService("tts", "cloud_say", null, new TtsCloudSayParameters { EntityId = entityId, Message = message, Cache = cache, Language = language, Options = options });
    }

    ///<summary>Speaks something using text-to-speech on a media player.</summary>
    ///<param name="target">The target for this service call</param>
    public void Speak(ServiceTarget target, TtsSpeakParameters data)
    {
        _haContext.CallService("tts", "speak", target, data);
    }

    ///<summary>Speaks something using text-to-speech on a media player.</summary>
    ///<param name="mediaPlayerEntityId">Media players to play the message.</param>
    ///<param name="message">The text you want to convert into speech so that you can listen to it on your device. eg: My name is hanna</param>
    ///<param name="cache">Stores this message locally so that when the text is requested again, the output can be produced more quickly.</param>
    ///<param name="language">Language to use for speech generation. eg: ru</param>
    ///<param name="options">A dictionary containing integration-specific options. eg: platform specific</param>
    public void Speak(ServiceTarget target, string mediaPlayerEntityId, string message, bool? cache = null, string? language = null, object? options = null)
    {
        _haContext.CallService("tts", "speak", target, new TtsSpeakParameters { MediaPlayerEntityId = mediaPlayerEntityId, Message = message, Cache = cache, Language = language, Options = options });
    }
}

public partial record TtsCloudSayParameters
{
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary> eg: My name is hanna</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    [JsonPropertyName("cache")]
    public bool? Cache { get; init; }

    ///<summary> eg: ru</summary>
    [JsonPropertyName("language")]
    public string? Language { get; init; }

    ///<summary> eg: platform specific</summary>
    [JsonPropertyName("options")]
    public object? Options { get; init; }
}

public partial record TtsSpeakParameters
{
    ///<summary>Media players to play the message.</summary>
    [JsonPropertyName("media_player_entity_id")]
    public string? MediaPlayerEntityId { get; init; }

    ///<summary>The text you want to convert into speech so that you can listen to it on your device. eg: My name is hanna</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }

    ///<summary>Stores this message locally so that when the text is requested again, the output can be produced more quickly.</summary>
    [JsonPropertyName("cache")]
    public bool? Cache { get; init; }

    ///<summary>Language to use for speech generation. eg: ru</summary>
    [JsonPropertyName("language")]
    public string? Language { get; init; }

    ///<summary>A dictionary containing integration-specific options. eg: platform specific</summary>
    [JsonPropertyName("options")]
    public object? Options { get; init; }
}

public partial class UnifiprotectServices
{
    private readonly IHaContext _haContext;
    public UnifiprotectServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Adds a new custom message for doorbells.</summary>
    public void AddDoorbellText(UnifiprotectAddDoorbellTextParameters data)
    {
        _haContext.CallService("unifiprotect", "add_doorbell_text", null, data);
    }

    ///<summary>Adds a new custom message for doorbells.</summary>
    ///<param name="deviceId">Any device from the UniFi Protect instance you want to change. In case you have multiple Protect Instances.</param>
    ///<param name="message">New custom message to add for doorbells. Must be less than 30 characters. eg: Come In</param>
    public void AddDoorbellText(string deviceId, string message)
    {
        _haContext.CallService("unifiprotect", "add_doorbell_text", null, new UnifiprotectAddDoorbellTextParameters { DeviceId = deviceId, Message = message });
    }

    ///<summary>Removes an existing message for doorbells.</summary>
    public void RemoveDoorbellText(UnifiprotectRemoveDoorbellTextParameters data)
    {
        _haContext.CallService("unifiprotect", "remove_doorbell_text", null, data);
    }

    ///<summary>Removes an existing message for doorbells.</summary>
    ///<param name="deviceId">Any device from the UniFi Protect instance you want to change. In case you have multiple Protect Instances.</param>
    ///<param name="message">Existing custom message to remove for doorbells. eg: Go Away!</param>
    public void RemoveDoorbellText(string deviceId, string message)
    {
        _haContext.CallService("unifiprotect", "remove_doorbell_text", null, new UnifiprotectRemoveDoorbellTextParameters { DeviceId = deviceId, Message = message });
    }

    ///<summary>Use to remove a privacy zone from a camera.</summary>
    public void RemovePrivacyZone(UnifiprotectRemovePrivacyZoneParameters data)
    {
        _haContext.CallService("unifiprotect", "remove_privacy_zone", null, data);
    }

    ///<summary>Use to remove a privacy zone from a camera.</summary>
    ///<param name="deviceId">Camera you want to remove privacy zone from.</param>
    ///<param name="name">The name of the zone to remove.</param>
    public void RemovePrivacyZone(string deviceId, string name)
    {
        _haContext.CallService("unifiprotect", "remove_privacy_zone", null, new UnifiprotectRemovePrivacyZoneParameters { DeviceId = deviceId, Name = name });
    }

    ///<summary>Use to set the paired doorbell(s) with a smart chime.</summary>
    public void SetChimePairedDoorbells(UnifiprotectSetChimePairedDoorbellsParameters data)
    {
        _haContext.CallService("unifiprotect", "set_chime_paired_doorbells", null, data);
    }

    ///<summary>Use to set the paired doorbell(s) with a smart chime.</summary>
    ///<param name="deviceId">The chimes to link to the doorbells to.</param>
    ///<param name="doorbells">The doorbells to link to the chime. eg: binary_sensor.front_doorbell_doorbell</param>
    public void SetChimePairedDoorbells(string deviceId, object? doorbells = null)
    {
        _haContext.CallService("unifiprotect", "set_chime_paired_doorbells", null, new UnifiprotectSetChimePairedDoorbellsParameters { DeviceId = deviceId, Doorbells = doorbells });
    }
}

public partial record UnifiprotectAddDoorbellTextParameters
{
    ///<summary>Any device from the UniFi Protect instance you want to change. In case you have multiple Protect Instances.</summary>
    [JsonPropertyName("device_id")]
    public string? DeviceId { get; init; }

    ///<summary>New custom message to add for doorbells. Must be less than 30 characters. eg: Come In</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }
}

public partial record UnifiprotectRemoveDoorbellTextParameters
{
    ///<summary>Any device from the UniFi Protect instance you want to change. In case you have multiple Protect Instances.</summary>
    [JsonPropertyName("device_id")]
    public string? DeviceId { get; init; }

    ///<summary>Existing custom message to remove for doorbells. eg: Go Away!</summary>
    [JsonPropertyName("message")]
    public string? Message { get; init; }
}

public partial record UnifiprotectRemovePrivacyZoneParameters
{
    ///<summary>Camera you want to remove privacy zone from.</summary>
    [JsonPropertyName("device_id")]
    public string? DeviceId { get; init; }

    ///<summary>The name of the zone to remove.</summary>
    [JsonPropertyName("name")]
    public string? Name { get; init; }
}

public partial record UnifiprotectSetChimePairedDoorbellsParameters
{
    ///<summary>The chimes to link to the doorbells to.</summary>
    [JsonPropertyName("device_id")]
    public string? DeviceId { get; init; }

    ///<summary>The doorbells to link to the chime. eg: binary_sensor.front_doorbell_doorbell</summary>
    [JsonPropertyName("doorbells")]
    public object? Doorbells { get; init; }
}

public partial class UpdateServices
{
    private readonly IHaContext _haContext;
    public UpdateServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Removes the skipped version marker from an update.</summary>
    ///<param name="target">The target for this service call</param>
    public void ClearSkipped(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("update", "clear_skipped", target, data);
    }

    ///<summary>Installs an update for this device or service.</summary>
    ///<param name="target">The target for this service call</param>
    public void Install(ServiceTarget target, UpdateInstallParameters data)
    {
        _haContext.CallService("update", "install", target, data);
    }

    ///<summary>Installs an update for this device or service.</summary>
    ///<param name="version">The version to install. If omitted, the latest version will be installed. eg: 1.0.0</param>
    ///<param name="backup">If supported by the integration, this creates a backup before starting the update .</param>
    public void Install(ServiceTarget target, string? version = null, bool? backup = null)
    {
        _haContext.CallService("update", "install", target, new UpdateInstallParameters { Version = version, Backup = backup });
    }

    ///<summary>Marks currently available update as skipped.</summary>
    ///<param name="target">The target for this service call</param>
    public void Skip(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("update", "skip", target, data);
    }
}

public partial record UpdateInstallParameters
{
    ///<summary>The version to install. If omitted, the latest version will be installed. eg: 1.0.0</summary>
    [JsonPropertyName("version")]
    public string? Version { get; init; }

    ///<summary>If supported by the integration, this creates a backup before starting the update .</summary>
    [JsonPropertyName("backup")]
    public bool? Backup { get; init; }
}

public partial class VacuumServices
{
    private readonly IHaContext _haContext;
    public VacuumServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Tells the vacuum cleaner to do a spot clean-up.</summary>
    ///<param name="target">The target for this service call</param>
    public void CleanSpot(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("vacuum", "clean_spot", target, data);
    }

    ///<summary>Locates the vacuum cleaner robot.</summary>
    ///<param name="target">The target for this service call</param>
    public void Locate(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("vacuum", "locate", target, data);
    }

    ///<summary>Pauses the cleaning task.</summary>
    ///<param name="target">The target for this service call</param>
    public void Pause(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("vacuum", "pause", target, data);
    }

    ///<summary>Tells the vacuum cleaner to return to its dock.</summary>
    ///<param name="target">The target for this service call</param>
    public void ReturnToBase(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("vacuum", "return_to_base", target, data);
    }

    ///<summary>Sends a command to the vacuum cleaner.</summary>
    ///<param name="target">The target for this service call</param>
    public void SendCommand(ServiceTarget target, VacuumSendCommandParameters data)
    {
        _haContext.CallService("vacuum", "send_command", target, data);
    }

    ///<summary>Sends a command to the vacuum cleaner.</summary>
    ///<param name="command">Command to execute. The commands are integration-specific. eg: set_dnd_timer</param>
    ///<param name="params">Parameters for the command. The parameters are integration-specific. eg: { &quot;key&quot;: &quot;value&quot; }</param>
    public void SendCommand(ServiceTarget target, string command, object? @params = null)
    {
        _haContext.CallService("vacuum", "send_command", target, new VacuumSendCommandParameters { Command = command, Params = @params });
    }

    ///<summary>Sets the fan speed of the vacuum cleaner.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetFanSpeed(ServiceTarget target, VacuumSetFanSpeedParameters data)
    {
        _haContext.CallService("vacuum", "set_fan_speed", target, data);
    }

    ///<summary>Sets the fan speed of the vacuum cleaner.</summary>
    ///<param name="fanSpeed">Fan speed. The value depends on the integration. Some integrations have speed steps, like &apos;medium&apos;. Some use a percentage, between 0 and 100. eg: low</param>
    public void SetFanSpeed(ServiceTarget target, string fanSpeed)
    {
        _haContext.CallService("vacuum", "set_fan_speed", target, new VacuumSetFanSpeedParameters { FanSpeed = fanSpeed });
    }

    ///<summary>Starts or resumes the cleaning task.</summary>
    ///<param name="target">The target for this service call</param>
    public void Start(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("vacuum", "start", target, data);
    }

    ///<summary>Stops the current cleaning task.</summary>
    ///<param name="target">The target for this service call</param>
    public void Stop(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("vacuum", "stop", target, data);
    }
}

public partial record VacuumSendCommandParameters
{
    ///<summary>Command to execute. The commands are integration-specific. eg: set_dnd_timer</summary>
    [JsonPropertyName("command")]
    public string? Command { get; init; }

    ///<summary>Parameters for the command. The parameters are integration-specific. eg: { &quot;key&quot;: &quot;value&quot; }</summary>
    [JsonPropertyName("params")]
    public object? Params { get; init; }
}

public partial record VacuumSetFanSpeedParameters
{
    ///<summary>Fan speed. The value depends on the integration. Some integrations have speed steps, like &apos;medium&apos;. Some use a percentage, between 0 and 100. eg: low</summary>
    [JsonPropertyName("fan_speed")]
    public string? FanSpeed { get; init; }
}

public partial class ValveServices
{
    private readonly IHaContext _haContext;
    public ValveServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Closes a valve.</summary>
    ///<param name="target">The target for this service call</param>
    public void CloseValve(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("valve", "close_valve", target, data);
    }

    ///<summary>Opens a valve.</summary>
    ///<param name="target">The target for this service call</param>
    public void OpenValve(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("valve", "open_valve", target, data);
    }

    ///<summary>Moves a valve to a specific position.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetValvePosition(ServiceTarget target, ValveSetValvePositionParameters data)
    {
        _haContext.CallService("valve", "set_valve_position", target, data);
    }

    ///<summary>Moves a valve to a specific position.</summary>
    ///<param name="position">Target position.</param>
    public void SetValvePosition(ServiceTarget target, double position)
    {
        _haContext.CallService("valve", "set_valve_position", target, new ValveSetValvePositionParameters { Position = position });
    }

    ///<summary>Stops the valve movement.</summary>
    ///<param name="target">The target for this service call</param>
    public void StopValve(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("valve", "stop_valve", target, data);
    }

    ///<summary>Toggles a valve open/closed.</summary>
    ///<param name="target">The target for this service call</param>
    public void Toggle(ServiceTarget target, object? data = null)
    {
        _haContext.CallService("valve", "toggle", target, data);
    }
}

public partial record ValveSetValvePositionParameters
{
    ///<summary>Target position.</summary>
    [JsonPropertyName("position")]
    public double? Position { get; init; }
}

public partial class WasteCollectionScheduleServices
{
    private readonly IHaContext _haContext;
    public WasteCollectionScheduleServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Fetch data from all sources.</summary>
    public void FetchData(object? data = null)
    {
        _haContext.CallService("waste_collection_schedule", "fetch_data", null, data);
    }
}

public partial class WeatherServices
{
    private readonly IHaContext _haContext;
    public WeatherServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Get weather forecasts.</summary>
    ///<param name="target">The target for this service call</param>
    public void GetForecasts(ServiceTarget target, WeatherGetForecastsParameters data)
    {
        _haContext.CallService("weather", "get_forecasts", target, data);
    }

    ///<summary>Get weather forecasts.</summary>
    ///<param name="type">Forecast type: daily, hourly or twice daily.</param>
    public void GetForecasts(ServiceTarget target, object @type)
    {
        _haContext.CallService("weather", "get_forecasts", target, new WeatherGetForecastsParameters { Type = @type });
    }

    ///<summary>Get weather forecasts.</summary>
    ///<param name="target">The target for this service call</param>
    public Task<JsonElement?> GetForecastsAsync(ServiceTarget target, WeatherGetForecastsParameters data)
    {
        return _haContext.CallServiceWithResponseAsync("weather", "get_forecasts", target, data);
    }

    ///<summary>Get weather forecasts.</summary>
    ///<param name="target">The target for this service call</param>
    ///<param name="type">Forecast type: daily, hourly or twice daily.</param>
    public Task<JsonElement?> GetForecastsAsync(ServiceTarget target, object @type)
    {
        return _haContext.CallServiceWithResponseAsync("weather", "get_forecasts", target, new WeatherGetForecastsParameters { Type = @type });
    }
}

public partial record WeatherGetForecastsParameters
{
    ///<summary>Forecast type: daily, hourly or twice daily.</summary>
    [JsonPropertyName("type")]
    public object? Type { get; init; }
}

public partial class YeelightServices
{
    private readonly IHaContext _haContext;
    public YeelightServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Turns the light on to the specified brightness and sets a timer to turn it back off after the given number of minutes. If the light is off, Set a color scene, if light is off, it will be turned on.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetAutoDelayOffScene(ServiceTarget target, YeelightSetAutoDelayOffSceneParameters data)
    {
        _haContext.CallService("yeelight", "set_auto_delay_off_scene", target, data);
    }

    ///<summary>Turns the light on to the specified brightness and sets a timer to turn it back off after the given number of minutes. If the light is off, Set a color scene, if light is off, it will be turned on.</summary>
    ///<param name="minutes">The time to wait before automatically turning the light off.</param>
    ///<param name="brightness">The brightness value to set.</param>
    public void SetAutoDelayOffScene(ServiceTarget target, double? minutes = null, double? brightness = null)
    {
        _haContext.CallService("yeelight", "set_auto_delay_off_scene", target, new YeelightSetAutoDelayOffSceneParameters { Minutes = minutes, Brightness = brightness });
    }

    ///<summary>Starts a color flow. If the light is off, it will be turned on.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetColorFlowScene(ServiceTarget target, YeelightSetColorFlowSceneParameters data)
    {
        _haContext.CallService("yeelight", "set_color_flow_scene", target, data);
    }

    ///<summary>Starts a color flow. If the light is off, it will be turned on.</summary>
    ///<param name="count">The number of times to run this flow (0 to run forever).</param>
    ///<param name="action">The action to take after the flow stops.</param>
    ///<param name="transitions">Array of transitions, for desired effect. Examples https://yeelight.readthedocs.io/en/stable/flow.html. eg: [{ &quot;TemperatureTransition&quot;: [1900, 1000, 80] }, { &quot;TemperatureTransition&quot;: [1900, 1000, 10] }]</param>
    public void SetColorFlowScene(ServiceTarget target, double? count = null, object? action = null, object? transitions = null)
    {
        _haContext.CallService("yeelight", "set_color_flow_scene", target, new YeelightSetColorFlowSceneParameters { Count = count, Action = action, Transitions = transitions });
    }

    ///<summary>Changes the light to the specified RGB color and brightness. If the light is off, it will be turned on.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetColorScene(ServiceTarget target, YeelightSetColorSceneParameters data)
    {
        _haContext.CallService("yeelight", "set_color_scene", target, data);
    }

    ///<summary>Changes the light to the specified RGB color and brightness. If the light is off, it will be turned on.</summary>
    ///<param name="rgbColor">Color for the light in RGB-format. eg: [255, 100, 100]</param>
    ///<param name="brightness">The brightness value to set.</param>
    public void SetColorScene(ServiceTarget target, IReadOnlyCollection<int>? rgbColor = null, double? brightness = null)
    {
        _haContext.CallService("yeelight", "set_color_scene", target, new YeelightSetColorSceneParameters { RgbColor = rgbColor, Brightness = brightness });
    }

    ///<summary>Changes the light to the specified color temperature. If the light is off, it will be turned on.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetColorTempScene(ServiceTarget target, YeelightSetColorTempSceneParameters data)
    {
        _haContext.CallService("yeelight", "set_color_temp_scene", target, data);
    }

    ///<summary>Changes the light to the specified color temperature. If the light is off, it will be turned on.</summary>
    ///<param name="kelvin">Color temperature for the light in Kelvin.</param>
    ///<param name="brightness">The brightness value to set.</param>
    public void SetColorTempScene(ServiceTarget target, long? kelvin = null, double? brightness = null)
    {
        _haContext.CallService("yeelight", "set_color_temp_scene", target, new YeelightSetColorTempSceneParameters { Kelvin = kelvin, Brightness = brightness });
    }

    ///<summary>Changes the light to the specified HSV color and brightness. If the light is off, it will be turned on.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetHsvScene(ServiceTarget target, YeelightSetHsvSceneParameters data)
    {
        _haContext.CallService("yeelight", "set_hsv_scene", target, data);
    }

    ///<summary>Changes the light to the specified HSV color and brightness. If the light is off, it will be turned on.</summary>
    ///<param name="hsColor">Color for the light in hue/sat format. Hue is 0-359 and Sat is 0-100. eg: [300, 70]</param>
    ///<param name="brightness">The brightness value to set.</param>
    public void SetHsvScene(ServiceTarget target, object? hsColor = null, double? brightness = null)
    {
        _haContext.CallService("yeelight", "set_hsv_scene", target, new YeelightSetHsvSceneParameters { HsColor = hsColor, Brightness = brightness });
    }

    ///<summary>Sets a operation mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetMode(ServiceTarget target, YeelightSetModeParameters data)
    {
        _haContext.CallService("yeelight", "set_mode", target, data);
    }

    ///<summary>Sets a operation mode.</summary>
    ///<param name="mode">Operation mode.</param>
    public void SetMode(ServiceTarget target, object mode)
    {
        _haContext.CallService("yeelight", "set_mode", target, new YeelightSetModeParameters { Mode = mode });
    }

    ///<summary>Enables or disables music_mode.</summary>
    ///<param name="target">The target for this service call</param>
    public void SetMusicMode(ServiceTarget target, YeelightSetMusicModeParameters data)
    {
        _haContext.CallService("yeelight", "set_music_mode", target, data);
    }

    ///<summary>Enables or disables music_mode.</summary>
    ///<param name="musicMode">Use true or false to enable / disable music_mode.</param>
    public void SetMusicMode(ServiceTarget target, bool musicMode)
    {
        _haContext.CallService("yeelight", "set_music_mode", target, new YeelightSetMusicModeParameters { MusicMode = musicMode });
    }

    ///<summary>Start a custom flow, using transitions from https://yeelight.readthedocs.io/en/stable/yeelight.html#flow-objects.</summary>
    ///<param name="target">The target for this service call</param>
    public void StartFlow(ServiceTarget target, YeelightStartFlowParameters data)
    {
        _haContext.CallService("yeelight", "start_flow", target, data);
    }

    ///<summary>Start a custom flow, using transitions from https://yeelight.readthedocs.io/en/stable/yeelight.html#flow-objects.</summary>
    ///<param name="count">The number of times to run this flow (0 to run forever).</param>
    ///<param name="action">The action to take after the flow stops.</param>
    ///<param name="transitions">Array of transitions, for desired effect. Examples https://yeelight.readthedocs.io/en/stable/flow.html. eg: [{ &quot;TemperatureTransition&quot;: [1900, 1000, 80] }, { &quot;TemperatureTransition&quot;: [1900, 1000, 10] }]</param>
    public void StartFlow(ServiceTarget target, double? count = null, object? action = null, object? transitions = null)
    {
        _haContext.CallService("yeelight", "start_flow", target, new YeelightStartFlowParameters { Count = count, Action = action, Transitions = transitions });
    }
}

public partial record YeelightSetAutoDelayOffSceneParameters
{
    ///<summary>The time to wait before automatically turning the light off.</summary>
    [JsonPropertyName("minutes")]
    public double? Minutes { get; init; }

    ///<summary>The brightness value to set.</summary>
    [JsonPropertyName("brightness")]
    public double? Brightness { get; init; }
}

public partial record YeelightSetColorFlowSceneParameters
{
    ///<summary>The number of times to run this flow (0 to run forever).</summary>
    [JsonPropertyName("count")]
    public double? Count { get; init; }

    ///<summary>The action to take after the flow stops.</summary>
    [JsonPropertyName("action")]
    public object? Action { get; init; }

    ///<summary>Array of transitions, for desired effect. Examples https://yeelight.readthedocs.io/en/stable/flow.html. eg: [{ &quot;TemperatureTransition&quot;: [1900, 1000, 80] }, { &quot;TemperatureTransition&quot;: [1900, 1000, 10] }]</summary>
    [JsonPropertyName("transitions")]
    public object? Transitions { get; init; }
}

public partial record YeelightSetColorSceneParameters
{
    ///<summary>Color for the light in RGB-format. eg: [255, 100, 100]</summary>
    [JsonPropertyName("rgb_color")]
    public IReadOnlyCollection<int>? RgbColor { get; init; }

    ///<summary>The brightness value to set.</summary>
    [JsonPropertyName("brightness")]
    public double? Brightness { get; init; }
}

public partial record YeelightSetColorTempSceneParameters
{
    ///<summary>Color temperature for the light in Kelvin.</summary>
    [JsonPropertyName("kelvin")]
    public long? Kelvin { get; init; }

    ///<summary>The brightness value to set.</summary>
    [JsonPropertyName("brightness")]
    public double? Brightness { get; init; }
}

public partial record YeelightSetHsvSceneParameters
{
    ///<summary>Color for the light in hue/sat format. Hue is 0-359 and Sat is 0-100. eg: [300, 70]</summary>
    [JsonPropertyName("hs_color")]
    public object? HsColor { get; init; }

    ///<summary>The brightness value to set.</summary>
    [JsonPropertyName("brightness")]
    public double? Brightness { get; init; }
}

public partial record YeelightSetModeParameters
{
    ///<summary>Operation mode.</summary>
    [JsonPropertyName("mode")]
    public object? Mode { get; init; }
}

public partial record YeelightSetMusicModeParameters
{
    ///<summary>Use true or false to enable / disable music_mode.</summary>
    [JsonPropertyName("music_mode")]
    public bool? MusicMode { get; init; }
}

public partial record YeelightStartFlowParameters
{
    ///<summary>The number of times to run this flow (0 to run forever).</summary>
    [JsonPropertyName("count")]
    public double? Count { get; init; }

    ///<summary>The action to take after the flow stops.</summary>
    [JsonPropertyName("action")]
    public object? Action { get; init; }

    ///<summary>Array of transitions, for desired effect. Examples https://yeelight.readthedocs.io/en/stable/flow.html. eg: [{ &quot;TemperatureTransition&quot;: [1900, 1000, 80] }, { &quot;TemperatureTransition&quot;: [1900, 1000, 10] }]</summary>
    [JsonPropertyName("transitions")]
    public object? Transitions { get; init; }
}

public partial class ZoneServices
{
    private readonly IHaContext _haContext;
    public ZoneServices(IHaContext haContext)
    {
        _haContext = haContext;
    }

    ///<summary>Reloads zones from the YAML-configuration.</summary>
    public void Reload(object? data = null)
    {
        _haContext.CallService("zone", "reload", null, data);
    }
}

public static class AlarmControlPanelEntityExtensionMethods
{
    ///<summary>Sets the alarm to: _armed, no one home_.</summary>
    public static void AlarmArmAway(this AlarmControlPanelEntity target, AlarmControlPanelAlarmArmAwayParameters data)
    {
        target.CallService("alarm_arm_away", data);
    }

    ///<summary>Sets the alarm to: _armed, no one home_.</summary>
    public static void AlarmArmAway(this IEnumerable<AlarmControlPanelEntity> target, AlarmControlPanelAlarmArmAwayParameters data)
    {
        target.CallService("alarm_arm_away", data);
    }

    ///<summary>Sets the alarm to: _armed, no one home_.</summary>
    ///<param name="target">The AlarmControlPanelEntity to call this service for</param>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public static void AlarmArmAway(this AlarmControlPanelEntity target, string? code = null)
    {
        target.CallService("alarm_arm_away", new AlarmControlPanelAlarmArmAwayParameters { Code = code });
    }

    ///<summary>Sets the alarm to: _armed, no one home_.</summary>
    ///<param name="target">The IEnumerable&lt;AlarmControlPanelEntity&gt; to call this service for</param>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public static void AlarmArmAway(this IEnumerable<AlarmControlPanelEntity> target, string? code = null)
    {
        target.CallService("alarm_arm_away", new AlarmControlPanelAlarmArmAwayParameters { Code = code });
    }

    ///<summary>Arms the alarm while allowing to bypass a custom area.</summary>
    public static void AlarmArmCustomBypass(this AlarmControlPanelEntity target, AlarmControlPanelAlarmArmCustomBypassParameters data)
    {
        target.CallService("alarm_arm_custom_bypass", data);
    }

    ///<summary>Arms the alarm while allowing to bypass a custom area.</summary>
    public static void AlarmArmCustomBypass(this IEnumerable<AlarmControlPanelEntity> target, AlarmControlPanelAlarmArmCustomBypassParameters data)
    {
        target.CallService("alarm_arm_custom_bypass", data);
    }

    ///<summary>Arms the alarm while allowing to bypass a custom area.</summary>
    ///<param name="target">The AlarmControlPanelEntity to call this service for</param>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public static void AlarmArmCustomBypass(this AlarmControlPanelEntity target, string? code = null)
    {
        target.CallService("alarm_arm_custom_bypass", new AlarmControlPanelAlarmArmCustomBypassParameters { Code = code });
    }

    ///<summary>Arms the alarm while allowing to bypass a custom area.</summary>
    ///<param name="target">The IEnumerable&lt;AlarmControlPanelEntity&gt; to call this service for</param>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public static void AlarmArmCustomBypass(this IEnumerable<AlarmControlPanelEntity> target, string? code = null)
    {
        target.CallService("alarm_arm_custom_bypass", new AlarmControlPanelAlarmArmCustomBypassParameters { Code = code });
    }

    ///<summary>Sets the alarm to: _armed, but someone is home_.</summary>
    public static void AlarmArmHome(this AlarmControlPanelEntity target, AlarmControlPanelAlarmArmHomeParameters data)
    {
        target.CallService("alarm_arm_home", data);
    }

    ///<summary>Sets the alarm to: _armed, but someone is home_.</summary>
    public static void AlarmArmHome(this IEnumerable<AlarmControlPanelEntity> target, AlarmControlPanelAlarmArmHomeParameters data)
    {
        target.CallService("alarm_arm_home", data);
    }

    ///<summary>Sets the alarm to: _armed, but someone is home_.</summary>
    ///<param name="target">The AlarmControlPanelEntity to call this service for</param>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public static void AlarmArmHome(this AlarmControlPanelEntity target, string? code = null)
    {
        target.CallService("alarm_arm_home", new AlarmControlPanelAlarmArmHomeParameters { Code = code });
    }

    ///<summary>Sets the alarm to: _armed, but someone is home_.</summary>
    ///<param name="target">The IEnumerable&lt;AlarmControlPanelEntity&gt; to call this service for</param>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public static void AlarmArmHome(this IEnumerable<AlarmControlPanelEntity> target, string? code = null)
    {
        target.CallService("alarm_arm_home", new AlarmControlPanelAlarmArmHomeParameters { Code = code });
    }

    ///<summary>Sets the alarm to: _armed for the night_.</summary>
    public static void AlarmArmNight(this AlarmControlPanelEntity target, AlarmControlPanelAlarmArmNightParameters data)
    {
        target.CallService("alarm_arm_night", data);
    }

    ///<summary>Sets the alarm to: _armed for the night_.</summary>
    public static void AlarmArmNight(this IEnumerable<AlarmControlPanelEntity> target, AlarmControlPanelAlarmArmNightParameters data)
    {
        target.CallService("alarm_arm_night", data);
    }

    ///<summary>Sets the alarm to: _armed for the night_.</summary>
    ///<param name="target">The AlarmControlPanelEntity to call this service for</param>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public static void AlarmArmNight(this AlarmControlPanelEntity target, string? code = null)
    {
        target.CallService("alarm_arm_night", new AlarmControlPanelAlarmArmNightParameters { Code = code });
    }

    ///<summary>Sets the alarm to: _armed for the night_.</summary>
    ///<param name="target">The IEnumerable&lt;AlarmControlPanelEntity&gt; to call this service for</param>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public static void AlarmArmNight(this IEnumerable<AlarmControlPanelEntity> target, string? code = null)
    {
        target.CallService("alarm_arm_night", new AlarmControlPanelAlarmArmNightParameters { Code = code });
    }

    ///<summary>Sets the alarm to: _armed for vacation_.</summary>
    public static void AlarmArmVacation(this AlarmControlPanelEntity target, AlarmControlPanelAlarmArmVacationParameters data)
    {
        target.CallService("alarm_arm_vacation", data);
    }

    ///<summary>Sets the alarm to: _armed for vacation_.</summary>
    public static void AlarmArmVacation(this IEnumerable<AlarmControlPanelEntity> target, AlarmControlPanelAlarmArmVacationParameters data)
    {
        target.CallService("alarm_arm_vacation", data);
    }

    ///<summary>Sets the alarm to: _armed for vacation_.</summary>
    ///<param name="target">The AlarmControlPanelEntity to call this service for</param>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public static void AlarmArmVacation(this AlarmControlPanelEntity target, string? code = null)
    {
        target.CallService("alarm_arm_vacation", new AlarmControlPanelAlarmArmVacationParameters { Code = code });
    }

    ///<summary>Sets the alarm to: _armed for vacation_.</summary>
    ///<param name="target">The IEnumerable&lt;AlarmControlPanelEntity&gt; to call this service for</param>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public static void AlarmArmVacation(this IEnumerable<AlarmControlPanelEntity> target, string? code = null)
    {
        target.CallService("alarm_arm_vacation", new AlarmControlPanelAlarmArmVacationParameters { Code = code });
    }

    ///<summary>Disarms the alarm.</summary>
    public static void AlarmDisarm(this AlarmControlPanelEntity target, AlarmControlPanelAlarmDisarmParameters data)
    {
        target.CallService("alarm_disarm", data);
    }

    ///<summary>Disarms the alarm.</summary>
    public static void AlarmDisarm(this IEnumerable<AlarmControlPanelEntity> target, AlarmControlPanelAlarmDisarmParameters data)
    {
        target.CallService("alarm_disarm", data);
    }

    ///<summary>Disarms the alarm.</summary>
    ///<param name="target">The AlarmControlPanelEntity to call this service for</param>
    ///<param name="code">Code to disarm the alarm. eg: 1234</param>
    public static void AlarmDisarm(this AlarmControlPanelEntity target, string? code = null)
    {
        target.CallService("alarm_disarm", new AlarmControlPanelAlarmDisarmParameters { Code = code });
    }

    ///<summary>Disarms the alarm.</summary>
    ///<param name="target">The IEnumerable&lt;AlarmControlPanelEntity&gt; to call this service for</param>
    ///<param name="code">Code to disarm the alarm. eg: 1234</param>
    public static void AlarmDisarm(this IEnumerable<AlarmControlPanelEntity> target, string? code = null)
    {
        target.CallService("alarm_disarm", new AlarmControlPanelAlarmDisarmParameters { Code = code });
    }

    ///<summary>Enables an external alarm trigger.</summary>
    public static void AlarmTrigger(this AlarmControlPanelEntity target, AlarmControlPanelAlarmTriggerParameters data)
    {
        target.CallService("alarm_trigger", data);
    }

    ///<summary>Enables an external alarm trigger.</summary>
    public static void AlarmTrigger(this IEnumerable<AlarmControlPanelEntity> target, AlarmControlPanelAlarmTriggerParameters data)
    {
        target.CallService("alarm_trigger", data);
    }

    ///<summary>Enables an external alarm trigger.</summary>
    ///<param name="target">The AlarmControlPanelEntity to call this service for</param>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public static void AlarmTrigger(this AlarmControlPanelEntity target, string? code = null)
    {
        target.CallService("alarm_trigger", new AlarmControlPanelAlarmTriggerParameters { Code = code });
    }

    ///<summary>Enables an external alarm trigger.</summary>
    ///<param name="target">The IEnumerable&lt;AlarmControlPanelEntity&gt; to call this service for</param>
    ///<param name="code">Code to arm the alarm. eg: 1234</param>
    public static void AlarmTrigger(this IEnumerable<AlarmControlPanelEntity> target, string? code = null)
    {
        target.CallService("alarm_trigger", new AlarmControlPanelAlarmTriggerParameters { Code = code });
    }
}

public static class AutomationEntityExtensionMethods
{
    ///<summary>Toggles (enable / disable) an automation.</summary>
    public static void Toggle(this IAutomationEntityCore target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggles (enable / disable) an automation.</summary>
    public static void Toggle(this IEnumerable<IAutomationEntityCore> target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Triggers the actions of an automation.</summary>
    public static void Trigger(this IAutomationEntityCore target, AutomationTriggerParameters data)
    {
        target.CallService("trigger", data);
    }

    ///<summary>Triggers the actions of an automation.</summary>
    public static void Trigger(this IEnumerable<IAutomationEntityCore> target, AutomationTriggerParameters data)
    {
        target.CallService("trigger", data);
    }

    ///<summary>Triggers the actions of an automation.</summary>
    ///<param name="target">The IAutomationEntityCore to call this service for</param>
    ///<param name="skipCondition">Defines whether or not the conditions will be skipped.</param>
    public static void Trigger(this IAutomationEntityCore target, bool? skipCondition = null)
    {
        target.CallService("trigger", new AutomationTriggerParameters { SkipCondition = skipCondition });
    }

    ///<summary>Triggers the actions of an automation.</summary>
    ///<param name="target">The IEnumerable&lt;IAutomationEntityCore&gt; to call this service for</param>
    ///<param name="skipCondition">Defines whether or not the conditions will be skipped.</param>
    public static void Trigger(this IEnumerable<IAutomationEntityCore> target, bool? skipCondition = null)
    {
        target.CallService("trigger", new AutomationTriggerParameters { SkipCondition = skipCondition });
    }

    ///<summary>Disables an automation.</summary>
    public static void TurnOff(this IAutomationEntityCore target, AutomationTurnOffParameters data)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Disables an automation.</summary>
    public static void TurnOff(this IEnumerable<IAutomationEntityCore> target, AutomationTurnOffParameters data)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Disables an automation.</summary>
    ///<param name="target">The IAutomationEntityCore to call this service for</param>
    ///<param name="stopActions">Stops currently running actions.</param>
    public static void TurnOff(this IAutomationEntityCore target, bool? stopActions = null)
    {
        target.CallService("turn_off", new AutomationTurnOffParameters { StopActions = stopActions });
    }

    ///<summary>Disables an automation.</summary>
    ///<param name="target">The IEnumerable&lt;IAutomationEntityCore&gt; to call this service for</param>
    ///<param name="stopActions">Stops currently running actions.</param>
    public static void TurnOff(this IEnumerable<IAutomationEntityCore> target, bool? stopActions = null)
    {
        target.CallService("turn_off", new AutomationTurnOffParameters { StopActions = stopActions });
    }

    ///<summary>Enables an automation.</summary>
    public static void TurnOn(this IAutomationEntityCore target, object? data = null)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Enables an automation.</summary>
    public static void TurnOn(this IEnumerable<IAutomationEntityCore> target, object? data = null)
    {
        target.CallService("turn_on", data);
    }
}

public static class ButtonEntityExtensionMethods
{
    ///<summary>Press the button entity.</summary>
    public static void Press(this IButtonEntityCore target, object? data = null)
    {
        target.CallService("press", data);
    }

    ///<summary>Press the button entity.</summary>
    public static void Press(this IEnumerable<IButtonEntityCore> target, object? data = null)
    {
        target.CallService("press", data);
    }
}

public static class CalendarEntityExtensionMethods
{
    ///<summary>Adds a new calendar event.</summary>
    public static void CreateEvent(this ICalendarEntityCore target, CalendarCreateEventParameters data)
    {
        target.CallService("create_event", data);
    }

    ///<summary>Adds a new calendar event.</summary>
    public static void CreateEvent(this IEnumerable<ICalendarEntityCore> target, CalendarCreateEventParameters data)
    {
        target.CallService("create_event", data);
    }

    ///<summary>Adds a new calendar event.</summary>
    ///<param name="target">The ICalendarEntityCore to call this service for</param>
    ///<param name="summary">Defines the short summary or subject for the event. eg: Department Party</param>
    ///<param name="description">A more complete description of the event than the one provided by the summary. eg: Meeting to provide technical review for &apos;Phoenix&apos; design.</param>
    ///<param name="startDateTime">The date and time the event should start. eg: 2022-03-22 20:00:00</param>
    ///<param name="endDateTime">The date and time the event should end. eg: 2022-03-22 22:00:00</param>
    ///<param name="startDate">The date the all-day event should start. eg: 2022-03-22</param>
    ///<param name="endDate">The date the all-day event should end (exclusive). eg: 2022-03-23</param>
    ///<param name="in">Days or weeks that you want to create the event in. eg: {&quot;days&quot;: 2} or {&quot;weeks&quot;: 2}</param>
    ///<param name="location">The location of the event. eg: Conference Room - F123, Bldg. 002</param>
    public static void CreateEvent(this ICalendarEntityCore target, string summary, string? description = null, DateTime? startDateTime = null, DateTime? endDateTime = null, DateOnly? startDate = null, DateOnly? endDate = null, object? @in = null, string? location = null)
    {
        target.CallService("create_event", new CalendarCreateEventParameters { Summary = summary, Description = description, StartDateTime = startDateTime, EndDateTime = endDateTime, StartDate = startDate, EndDate = endDate, In = @in, Location = location });
    }

    ///<summary>Adds a new calendar event.</summary>
    ///<param name="target">The IEnumerable&lt;ICalendarEntityCore&gt; to call this service for</param>
    ///<param name="summary">Defines the short summary or subject for the event. eg: Department Party</param>
    ///<param name="description">A more complete description of the event than the one provided by the summary. eg: Meeting to provide technical review for &apos;Phoenix&apos; design.</param>
    ///<param name="startDateTime">The date and time the event should start. eg: 2022-03-22 20:00:00</param>
    ///<param name="endDateTime">The date and time the event should end. eg: 2022-03-22 22:00:00</param>
    ///<param name="startDate">The date the all-day event should start. eg: 2022-03-22</param>
    ///<param name="endDate">The date the all-day event should end (exclusive). eg: 2022-03-23</param>
    ///<param name="in">Days or weeks that you want to create the event in. eg: {&quot;days&quot;: 2} or {&quot;weeks&quot;: 2}</param>
    ///<param name="location">The location of the event. eg: Conference Room - F123, Bldg. 002</param>
    public static void CreateEvent(this IEnumerable<ICalendarEntityCore> target, string summary, string? description = null, DateTime? startDateTime = null, DateTime? endDateTime = null, DateOnly? startDate = null, DateOnly? endDate = null, object? @in = null, string? location = null)
    {
        target.CallService("create_event", new CalendarCreateEventParameters { Summary = summary, Description = description, StartDateTime = startDateTime, EndDateTime = endDateTime, StartDate = startDate, EndDate = endDate, In = @in, Location = location });
    }

    ///<summary>Get events on a calendar within a time range.</summary>
    public static Task<JsonElement?> GetEventsAsync(this ICalendarEntityCore target, CalendarGetEventsParameters data)
    {
        return target.CallServiceWithResponseAsync("get_events", data);
    }

    ///<summary>Get events on a calendar within a time range.</summary>
    ///<param name="target">The ICalendarEntityCore to call this service for</param>
    ///<param name="startDateTime">Returns active events after this time (exclusive). When not set, defaults to now. eg: 2022-03-22 20:00:00</param>
    ///<param name="endDateTime">Returns active events before this time (exclusive). Cannot be used with &apos;duration&apos;. eg: 2022-03-22 22:00:00</param>
    ///<param name="duration">Returns active events from start_date_time until the specified duration.</param>
    public static Task<JsonElement?> GetEventsAsync(this ICalendarEntityCore target, DateTime? startDateTime = null, DateTime? endDateTime = null, object? duration = null)
    {
        return target.CallServiceWithResponseAsync("get_events", new CalendarGetEventsParameters { StartDateTime = startDateTime, EndDateTime = endDateTime, Duration = duration });
    }

    ///<summary>Get events on a calendar within a time range.</summary>
    public static void GetEvents(this ICalendarEntityCore target, CalendarGetEventsParameters data)
    {
        target.CallService("get_events", data);
    }

    ///<summary>Get events on a calendar within a time range.</summary>
    public static void GetEvents(this IEnumerable<ICalendarEntityCore> target, CalendarGetEventsParameters data)
    {
        target.CallService("get_events", data);
    }

    ///<summary>Get events on a calendar within a time range.</summary>
    ///<param name="target">The ICalendarEntityCore to call this service for</param>
    ///<param name="startDateTime">Returns active events after this time (exclusive). When not set, defaults to now. eg: 2022-03-22 20:00:00</param>
    ///<param name="endDateTime">Returns active events before this time (exclusive). Cannot be used with &apos;duration&apos;. eg: 2022-03-22 22:00:00</param>
    ///<param name="duration">Returns active events from start_date_time until the specified duration.</param>
    public static void GetEvents(this ICalendarEntityCore target, DateTime? startDateTime = null, DateTime? endDateTime = null, object? duration = null)
    {
        target.CallService("get_events", new CalendarGetEventsParameters { StartDateTime = startDateTime, EndDateTime = endDateTime, Duration = duration });
    }

    ///<summary>Get events on a calendar within a time range.</summary>
    ///<param name="target">The IEnumerable&lt;ICalendarEntityCore&gt; to call this service for</param>
    ///<param name="startDateTime">Returns active events after this time (exclusive). When not set, defaults to now. eg: 2022-03-22 20:00:00</param>
    ///<param name="endDateTime">Returns active events before this time (exclusive). Cannot be used with &apos;duration&apos;. eg: 2022-03-22 22:00:00</param>
    ///<param name="duration">Returns active events from start_date_time until the specified duration.</param>
    public static void GetEvents(this IEnumerable<ICalendarEntityCore> target, DateTime? startDateTime = null, DateTime? endDateTime = null, object? duration = null)
    {
        target.CallService("get_events", new CalendarGetEventsParameters { StartDateTime = startDateTime, EndDateTime = endDateTime, Duration = duration });
    }
}

public static class CameraEntityExtensionMethods
{
    ///<summary>Disables the motion detection.</summary>
    public static void DisableMotionDetection(this ICameraEntityCore target, object? data = null)
    {
        target.CallService("disable_motion_detection", data);
    }

    ///<summary>Disables the motion detection.</summary>
    public static void DisableMotionDetection(this IEnumerable<ICameraEntityCore> target, object? data = null)
    {
        target.CallService("disable_motion_detection", data);
    }

    ///<summary>Enables the motion detection.</summary>
    public static void EnableMotionDetection(this ICameraEntityCore target, object? data = null)
    {
        target.CallService("enable_motion_detection", data);
    }

    ///<summary>Enables the motion detection.</summary>
    public static void EnableMotionDetection(this IEnumerable<ICameraEntityCore> target, object? data = null)
    {
        target.CallService("enable_motion_detection", data);
    }

    ///<summary>Plays the camera stream on a supported media player.</summary>
    public static void PlayStream(this ICameraEntityCore target, CameraPlayStreamParameters data)
    {
        target.CallService("play_stream", data);
    }

    ///<summary>Plays the camera stream on a supported media player.</summary>
    public static void PlayStream(this IEnumerable<ICameraEntityCore> target, CameraPlayStreamParameters data)
    {
        target.CallService("play_stream", data);
    }

    ///<summary>Plays the camera stream on a supported media player.</summary>
    ///<param name="target">The ICameraEntityCore to call this service for</param>
    ///<param name="mediaPlayer">Media players to stream to.</param>
    ///<param name="format">Stream format supported by the media player.</param>
    public static void PlayStream(this ICameraEntityCore target, string mediaPlayer, object? format = null)
    {
        target.CallService("play_stream", new CameraPlayStreamParameters { MediaPlayer = mediaPlayer, Format = format });
    }

    ///<summary>Plays the camera stream on a supported media player.</summary>
    ///<param name="target">The IEnumerable&lt;ICameraEntityCore&gt; to call this service for</param>
    ///<param name="mediaPlayer">Media players to stream to.</param>
    ///<param name="format">Stream format supported by the media player.</param>
    public static void PlayStream(this IEnumerable<ICameraEntityCore> target, string mediaPlayer, object? format = null)
    {
        target.CallService("play_stream", new CameraPlayStreamParameters { MediaPlayer = mediaPlayer, Format = format });
    }

    ///<summary>Creates a recording of a live camera feed.</summary>
    public static void Record(this ICameraEntityCore target, CameraRecordParameters data)
    {
        target.CallService("record", data);
    }

    ///<summary>Creates a recording of a live camera feed.</summary>
    public static void Record(this IEnumerable<ICameraEntityCore> target, CameraRecordParameters data)
    {
        target.CallService("record", data);
    }

    ///<summary>Creates a recording of a live camera feed.</summary>
    ///<param name="target">The ICameraEntityCore to call this service for</param>
    ///<param name="filename">Full path to filename. Must be mp4. eg: /tmp/snapshot_{{ entity_id.name }}.mp4</param>
    ///<param name="duration">Planned duration of the recording. The actual duration may vary.</param>
    ///<param name="lookback">Planned lookback period to include in the recording (in addition to the duration). Only available if there is currently an active HLS stream. The actual length of the lookback period may vary.</param>
    public static void Record(this ICameraEntityCore target, string filename, double? duration = null, double? lookback = null)
    {
        target.CallService("record", new CameraRecordParameters { Filename = filename, Duration = duration, Lookback = lookback });
    }

    ///<summary>Creates a recording of a live camera feed.</summary>
    ///<param name="target">The IEnumerable&lt;ICameraEntityCore&gt; to call this service for</param>
    ///<param name="filename">Full path to filename. Must be mp4. eg: /tmp/snapshot_{{ entity_id.name }}.mp4</param>
    ///<param name="duration">Planned duration of the recording. The actual duration may vary.</param>
    ///<param name="lookback">Planned lookback period to include in the recording (in addition to the duration). Only available if there is currently an active HLS stream. The actual length of the lookback period may vary.</param>
    public static void Record(this IEnumerable<ICameraEntityCore> target, string filename, double? duration = null, double? lookback = null)
    {
        target.CallService("record", new CameraRecordParameters { Filename = filename, Duration = duration, Lookback = lookback });
    }

    ///<summary>Takes a snapshot from a camera.</summary>
    public static void Snapshot(this ICameraEntityCore target, CameraSnapshotParameters data)
    {
        target.CallService("snapshot", data);
    }

    ///<summary>Takes a snapshot from a camera.</summary>
    public static void Snapshot(this IEnumerable<ICameraEntityCore> target, CameraSnapshotParameters data)
    {
        target.CallService("snapshot", data);
    }

    ///<summary>Takes a snapshot from a camera.</summary>
    ///<param name="target">The ICameraEntityCore to call this service for</param>
    ///<param name="filename">Full path to filename. eg: /tmp/snapshot_{{ entity_id.name }}.jpg</param>
    public static void Snapshot(this ICameraEntityCore target, string filename)
    {
        target.CallService("snapshot", new CameraSnapshotParameters { Filename = filename });
    }

    ///<summary>Takes a snapshot from a camera.</summary>
    ///<param name="target">The IEnumerable&lt;ICameraEntityCore&gt; to call this service for</param>
    ///<param name="filename">Full path to filename. eg: /tmp/snapshot_{{ entity_id.name }}.jpg</param>
    public static void Snapshot(this IEnumerable<ICameraEntityCore> target, string filename)
    {
        target.CallService("snapshot", new CameraSnapshotParameters { Filename = filename });
    }

    ///<summary>Turns off the camera.</summary>
    public static void TurnOff(this ICameraEntityCore target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns off the camera.</summary>
    public static void TurnOff(this IEnumerable<ICameraEntityCore> target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns on the camera.</summary>
    public static void TurnOn(this ICameraEntityCore target, object? data = null)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Turns on the camera.</summary>
    public static void TurnOn(this IEnumerable<ICameraEntityCore> target, object? data = null)
    {
        target.CallService("turn_on", data);
    }
}

public static class ClimateEntityExtensionMethods
{
    ///<summary>Turns auxiliary heater on/off.</summary>
    public static void SetAuxHeat(this IClimateEntityCore target, ClimateSetAuxHeatParameters data)
    {
        target.CallService("set_aux_heat", data);
    }

    ///<summary>Turns auxiliary heater on/off.</summary>
    public static void SetAuxHeat(this IEnumerable<IClimateEntityCore> target, ClimateSetAuxHeatParameters data)
    {
        target.CallService("set_aux_heat", data);
    }

    ///<summary>Turns auxiliary heater on/off.</summary>
    ///<param name="target">The IClimateEntityCore to call this service for</param>
    ///<param name="auxHeat">New value of auxiliary heater.</param>
    public static void SetAuxHeat(this IClimateEntityCore target, bool auxHeat)
    {
        target.CallService("set_aux_heat", new ClimateSetAuxHeatParameters { AuxHeat = auxHeat });
    }

    ///<summary>Turns auxiliary heater on/off.</summary>
    ///<param name="target">The IEnumerable&lt;IClimateEntityCore&gt; to call this service for</param>
    ///<param name="auxHeat">New value of auxiliary heater.</param>
    public static void SetAuxHeat(this IEnumerable<IClimateEntityCore> target, bool auxHeat)
    {
        target.CallService("set_aux_heat", new ClimateSetAuxHeatParameters { AuxHeat = auxHeat });
    }

    ///<summary>Sets fan operation mode.</summary>
    public static void SetFanMode(this IClimateEntityCore target, ClimateSetFanModeParameters data)
    {
        target.CallService("set_fan_mode", data);
    }

    ///<summary>Sets fan operation mode.</summary>
    public static void SetFanMode(this IEnumerable<IClimateEntityCore> target, ClimateSetFanModeParameters data)
    {
        target.CallService("set_fan_mode", data);
    }

    ///<summary>Sets fan operation mode.</summary>
    ///<param name="target">The IClimateEntityCore to call this service for</param>
    ///<param name="fanMode">Fan operation mode. eg: low</param>
    public static void SetFanMode(this IClimateEntityCore target, string fanMode)
    {
        target.CallService("set_fan_mode", new ClimateSetFanModeParameters { FanMode = fanMode });
    }

    ///<summary>Sets fan operation mode.</summary>
    ///<param name="target">The IEnumerable&lt;IClimateEntityCore&gt; to call this service for</param>
    ///<param name="fanMode">Fan operation mode. eg: low</param>
    public static void SetFanMode(this IEnumerable<IClimateEntityCore> target, string fanMode)
    {
        target.CallService("set_fan_mode", new ClimateSetFanModeParameters { FanMode = fanMode });
    }

    ///<summary>Sets target humidity.</summary>
    public static void SetHumidity(this IClimateEntityCore target, ClimateSetHumidityParameters data)
    {
        target.CallService("set_humidity", data);
    }

    ///<summary>Sets target humidity.</summary>
    public static void SetHumidity(this IEnumerable<IClimateEntityCore> target, ClimateSetHumidityParameters data)
    {
        target.CallService("set_humidity", data);
    }

    ///<summary>Sets target humidity.</summary>
    ///<param name="target">The IClimateEntityCore to call this service for</param>
    ///<param name="humidity">Target humidity.</param>
    public static void SetHumidity(this IClimateEntityCore target, double humidity)
    {
        target.CallService("set_humidity", new ClimateSetHumidityParameters { Humidity = humidity });
    }

    ///<summary>Sets target humidity.</summary>
    ///<param name="target">The IEnumerable&lt;IClimateEntityCore&gt; to call this service for</param>
    ///<param name="humidity">Target humidity.</param>
    public static void SetHumidity(this IEnumerable<IClimateEntityCore> target, double humidity)
    {
        target.CallService("set_humidity", new ClimateSetHumidityParameters { Humidity = humidity });
    }

    ///<summary>Sets HVAC operation mode.</summary>
    public static void SetHvacMode(this IClimateEntityCore target, ClimateSetHvacModeParameters data)
    {
        target.CallService("set_hvac_mode", data);
    }

    ///<summary>Sets HVAC operation mode.</summary>
    public static void SetHvacMode(this IEnumerable<IClimateEntityCore> target, ClimateSetHvacModeParameters data)
    {
        target.CallService("set_hvac_mode", data);
    }

    ///<summary>Sets HVAC operation mode.</summary>
    ///<param name="target">The IClimateEntityCore to call this service for</param>
    ///<param name="hvacMode">HVAC operation mode.</param>
    public static void SetHvacMode(this IClimateEntityCore target, object? hvacMode = null)
    {
        target.CallService("set_hvac_mode", new ClimateSetHvacModeParameters { HvacMode = hvacMode });
    }

    ///<summary>Sets HVAC operation mode.</summary>
    ///<param name="target">The IEnumerable&lt;IClimateEntityCore&gt; to call this service for</param>
    ///<param name="hvacMode">HVAC operation mode.</param>
    public static void SetHvacMode(this IEnumerable<IClimateEntityCore> target, object? hvacMode = null)
    {
        target.CallService("set_hvac_mode", new ClimateSetHvacModeParameters { HvacMode = hvacMode });
    }

    ///<summary>Sets preset mode.</summary>
    public static void SetPresetMode(this IClimateEntityCore target, ClimateSetPresetModeParameters data)
    {
        target.CallService("set_preset_mode", data);
    }

    ///<summary>Sets preset mode.</summary>
    public static void SetPresetMode(this IEnumerable<IClimateEntityCore> target, ClimateSetPresetModeParameters data)
    {
        target.CallService("set_preset_mode", data);
    }

    ///<summary>Sets preset mode.</summary>
    ///<param name="target">The IClimateEntityCore to call this service for</param>
    ///<param name="presetMode">Preset mode. eg: away</param>
    public static void SetPresetMode(this IClimateEntityCore target, string presetMode)
    {
        target.CallService("set_preset_mode", new ClimateSetPresetModeParameters { PresetMode = presetMode });
    }

    ///<summary>Sets preset mode.</summary>
    ///<param name="target">The IEnumerable&lt;IClimateEntityCore&gt; to call this service for</param>
    ///<param name="presetMode">Preset mode. eg: away</param>
    public static void SetPresetMode(this IEnumerable<IClimateEntityCore> target, string presetMode)
    {
        target.CallService("set_preset_mode", new ClimateSetPresetModeParameters { PresetMode = presetMode });
    }

    ///<summary>Sets swing operation mode.</summary>
    public static void SetSwingMode(this IClimateEntityCore target, ClimateSetSwingModeParameters data)
    {
        target.CallService("set_swing_mode", data);
    }

    ///<summary>Sets swing operation mode.</summary>
    public static void SetSwingMode(this IEnumerable<IClimateEntityCore> target, ClimateSetSwingModeParameters data)
    {
        target.CallService("set_swing_mode", data);
    }

    ///<summary>Sets swing operation mode.</summary>
    ///<param name="target">The IClimateEntityCore to call this service for</param>
    ///<param name="swingMode">Swing operation mode. eg: horizontal</param>
    public static void SetSwingMode(this IClimateEntityCore target, string swingMode)
    {
        target.CallService("set_swing_mode", new ClimateSetSwingModeParameters { SwingMode = swingMode });
    }

    ///<summary>Sets swing operation mode.</summary>
    ///<param name="target">The IEnumerable&lt;IClimateEntityCore&gt; to call this service for</param>
    ///<param name="swingMode">Swing operation mode. eg: horizontal</param>
    public static void SetSwingMode(this IEnumerable<IClimateEntityCore> target, string swingMode)
    {
        target.CallService("set_swing_mode", new ClimateSetSwingModeParameters { SwingMode = swingMode });
    }

    ///<summary>Sets target temperature.</summary>
    public static void SetTemperature(this IClimateEntityCore target, ClimateSetTemperatureParameters data)
    {
        target.CallService("set_temperature", data);
    }

    ///<summary>Sets target temperature.</summary>
    public static void SetTemperature(this IEnumerable<IClimateEntityCore> target, ClimateSetTemperatureParameters data)
    {
        target.CallService("set_temperature", data);
    }

    ///<summary>Sets target temperature.</summary>
    ///<param name="target">The IClimateEntityCore to call this service for</param>
    ///<param name="temperature">Target temperature.</param>
    ///<param name="targetTempHigh">High target temperature.</param>
    ///<param name="targetTempLow">Low target temperature.</param>
    ///<param name="hvacMode">HVAC operation mode.</param>
    public static void SetTemperature(this IClimateEntityCore target, double? temperature = null, double? targetTempHigh = null, double? targetTempLow = null, object? hvacMode = null)
    {
        target.CallService("set_temperature", new ClimateSetTemperatureParameters { Temperature = temperature, TargetTempHigh = targetTempHigh, TargetTempLow = targetTempLow, HvacMode = hvacMode });
    }

    ///<summary>Sets target temperature.</summary>
    ///<param name="target">The IEnumerable&lt;IClimateEntityCore&gt; to call this service for</param>
    ///<param name="temperature">Target temperature.</param>
    ///<param name="targetTempHigh">High target temperature.</param>
    ///<param name="targetTempLow">Low target temperature.</param>
    ///<param name="hvacMode">HVAC operation mode.</param>
    public static void SetTemperature(this IEnumerable<IClimateEntityCore> target, double? temperature = null, double? targetTempHigh = null, double? targetTempLow = null, object? hvacMode = null)
    {
        target.CallService("set_temperature", new ClimateSetTemperatureParameters { Temperature = temperature, TargetTempHigh = targetTempHigh, TargetTempLow = targetTempLow, HvacMode = hvacMode });
    }

    ///<summary>Toggles climate device, from on to off, or off to on.</summary>
    public static void Toggle(this IClimateEntityCore target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggles climate device, from on to off, or off to on.</summary>
    public static void Toggle(this IEnumerable<IClimateEntityCore> target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Turns climate device off.</summary>
    public static void TurnOff(this IClimateEntityCore target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns climate device off.</summary>
    public static void TurnOff(this IEnumerable<IClimateEntityCore> target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns climate device on.</summary>
    public static void TurnOn(this IClimateEntityCore target, object? data = null)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Turns climate device on.</summary>
    public static void TurnOn(this IEnumerable<IClimateEntityCore> target, object? data = null)
    {
        target.CallService("turn_on", data);
    }
}

public static class FanEntityExtensionMethods
{
    ///<summary>Decreases the speed of the fan.</summary>
    public static void DecreaseSpeed(this FanEntity target, FanDecreaseSpeedParameters data)
    {
        target.CallService("decrease_speed", data);
    }

    ///<summary>Decreases the speed of the fan.</summary>
    public static void DecreaseSpeed(this IEnumerable<FanEntity> target, FanDecreaseSpeedParameters data)
    {
        target.CallService("decrease_speed", data);
    }

    ///<summary>Decreases the speed of the fan.</summary>
    ///<param name="target">The FanEntity to call this service for</param>
    ///<param name="percentageStep">Decreases the speed by a percentage step.</param>
    public static void DecreaseSpeed(this FanEntity target, double? percentageStep = null)
    {
        target.CallService("decrease_speed", new FanDecreaseSpeedParameters { PercentageStep = percentageStep });
    }

    ///<summary>Decreases the speed of the fan.</summary>
    ///<param name="target">The IEnumerable&lt;FanEntity&gt; to call this service for</param>
    ///<param name="percentageStep">Decreases the speed by a percentage step.</param>
    public static void DecreaseSpeed(this IEnumerable<FanEntity> target, double? percentageStep = null)
    {
        target.CallService("decrease_speed", new FanDecreaseSpeedParameters { PercentageStep = percentageStep });
    }

    ///<summary>Increases the speed of the fan.</summary>
    public static void IncreaseSpeed(this FanEntity target, FanIncreaseSpeedParameters data)
    {
        target.CallService("increase_speed", data);
    }

    ///<summary>Increases the speed of the fan.</summary>
    public static void IncreaseSpeed(this IEnumerable<FanEntity> target, FanIncreaseSpeedParameters data)
    {
        target.CallService("increase_speed", data);
    }

    ///<summary>Increases the speed of the fan.</summary>
    ///<param name="target">The FanEntity to call this service for</param>
    ///<param name="percentageStep">Increases the speed by a percentage step.</param>
    public static void IncreaseSpeed(this FanEntity target, double? percentageStep = null)
    {
        target.CallService("increase_speed", new FanIncreaseSpeedParameters { PercentageStep = percentageStep });
    }

    ///<summary>Increases the speed of the fan.</summary>
    ///<param name="target">The IEnumerable&lt;FanEntity&gt; to call this service for</param>
    ///<param name="percentageStep">Increases the speed by a percentage step.</param>
    public static void IncreaseSpeed(this IEnumerable<FanEntity> target, double? percentageStep = null)
    {
        target.CallService("increase_speed", new FanIncreaseSpeedParameters { PercentageStep = percentageStep });
    }

    ///<summary>Controls oscillatation of the fan.</summary>
    public static void Oscillate(this FanEntity target, FanOscillateParameters data)
    {
        target.CallService("oscillate", data);
    }

    ///<summary>Controls oscillatation of the fan.</summary>
    public static void Oscillate(this IEnumerable<FanEntity> target, FanOscillateParameters data)
    {
        target.CallService("oscillate", data);
    }

    ///<summary>Controls oscillatation of the fan.</summary>
    ///<param name="target">The FanEntity to call this service for</param>
    ///<param name="oscillating">Turn on/off oscillation.</param>
    public static void Oscillate(this FanEntity target, bool oscillating)
    {
        target.CallService("oscillate", new FanOscillateParameters { Oscillating = oscillating });
    }

    ///<summary>Controls oscillatation of the fan.</summary>
    ///<param name="target">The IEnumerable&lt;FanEntity&gt; to call this service for</param>
    ///<param name="oscillating">Turn on/off oscillation.</param>
    public static void Oscillate(this IEnumerable<FanEntity> target, bool oscillating)
    {
        target.CallService("oscillate", new FanOscillateParameters { Oscillating = oscillating });
    }

    ///<summary>Sets the fan rotation direction.</summary>
    public static void SetDirection(this FanEntity target, FanSetDirectionParameters data)
    {
        target.CallService("set_direction", data);
    }

    ///<summary>Sets the fan rotation direction.</summary>
    public static void SetDirection(this IEnumerable<FanEntity> target, FanSetDirectionParameters data)
    {
        target.CallService("set_direction", data);
    }

    ///<summary>Sets the fan rotation direction.</summary>
    ///<param name="target">The FanEntity to call this service for</param>
    ///<param name="direction">Direction to rotate.</param>
    public static void SetDirection(this FanEntity target, object direction)
    {
        target.CallService("set_direction", new FanSetDirectionParameters { Direction = direction });
    }

    ///<summary>Sets the fan rotation direction.</summary>
    ///<param name="target">The IEnumerable&lt;FanEntity&gt; to call this service for</param>
    ///<param name="direction">Direction to rotate.</param>
    public static void SetDirection(this IEnumerable<FanEntity> target, object direction)
    {
        target.CallService("set_direction", new FanSetDirectionParameters { Direction = direction });
    }

    ///<summary>Sets the fan speed.</summary>
    public static void SetPercentage(this FanEntity target, FanSetPercentageParameters data)
    {
        target.CallService("set_percentage", data);
    }

    ///<summary>Sets the fan speed.</summary>
    public static void SetPercentage(this IEnumerable<FanEntity> target, FanSetPercentageParameters data)
    {
        target.CallService("set_percentage", data);
    }

    ///<summary>Sets the fan speed.</summary>
    ///<param name="target">The FanEntity to call this service for</param>
    ///<param name="percentage">Speed of the fan.</param>
    public static void SetPercentage(this FanEntity target, double percentage)
    {
        target.CallService("set_percentage", new FanSetPercentageParameters { Percentage = percentage });
    }

    ///<summary>Sets the fan speed.</summary>
    ///<param name="target">The IEnumerable&lt;FanEntity&gt; to call this service for</param>
    ///<param name="percentage">Speed of the fan.</param>
    public static void SetPercentage(this IEnumerable<FanEntity> target, double percentage)
    {
        target.CallService("set_percentage", new FanSetPercentageParameters { Percentage = percentage });
    }

    ///<summary>Sets preset mode.</summary>
    public static void SetPresetMode(this FanEntity target, FanSetPresetModeParameters data)
    {
        target.CallService("set_preset_mode", data);
    }

    ///<summary>Sets preset mode.</summary>
    public static void SetPresetMode(this IEnumerable<FanEntity> target, FanSetPresetModeParameters data)
    {
        target.CallService("set_preset_mode", data);
    }

    ///<summary>Sets preset mode.</summary>
    ///<param name="target">The FanEntity to call this service for</param>
    ///<param name="presetMode">Preset mode. eg: auto</param>
    public static void SetPresetMode(this FanEntity target, string presetMode)
    {
        target.CallService("set_preset_mode", new FanSetPresetModeParameters { PresetMode = presetMode });
    }

    ///<summary>Sets preset mode.</summary>
    ///<param name="target">The IEnumerable&lt;FanEntity&gt; to call this service for</param>
    ///<param name="presetMode">Preset mode. eg: auto</param>
    public static void SetPresetMode(this IEnumerable<FanEntity> target, string presetMode)
    {
        target.CallService("set_preset_mode", new FanSetPresetModeParameters { PresetMode = presetMode });
    }

    ///<summary>Toggles the fan on/off.</summary>
    public static void Toggle(this FanEntity target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggles the fan on/off.</summary>
    public static void Toggle(this IEnumerable<FanEntity> target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Turns fan off.</summary>
    public static void TurnOff(this FanEntity target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns fan off.</summary>
    public static void TurnOff(this IEnumerable<FanEntity> target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns fan on.</summary>
    public static void TurnOn(this FanEntity target, FanTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Turns fan on.</summary>
    public static void TurnOn(this IEnumerable<FanEntity> target, FanTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Turns fan on.</summary>
    ///<param name="target">The FanEntity to call this service for</param>
    ///<param name="percentage">Speed of the fan.</param>
    ///<param name="presetMode">Preset mode. eg: auto</param>
    public static void TurnOn(this FanEntity target, double? percentage = null, string? presetMode = null)
    {
        target.CallService("turn_on", new FanTurnOnParameters { Percentage = percentage, PresetMode = presetMode });
    }

    ///<summary>Turns fan on.</summary>
    ///<param name="target">The IEnumerable&lt;FanEntity&gt; to call this service for</param>
    ///<param name="percentage">Speed of the fan.</param>
    ///<param name="presetMode">Preset mode. eg: auto</param>
    public static void TurnOn(this IEnumerable<FanEntity> target, double? percentage = null, string? presetMode = null)
    {
        target.CallService("turn_on", new FanTurnOnParameters { Percentage = percentage, PresetMode = presetMode });
    }
}

public static class GoogleEntityExtensionMethods
{
    ///<summary>Add a new calendar event.</summary>
    public static void CreateEvent(this ICalendarEntityCore target, GoogleCreateEventParameters data)
    {
        target.CallService("create_event", data);
    }

    ///<summary>Add a new calendar event.</summary>
    public static void CreateEvent(this IEnumerable<ICalendarEntityCore> target, GoogleCreateEventParameters data)
    {
        target.CallService("create_event", data);
    }

    ///<summary>Add a new calendar event.</summary>
    ///<param name="target">The ICalendarEntityCore to call this service for</param>
    ///<param name="summary">Acts as the title of the event. eg: Bowling</param>
    ///<param name="description">The description of the event. Optional. eg: Birthday bowling</param>
    ///<param name="startDateTime">The date and time the event should start. eg: 2022-03-22 20:00:00</param>
    ///<param name="endDateTime">The date and time the event should end. eg: 2022-03-22 22:00:00</param>
    ///<param name="startDate">The date the whole day event should start. eg: 2022-03-10</param>
    ///<param name="endDate">The date the whole day event should end. eg: 2022-03-11</param>
    ///<param name="in">Days or weeks that you want to create the event in. eg: &quot;days&quot;: 2 or &quot;weeks&quot;: 2</param>
    ///<param name="location">The location of the event. Optional. eg: Conference Room - F123, Bldg. 002</param>
    public static void CreateEvent(this ICalendarEntityCore target, string summary, string? description = null, string? startDateTime = null, string? endDateTime = null, string? startDate = null, string? endDate = null, object? @in = null, string? location = null)
    {
        target.CallService("create_event", new GoogleCreateEventParameters { Summary = summary, Description = description, StartDateTime = startDateTime, EndDateTime = endDateTime, StartDate = startDate, EndDate = endDate, In = @in, Location = location });
    }

    ///<summary>Add a new calendar event.</summary>
    ///<param name="target">The IEnumerable&lt;ICalendarEntityCore&gt; to call this service for</param>
    ///<param name="summary">Acts as the title of the event. eg: Bowling</param>
    ///<param name="description">The description of the event. Optional. eg: Birthday bowling</param>
    ///<param name="startDateTime">The date and time the event should start. eg: 2022-03-22 20:00:00</param>
    ///<param name="endDateTime">The date and time the event should end. eg: 2022-03-22 22:00:00</param>
    ///<param name="startDate">The date the whole day event should start. eg: 2022-03-10</param>
    ///<param name="endDate">The date the whole day event should end. eg: 2022-03-11</param>
    ///<param name="in">Days or weeks that you want to create the event in. eg: &quot;days&quot;: 2 or &quot;weeks&quot;: 2</param>
    ///<param name="location">The location of the event. Optional. eg: Conference Room - F123, Bldg. 002</param>
    public static void CreateEvent(this IEnumerable<ICalendarEntityCore> target, string summary, string? description = null, string? startDateTime = null, string? endDateTime = null, string? startDate = null, string? endDate = null, object? @in = null, string? location = null)
    {
        target.CallService("create_event", new GoogleCreateEventParameters { Summary = summary, Description = description, StartDateTime = startDateTime, EndDateTime = endDateTime, StartDate = startDate, EndDate = endDate, In = @in, Location = location });
    }
}

public static class ImageEntityExtensionMethods
{
    ///<summary>Takes a snapshot from an image.</summary>
    public static void Snapshot(this ImageEntity target, ImageSnapshotParameters data)
    {
        target.CallService("snapshot", data);
    }

    ///<summary>Takes a snapshot from an image.</summary>
    public static void Snapshot(this IEnumerable<ImageEntity> target, ImageSnapshotParameters data)
    {
        target.CallService("snapshot", data);
    }

    ///<summary>Takes a snapshot from an image.</summary>
    ///<param name="target">The ImageEntity to call this service for</param>
    ///<param name="filename">Template of a filename. Variable available is `entity_id`. eg: /tmp/image_snapshot.jpg</param>
    public static void Snapshot(this ImageEntity target, string filename)
    {
        target.CallService("snapshot", new ImageSnapshotParameters { Filename = filename });
    }

    ///<summary>Takes a snapshot from an image.</summary>
    ///<param name="target">The IEnumerable&lt;ImageEntity&gt; to call this service for</param>
    ///<param name="filename">Template of a filename. Variable available is `entity_id`. eg: /tmp/image_snapshot.jpg</param>
    public static void Snapshot(this IEnumerable<ImageEntity> target, string filename)
    {
        target.CallService("snapshot", new ImageSnapshotParameters { Filename = filename });
    }
}

public static class InputBooleanEntityExtensionMethods
{
    ///<summary>Toggles the helper on/off.</summary>
    public static void Toggle(this IInputBooleanEntityCore target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggles the helper on/off.</summary>
    public static void Toggle(this IEnumerable<IInputBooleanEntityCore> target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Turns off the helper.</summary>
    public static void TurnOff(this IInputBooleanEntityCore target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns off the helper.</summary>
    public static void TurnOff(this IEnumerable<IInputBooleanEntityCore> target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns on the helper.</summary>
    public static void TurnOn(this IInputBooleanEntityCore target, object? data = null)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Turns on the helper.</summary>
    public static void TurnOn(this IEnumerable<IInputBooleanEntityCore> target, object? data = null)
    {
        target.CallService("turn_on", data);
    }
}

public static class InputButtonEntityExtensionMethods
{
    ///<summary>Mimics the physical button press on the device.</summary>
    public static void Press(this IInputButtonEntityCore target, object? data = null)
    {
        target.CallService("press", data);
    }

    ///<summary>Mimics the physical button press on the device.</summary>
    public static void Press(this IEnumerable<IInputButtonEntityCore> target, object? data = null)
    {
        target.CallService("press", data);
    }
}

public static class InputDatetimeEntityExtensionMethods
{
    ///<summary>Sets the date and/or time.</summary>
    public static void SetDatetime(this IInputDatetimeEntityCore target, InputDatetimeSetDatetimeParameters data)
    {
        target.CallService("set_datetime", data);
    }

    ///<summary>Sets the date and/or time.</summary>
    public static void SetDatetime(this IEnumerable<IInputDatetimeEntityCore> target, InputDatetimeSetDatetimeParameters data)
    {
        target.CallService("set_datetime", data);
    }

    ///<summary>Sets the date and/or time.</summary>
    ///<param name="target">The IInputDatetimeEntityCore to call this service for</param>
    ///<param name="date">The target date. eg: &quot;2019-04-20&quot;</param>
    ///<param name="time">The target time. eg: &quot;05:04:20&quot;</param>
    ///<param name="datetime">The target date &amp; time. eg: &quot;2019-04-20 05:04:20&quot;</param>
    ///<param name="timestamp">The target date &amp; time, expressed by a UNIX timestamp.</param>
    public static void SetDatetime(this IInputDatetimeEntityCore target, string? date = null, TimeOnly? time = null, string? datetime = null, double? timestamp = null)
    {
        target.CallService("set_datetime", new InputDatetimeSetDatetimeParameters { Date = date, Time = time, Datetime = datetime, Timestamp = timestamp });
    }

    ///<summary>Sets the date and/or time.</summary>
    ///<param name="target">The IEnumerable&lt;IInputDatetimeEntityCore&gt; to call this service for</param>
    ///<param name="date">The target date. eg: &quot;2019-04-20&quot;</param>
    ///<param name="time">The target time. eg: &quot;05:04:20&quot;</param>
    ///<param name="datetime">The target date &amp; time. eg: &quot;2019-04-20 05:04:20&quot;</param>
    ///<param name="timestamp">The target date &amp; time, expressed by a UNIX timestamp.</param>
    public static void SetDatetime(this IEnumerable<IInputDatetimeEntityCore> target, string? date = null, TimeOnly? time = null, string? datetime = null, double? timestamp = null)
    {
        target.CallService("set_datetime", new InputDatetimeSetDatetimeParameters { Date = date, Time = time, Datetime = datetime, Timestamp = timestamp });
    }
}

public static class InputNumberEntityExtensionMethods
{
    ///<summary>Decrements the current value by 1 step.</summary>
    public static void Decrement(this IInputNumberEntityCore target, object? data = null)
    {
        target.CallService("decrement", data);
    }

    ///<summary>Decrements the current value by 1 step.</summary>
    public static void Decrement(this IEnumerable<IInputNumberEntityCore> target, object? data = null)
    {
        target.CallService("decrement", data);
    }

    ///<summary>Increments the value by 1 step.</summary>
    public static void Increment(this IInputNumberEntityCore target, object? data = null)
    {
        target.CallService("increment", data);
    }

    ///<summary>Increments the value by 1 step.</summary>
    public static void Increment(this IEnumerable<IInputNumberEntityCore> target, object? data = null)
    {
        target.CallService("increment", data);
    }

    ///<summary>Sets the value.</summary>
    public static void SetValue(this IInputNumberEntityCore target, InputNumberSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value.</summary>
    public static void SetValue(this IEnumerable<IInputNumberEntityCore> target, InputNumberSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The IInputNumberEntityCore to call this service for</param>
    ///<param name="value">The target value.</param>
    public static void SetValue(this IInputNumberEntityCore target, double value)
    {
        target.CallService("set_value", new InputNumberSetValueParameters { Value = value });
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The IEnumerable&lt;IInputNumberEntityCore&gt; to call this service for</param>
    ///<param name="value">The target value.</param>
    public static void SetValue(this IEnumerable<IInputNumberEntityCore> target, double value)
    {
        target.CallService("set_value", new InputNumberSetValueParameters { Value = value });
    }
}

public static class InputSelectEntityExtensionMethods
{
    ///<summary>Selects the first option.</summary>
    public static void SelectFirst(this IInputSelectEntityCore target, object? data = null)
    {
        target.CallService("select_first", data);
    }

    ///<summary>Selects the first option.</summary>
    public static void SelectFirst(this IEnumerable<IInputSelectEntityCore> target, object? data = null)
    {
        target.CallService("select_first", data);
    }

    ///<summary>Selects the last option.</summary>
    public static void SelectLast(this IInputSelectEntityCore target, object? data = null)
    {
        target.CallService("select_last", data);
    }

    ///<summary>Selects the last option.</summary>
    public static void SelectLast(this IEnumerable<IInputSelectEntityCore> target, object? data = null)
    {
        target.CallService("select_last", data);
    }

    ///<summary>Select the next option.</summary>
    public static void SelectNext(this IInputSelectEntityCore target, InputSelectSelectNextParameters data)
    {
        target.CallService("select_next", data);
    }

    ///<summary>Select the next option.</summary>
    public static void SelectNext(this IEnumerable<IInputSelectEntityCore> target, InputSelectSelectNextParameters data)
    {
        target.CallService("select_next", data);
    }

    ///<summary>Select the next option.</summary>
    ///<param name="target">The IInputSelectEntityCore to call this service for</param>
    ///<param name="cycle">If the option should cycle from the last to the first option on the list.</param>
    public static void SelectNext(this IInputSelectEntityCore target, bool? cycle = null)
    {
        target.CallService("select_next", new InputSelectSelectNextParameters { Cycle = cycle });
    }

    ///<summary>Select the next option.</summary>
    ///<param name="target">The IEnumerable&lt;IInputSelectEntityCore&gt; to call this service for</param>
    ///<param name="cycle">If the option should cycle from the last to the first option on the list.</param>
    public static void SelectNext(this IEnumerable<IInputSelectEntityCore> target, bool? cycle = null)
    {
        target.CallService("select_next", new InputSelectSelectNextParameters { Cycle = cycle });
    }

    ///<summary>Selects an option.</summary>
    public static void SelectOption(this IInputSelectEntityCore target, InputSelectSelectOptionParameters data)
    {
        target.CallService("select_option", data);
    }

    ///<summary>Selects an option.</summary>
    public static void SelectOption(this IEnumerable<IInputSelectEntityCore> target, InputSelectSelectOptionParameters data)
    {
        target.CallService("select_option", data);
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The IInputSelectEntityCore to call this service for</param>
    ///<param name="option">Option to be selected. eg: &quot;Item A&quot;</param>
    public static void SelectOption(this IInputSelectEntityCore target, string option)
    {
        target.CallService("select_option", new InputSelectSelectOptionParameters { Option = option });
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The IEnumerable&lt;IInputSelectEntityCore&gt; to call this service for</param>
    ///<param name="option">Option to be selected. eg: &quot;Item A&quot;</param>
    public static void SelectOption(this IEnumerable<IInputSelectEntityCore> target, string option)
    {
        target.CallService("select_option", new InputSelectSelectOptionParameters { Option = option });
    }

    ///<summary>Selects the previous option.</summary>
    public static void SelectPrevious(this IInputSelectEntityCore target, InputSelectSelectPreviousParameters data)
    {
        target.CallService("select_previous", data);
    }

    ///<summary>Selects the previous option.</summary>
    public static void SelectPrevious(this IEnumerable<IInputSelectEntityCore> target, InputSelectSelectPreviousParameters data)
    {
        target.CallService("select_previous", data);
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The IInputSelectEntityCore to call this service for</param>
    ///<param name="cycle">If the option should cycle from the last to the first option on the list.</param>
    public static void SelectPrevious(this IInputSelectEntityCore target, bool? cycle = null)
    {
        target.CallService("select_previous", new InputSelectSelectPreviousParameters { Cycle = cycle });
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The IEnumerable&lt;IInputSelectEntityCore&gt; to call this service for</param>
    ///<param name="cycle">If the option should cycle from the last to the first option on the list.</param>
    public static void SelectPrevious(this IEnumerable<IInputSelectEntityCore> target, bool? cycle = null)
    {
        target.CallService("select_previous", new InputSelectSelectPreviousParameters { Cycle = cycle });
    }

    ///<summary>Sets the options.</summary>
    public static void SetOptions(this IInputSelectEntityCore target, InputSelectSetOptionsParameters data)
    {
        target.CallService("set_options", data);
    }

    ///<summary>Sets the options.</summary>
    public static void SetOptions(this IEnumerable<IInputSelectEntityCore> target, InputSelectSetOptionsParameters data)
    {
        target.CallService("set_options", data);
    }

    ///<summary>Sets the options.</summary>
    ///<param name="target">The IInputSelectEntityCore to call this service for</param>
    ///<param name="options">List of options. eg: [&quot;Item A&quot;, &quot;Item B&quot;, &quot;Item C&quot;]</param>
    public static void SetOptions(this IInputSelectEntityCore target, IEnumerable<string> options)
    {
        target.CallService("set_options", new InputSelectSetOptionsParameters { Options = options });
    }

    ///<summary>Sets the options.</summary>
    ///<param name="target">The IEnumerable&lt;IInputSelectEntityCore&gt; to call this service for</param>
    ///<param name="options">List of options. eg: [&quot;Item A&quot;, &quot;Item B&quot;, &quot;Item C&quot;]</param>
    public static void SetOptions(this IEnumerable<IInputSelectEntityCore> target, IEnumerable<string> options)
    {
        target.CallService("set_options", new InputSelectSetOptionsParameters { Options = options });
    }
}

public static class InputTextEntityExtensionMethods
{
    ///<summary>Sets the value.</summary>
    public static void SetValue(this IInputTextEntityCore target, InputTextSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value.</summary>
    public static void SetValue(this IEnumerable<IInputTextEntityCore> target, InputTextSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The IInputTextEntityCore to call this service for</param>
    ///<param name="value">The target value. eg: This is an example text</param>
    public static void SetValue(this IInputTextEntityCore target, string value)
    {
        target.CallService("set_value", new InputTextSetValueParameters { Value = value });
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The IEnumerable&lt;IInputTextEntityCore&gt; to call this service for</param>
    ///<param name="value">The target value. eg: This is an example text</param>
    public static void SetValue(this IEnumerable<IInputTextEntityCore> target, string value)
    {
        target.CallService("set_value", new InputTextSetValueParameters { Value = value });
    }
}

public static class LightEntityExtensionMethods
{
    ///<summary>Toggles one or more lights, from on to off, or, off to on, based on their current state.</summary>
    public static void Toggle(this ILightEntityCore target, LightToggleParameters data)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggles one or more lights, from on to off, or, off to on, based on their current state.</summary>
    public static void Toggle(this IEnumerable<ILightEntityCore> target, LightToggleParameters data)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggles one or more lights, from on to off, or, off to on, based on their current state.</summary>
    ///<param name="target">The ILightEntityCore to call this service for</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="rgbColor">The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</param>
    ///<param name="kelvin">Color temperature in Kelvin.</param>
    ///<param name="brightnessPct">Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</param>
    ///<param name="effect">Light effect.</param>
    ///<param name="rgbwColor"> eg: [255, 100, 100, 50]</param>
    ///<param name="rgbwwColor"> eg: [255, 100, 100, 50, 70]</param>
    ///<param name="colorName"></param>
    ///<param name="hsColor"> eg: [300, 70]</param>
    ///<param name="xyColor"> eg: [0.52, 0.43]</param>
    ///<param name="colorTemp"></param>
    ///<param name="brightness"></param>
    ///<param name="white"></param>
    ///<param name="profile"> eg: relax</param>
    ///<param name="flash"></param>
    public static void Toggle(this ILightEntityCore target, double? transition = null, IReadOnlyCollection<int>? rgbColor = null, object? kelvin = null, double? brightnessPct = null, string? effect = null, object? rgbwColor = null, object? rgbwwColor = null, object? colorName = null, object? hsColor = null, object? xyColor = null, object? colorTemp = null, double? brightness = null, object? white = null, string? profile = null, object? flash = null)
    {
        target.CallService("toggle", new LightToggleParameters { Transition = transition, RgbColor = rgbColor, Kelvin = kelvin, BrightnessPct = brightnessPct, Effect = effect, RgbwColor = rgbwColor, RgbwwColor = rgbwwColor, ColorName = colorName, HsColor = hsColor, XyColor = xyColor, ColorTemp = colorTemp, Brightness = brightness, White = white, Profile = profile, Flash = flash });
    }

    ///<summary>Toggles one or more lights, from on to off, or, off to on, based on their current state.</summary>
    ///<param name="target">The IEnumerable&lt;ILightEntityCore&gt; to call this service for</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="rgbColor">The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</param>
    ///<param name="kelvin">Color temperature in Kelvin.</param>
    ///<param name="brightnessPct">Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</param>
    ///<param name="effect">Light effect.</param>
    ///<param name="rgbwColor"> eg: [255, 100, 100, 50]</param>
    ///<param name="rgbwwColor"> eg: [255, 100, 100, 50, 70]</param>
    ///<param name="colorName"></param>
    ///<param name="hsColor"> eg: [300, 70]</param>
    ///<param name="xyColor"> eg: [0.52, 0.43]</param>
    ///<param name="colorTemp"></param>
    ///<param name="brightness"></param>
    ///<param name="white"></param>
    ///<param name="profile"> eg: relax</param>
    ///<param name="flash"></param>
    public static void Toggle(this IEnumerable<ILightEntityCore> target, double? transition = null, IReadOnlyCollection<int>? rgbColor = null, object? kelvin = null, double? brightnessPct = null, string? effect = null, object? rgbwColor = null, object? rgbwwColor = null, object? colorName = null, object? hsColor = null, object? xyColor = null, object? colorTemp = null, double? brightness = null, object? white = null, string? profile = null, object? flash = null)
    {
        target.CallService("toggle", new LightToggleParameters { Transition = transition, RgbColor = rgbColor, Kelvin = kelvin, BrightnessPct = brightnessPct, Effect = effect, RgbwColor = rgbwColor, RgbwwColor = rgbwwColor, ColorName = colorName, HsColor = hsColor, XyColor = xyColor, ColorTemp = colorTemp, Brightness = brightness, White = white, Profile = profile, Flash = flash });
    }

    ///<summary>Turn off one or more lights.</summary>
    public static void TurnOff(this ILightEntityCore target, LightTurnOffParameters data)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turn off one or more lights.</summary>
    public static void TurnOff(this IEnumerable<ILightEntityCore> target, LightTurnOffParameters data)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turn off one or more lights.</summary>
    ///<param name="target">The ILightEntityCore to call this service for</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="flash"></param>
    public static void TurnOff(this ILightEntityCore target, double? transition = null, object? flash = null)
    {
        target.CallService("turn_off", new LightTurnOffParameters { Transition = transition, Flash = flash });
    }

    ///<summary>Turn off one or more lights.</summary>
    ///<param name="target">The IEnumerable&lt;ILightEntityCore&gt; to call this service for</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="flash"></param>
    public static void TurnOff(this IEnumerable<ILightEntityCore> target, double? transition = null, object? flash = null)
    {
        target.CallService("turn_off", new LightTurnOffParameters { Transition = transition, Flash = flash });
    }

    ///<summary>Turn on one or more lights and adjust properties of the light, even when they are turned on already.</summary>
    public static void TurnOn(this ILightEntityCore target, LightTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Turn on one or more lights and adjust properties of the light, even when they are turned on already.</summary>
    public static void TurnOn(this IEnumerable<ILightEntityCore> target, LightTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Turn on one or more lights and adjust properties of the light, even when they are turned on already.</summary>
    ///<param name="target">The ILightEntityCore to call this service for</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="rgbColor">The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</param>
    ///<param name="kelvin">Color temperature in Kelvin.</param>
    ///<param name="brightnessPct">Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</param>
    ///<param name="brightnessStepPct">Change brightness by a percentage.</param>
    ///<param name="effect">Light effect.</param>
    ///<param name="rgbwColor"> eg: [255, 100, 100, 50]</param>
    ///<param name="rgbwwColor"> eg: [255, 100, 100, 50, 70]</param>
    ///<param name="colorName"></param>
    ///<param name="hsColor"> eg: [300, 70]</param>
    ///<param name="xyColor"> eg: [0.52, 0.43]</param>
    ///<param name="colorTemp"></param>
    ///<param name="brightness"></param>
    ///<param name="brightnessStep"></param>
    ///<param name="white"></param>
    ///<param name="profile"> eg: relax</param>
    ///<param name="flash"></param>
    public static void TurnOn(this ILightEntityCore target, double? transition = null, IReadOnlyCollection<int>? rgbColor = null, object? kelvin = null, double? brightnessPct = null, double? brightnessStepPct = null, string? effect = null, object? rgbwColor = null, object? rgbwwColor = null, object? colorName = null, object? hsColor = null, object? xyColor = null, object? colorTemp = null, double? brightness = null, double? brightnessStep = null, object? white = null, string? profile = null, object? flash = null)
    {
        target.CallService("turn_on", new LightTurnOnParameters { Transition = transition, RgbColor = rgbColor, Kelvin = kelvin, BrightnessPct = brightnessPct, BrightnessStepPct = brightnessStepPct, Effect = effect, RgbwColor = rgbwColor, RgbwwColor = rgbwwColor, ColorName = colorName, HsColor = hsColor, XyColor = xyColor, ColorTemp = colorTemp, Brightness = brightness, BrightnessStep = brightnessStep, White = white, Profile = profile, Flash = flash });
    }

    ///<summary>Turn on one or more lights and adjust properties of the light, even when they are turned on already.</summary>
    ///<param name="target">The IEnumerable&lt;ILightEntityCore&gt; to call this service for</param>
    ///<param name="transition">Duration it takes to get to next state.</param>
    ///<param name="rgbColor">The color in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue. eg: [255, 100, 100]</param>
    ///<param name="kelvin">Color temperature in Kelvin.</param>
    ///<param name="brightnessPct">Number indicating the percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness, and 100 is the maximum brightness.</param>
    ///<param name="brightnessStepPct">Change brightness by a percentage.</param>
    ///<param name="effect">Light effect.</param>
    ///<param name="rgbwColor"> eg: [255, 100, 100, 50]</param>
    ///<param name="rgbwwColor"> eg: [255, 100, 100, 50, 70]</param>
    ///<param name="colorName"></param>
    ///<param name="hsColor"> eg: [300, 70]</param>
    ///<param name="xyColor"> eg: [0.52, 0.43]</param>
    ///<param name="colorTemp"></param>
    ///<param name="brightness"></param>
    ///<param name="brightnessStep"></param>
    ///<param name="white"></param>
    ///<param name="profile"> eg: relax</param>
    ///<param name="flash"></param>
    public static void TurnOn(this IEnumerable<ILightEntityCore> target, double? transition = null, IReadOnlyCollection<int>? rgbColor = null, object? kelvin = null, double? brightnessPct = null, double? brightnessStepPct = null, string? effect = null, object? rgbwColor = null, object? rgbwwColor = null, object? colorName = null, object? hsColor = null, object? xyColor = null, object? colorTemp = null, double? brightness = null, double? brightnessStep = null, object? white = null, string? profile = null, object? flash = null)
    {
        target.CallService("turn_on", new LightTurnOnParameters { Transition = transition, RgbColor = rgbColor, Kelvin = kelvin, BrightnessPct = brightnessPct, BrightnessStepPct = brightnessStepPct, Effect = effect, RgbwColor = rgbwColor, RgbwwColor = rgbwwColor, ColorName = colorName, HsColor = hsColor, XyColor = xyColor, ColorTemp = colorTemp, Brightness = brightness, BrightnessStep = brightnessStep, White = white, Profile = profile, Flash = flash });
    }
}

public static class MediaPlayerEntityExtensionMethods
{
    ///<summary>Clears the playlist.</summary>
    public static void ClearPlaylist(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("clear_playlist", data);
    }

    ///<summary>Clears the playlist.</summary>
    public static void ClearPlaylist(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("clear_playlist", data);
    }

    ///<summary>Groups media players together for synchronous playback. Only works on supported multiroom audio systems.</summary>
    public static void Join(this IMediaPlayerEntityCore target, MediaPlayerJoinParameters data)
    {
        target.CallService("join", data);
    }

    ///<summary>Groups media players together for synchronous playback. Only works on supported multiroom audio systems.</summary>
    public static void Join(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerJoinParameters data)
    {
        target.CallService("join", data);
    }

    ///<summary>Groups media players together for synchronous playback. Only works on supported multiroom audio systems.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="groupMembers">The players which will be synced with the playback specified in `target`. eg: - media_player.multiroom_player2 - media_player.multiroom_player3 </param>
    public static void Join(this IMediaPlayerEntityCore target, IEnumerable<string> groupMembers)
    {
        target.CallService("join", new MediaPlayerJoinParameters { GroupMembers = groupMembers });
    }

    ///<summary>Groups media players together for synchronous playback. Only works on supported multiroom audio systems.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="groupMembers">The players which will be synced with the playback specified in `target`. eg: - media_player.multiroom_player2 - media_player.multiroom_player3 </param>
    public static void Join(this IEnumerable<IMediaPlayerEntityCore> target, IEnumerable<string> groupMembers)
    {
        target.CallService("join", new MediaPlayerJoinParameters { GroupMembers = groupMembers });
    }

    ///<summary>Selects the next track.</summary>
    public static void MediaNextTrack(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("media_next_track", data);
    }

    ///<summary>Selects the next track.</summary>
    public static void MediaNextTrack(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("media_next_track", data);
    }

    ///<summary>Pauses.</summary>
    public static void MediaPause(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("media_pause", data);
    }

    ///<summary>Pauses.</summary>
    public static void MediaPause(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("media_pause", data);
    }

    ///<summary>Starts playing.</summary>
    public static void MediaPlay(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("media_play", data);
    }

    ///<summary>Starts playing.</summary>
    public static void MediaPlay(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("media_play", data);
    }

    ///<summary>Toggles play/pause.</summary>
    public static void MediaPlayPause(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("media_play_pause", data);
    }

    ///<summary>Toggles play/pause.</summary>
    public static void MediaPlayPause(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("media_play_pause", data);
    }

    ///<summary>Selects the previous track.</summary>
    public static void MediaPreviousTrack(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("media_previous_track", data);
    }

    ///<summary>Selects the previous track.</summary>
    public static void MediaPreviousTrack(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("media_previous_track", data);
    }

    ///<summary>Allows you to go to a different part of the media that is currently playing.</summary>
    public static void MediaSeek(this IMediaPlayerEntityCore target, MediaPlayerMediaSeekParameters data)
    {
        target.CallService("media_seek", data);
    }

    ///<summary>Allows you to go to a different part of the media that is currently playing.</summary>
    public static void MediaSeek(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerMediaSeekParameters data)
    {
        target.CallService("media_seek", data);
    }

    ///<summary>Allows you to go to a different part of the media that is currently playing.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="seekPosition">Target position in the currently playing media. The format is platform dependent.</param>
    public static void MediaSeek(this IMediaPlayerEntityCore target, double seekPosition)
    {
        target.CallService("media_seek", new MediaPlayerMediaSeekParameters { SeekPosition = seekPosition });
    }

    ///<summary>Allows you to go to a different part of the media that is currently playing.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="seekPosition">Target position in the currently playing media. The format is platform dependent.</param>
    public static void MediaSeek(this IEnumerable<IMediaPlayerEntityCore> target, double seekPosition)
    {
        target.CallService("media_seek", new MediaPlayerMediaSeekParameters { SeekPosition = seekPosition });
    }

    ///<summary>Stops playing.</summary>
    public static void MediaStop(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("media_stop", data);
    }

    ///<summary>Stops playing.</summary>
    public static void MediaStop(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("media_stop", data);
    }

    ///<summary>Starts playing specified media.</summary>
    public static void PlayMedia(this IMediaPlayerEntityCore target, MediaPlayerPlayMediaParameters data)
    {
        target.CallService("play_media", data);
    }

    ///<summary>Starts playing specified media.</summary>
    public static void PlayMedia(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerPlayMediaParameters data)
    {
        target.CallService("play_media", data);
    }

    ///<summary>Starts playing specified media.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="mediaContentId">The ID of the content to play. Platform dependent. eg: https://home-assistant.io/images/cast/splash.png</param>
    ///<param name="mediaContentType">The type of the content to play. Such as image, music, tv show, video, episode, channel, or playlist. eg: music</param>
    ///<param name="enqueue">If the content should be played now or be added to the queue.</param>
    ///<param name="announce">If the media should be played as an announcement. eg: true</param>
    public static void PlayMedia(this IMediaPlayerEntityCore target, string mediaContentId, string mediaContentType, object? enqueue = null, bool? announce = null)
    {
        target.CallService("play_media", new MediaPlayerPlayMediaParameters { MediaContentId = mediaContentId, MediaContentType = mediaContentType, Enqueue = enqueue, Announce = announce });
    }

    ///<summary>Starts playing specified media.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="mediaContentId">The ID of the content to play. Platform dependent. eg: https://home-assistant.io/images/cast/splash.png</param>
    ///<param name="mediaContentType">The type of the content to play. Such as image, music, tv show, video, episode, channel, or playlist. eg: music</param>
    ///<param name="enqueue">If the content should be played now or be added to the queue.</param>
    ///<param name="announce">If the media should be played as an announcement. eg: true</param>
    public static void PlayMedia(this IEnumerable<IMediaPlayerEntityCore> target, string mediaContentId, string mediaContentType, object? enqueue = null, bool? announce = null)
    {
        target.CallService("play_media", new MediaPlayerPlayMediaParameters { MediaContentId = mediaContentId, MediaContentType = mediaContentType, Enqueue = enqueue, Announce = announce });
    }

    ///<summary>Playback mode that plays the media in a loop.</summary>
    public static void RepeatSet(this IMediaPlayerEntityCore target, MediaPlayerRepeatSetParameters data)
    {
        target.CallService("repeat_set", data);
    }

    ///<summary>Playback mode that plays the media in a loop.</summary>
    public static void RepeatSet(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerRepeatSetParameters data)
    {
        target.CallService("repeat_set", data);
    }

    ///<summary>Playback mode that plays the media in a loop.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="repeat">Repeat mode to set.</param>
    public static void RepeatSet(this IMediaPlayerEntityCore target, object repeat)
    {
        target.CallService("repeat_set", new MediaPlayerRepeatSetParameters { Repeat = repeat });
    }

    ///<summary>Playback mode that plays the media in a loop.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="repeat">Repeat mode to set.</param>
    public static void RepeatSet(this IEnumerable<IMediaPlayerEntityCore> target, object repeat)
    {
        target.CallService("repeat_set", new MediaPlayerRepeatSetParameters { Repeat = repeat });
    }

    ///<summary>Selects a specific sound mode.</summary>
    public static void SelectSoundMode(this IMediaPlayerEntityCore target, MediaPlayerSelectSoundModeParameters data)
    {
        target.CallService("select_sound_mode", data);
    }

    ///<summary>Selects a specific sound mode.</summary>
    public static void SelectSoundMode(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerSelectSoundModeParameters data)
    {
        target.CallService("select_sound_mode", data);
    }

    ///<summary>Selects a specific sound mode.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="soundMode">Name of the sound mode to switch to. eg: Music</param>
    public static void SelectSoundMode(this IMediaPlayerEntityCore target, string? soundMode = null)
    {
        target.CallService("select_sound_mode", new MediaPlayerSelectSoundModeParameters { SoundMode = soundMode });
    }

    ///<summary>Selects a specific sound mode.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="soundMode">Name of the sound mode to switch to. eg: Music</param>
    public static void SelectSoundMode(this IEnumerable<IMediaPlayerEntityCore> target, string? soundMode = null)
    {
        target.CallService("select_sound_mode", new MediaPlayerSelectSoundModeParameters { SoundMode = soundMode });
    }

    ///<summary>Sends the media player the command to change input source.</summary>
    public static void SelectSource(this IMediaPlayerEntityCore target, MediaPlayerSelectSourceParameters data)
    {
        target.CallService("select_source", data);
    }

    ///<summary>Sends the media player the command to change input source.</summary>
    public static void SelectSource(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerSelectSourceParameters data)
    {
        target.CallService("select_source", data);
    }

    ///<summary>Sends the media player the command to change input source.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="source">Name of the source to switch to. Platform dependent. eg: video1</param>
    public static void SelectSource(this IMediaPlayerEntityCore target, string source)
    {
        target.CallService("select_source", new MediaPlayerSelectSourceParameters { Source = source });
    }

    ///<summary>Sends the media player the command to change input source.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="source">Name of the source to switch to. Platform dependent. eg: video1</param>
    public static void SelectSource(this IEnumerable<IMediaPlayerEntityCore> target, string source)
    {
        target.CallService("select_source", new MediaPlayerSelectSourceParameters { Source = source });
    }

    ///<summary>Playback mode that selects the media in randomized order.</summary>
    public static void ShuffleSet(this IMediaPlayerEntityCore target, MediaPlayerShuffleSetParameters data)
    {
        target.CallService("shuffle_set", data);
    }

    ///<summary>Playback mode that selects the media in randomized order.</summary>
    public static void ShuffleSet(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerShuffleSetParameters data)
    {
        target.CallService("shuffle_set", data);
    }

    ///<summary>Playback mode that selects the media in randomized order.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="shuffle">Whether or not shuffle mode is enabled.</param>
    public static void ShuffleSet(this IMediaPlayerEntityCore target, bool shuffle)
    {
        target.CallService("shuffle_set", new MediaPlayerShuffleSetParameters { Shuffle = shuffle });
    }

    ///<summary>Playback mode that selects the media in randomized order.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="shuffle">Whether or not shuffle mode is enabled.</param>
    public static void ShuffleSet(this IEnumerable<IMediaPlayerEntityCore> target, bool shuffle)
    {
        target.CallService("shuffle_set", new MediaPlayerShuffleSetParameters { Shuffle = shuffle });
    }

    ///<summary>Toggles a media player on/off.</summary>
    public static void Toggle(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggles a media player on/off.</summary>
    public static void Toggle(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Turns off the power of the media player.</summary>
    public static void TurnOff(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns off the power of the media player.</summary>
    public static void TurnOff(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns on the power of the media player.</summary>
    public static void TurnOn(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Turns on the power of the media player.</summary>
    public static void TurnOn(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Removes the player from a group. Only works on platforms which support player groups.</summary>
    public static void Unjoin(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("unjoin", data);
    }

    ///<summary>Removes the player from a group. Only works on platforms which support player groups.</summary>
    public static void Unjoin(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("unjoin", data);
    }

    ///<summary>Turns down the volume.</summary>
    public static void VolumeDown(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("volume_down", data);
    }

    ///<summary>Turns down the volume.</summary>
    public static void VolumeDown(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("volume_down", data);
    }

    ///<summary>Mutes or unmutes the media player.</summary>
    public static void VolumeMute(this IMediaPlayerEntityCore target, MediaPlayerVolumeMuteParameters data)
    {
        target.CallService("volume_mute", data);
    }

    ///<summary>Mutes or unmutes the media player.</summary>
    public static void VolumeMute(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerVolumeMuteParameters data)
    {
        target.CallService("volume_mute", data);
    }

    ///<summary>Mutes or unmutes the media player.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="isVolumeMuted">Defines whether or not it is muted.</param>
    public static void VolumeMute(this IMediaPlayerEntityCore target, bool isVolumeMuted)
    {
        target.CallService("volume_mute", new MediaPlayerVolumeMuteParameters { IsVolumeMuted = isVolumeMuted });
    }

    ///<summary>Mutes or unmutes the media player.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="isVolumeMuted">Defines whether or not it is muted.</param>
    public static void VolumeMute(this IEnumerable<IMediaPlayerEntityCore> target, bool isVolumeMuted)
    {
        target.CallService("volume_mute", new MediaPlayerVolumeMuteParameters { IsVolumeMuted = isVolumeMuted });
    }

    ///<summary>Sets the volume level.</summary>
    public static void VolumeSet(this IMediaPlayerEntityCore target, MediaPlayerVolumeSetParameters data)
    {
        target.CallService("volume_set", data);
    }

    ///<summary>Sets the volume level.</summary>
    public static void VolumeSet(this IEnumerable<IMediaPlayerEntityCore> target, MediaPlayerVolumeSetParameters data)
    {
        target.CallService("volume_set", data);
    }

    ///<summary>Sets the volume level.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="volumeLevel">The volume. 0 is inaudible, 1 is the maximum volume.</param>
    public static void VolumeSet(this IMediaPlayerEntityCore target, double volumeLevel)
    {
        target.CallService("volume_set", new MediaPlayerVolumeSetParameters { VolumeLevel = volumeLevel });
    }

    ///<summary>Sets the volume level.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="volumeLevel">The volume. 0 is inaudible, 1 is the maximum volume.</param>
    public static void VolumeSet(this IEnumerable<IMediaPlayerEntityCore> target, double volumeLevel)
    {
        target.CallService("volume_set", new MediaPlayerVolumeSetParameters { VolumeLevel = volumeLevel });
    }

    ///<summary>Turns up the volume.</summary>
    public static void VolumeUp(this IMediaPlayerEntityCore target, object? data = null)
    {
        target.CallService("volume_up", data);
    }

    ///<summary>Turns up the volume.</summary>
    public static void VolumeUp(this IEnumerable<IMediaPlayerEntityCore> target, object? data = null)
    {
        target.CallService("volume_up", data);
    }
}

public static class NotifyEntityExtensionMethods
{
    ///<summary>Sends a notification message.</summary>
    public static void SendMessage(this NotifyEntity target, NotifySendMessageParameters data)
    {
        target.CallService("send_message", data);
    }

    ///<summary>Sends a notification message.</summary>
    public static void SendMessage(this IEnumerable<NotifyEntity> target, NotifySendMessageParameters data)
    {
        target.CallService("send_message", data);
    }

    ///<summary>Sends a notification message.</summary>
    ///<param name="target">The NotifyEntity to call this service for</param>
    ///<param name="message">Your notification message.</param>
    ///<param name="title">Title for your notification message.</param>
    public static void SendMessage(this NotifyEntity target, string message, string? title = null)
    {
        target.CallService("send_message", new NotifySendMessageParameters { Message = message, Title = title });
    }

    ///<summary>Sends a notification message.</summary>
    ///<param name="target">The IEnumerable&lt;NotifyEntity&gt; to call this service for</param>
    ///<param name="message">Your notification message.</param>
    ///<param name="title">Title for your notification message.</param>
    public static void SendMessage(this IEnumerable<NotifyEntity> target, string message, string? title = null)
    {
        target.CallService("send_message", new NotifySendMessageParameters { Message = message, Title = title });
    }
}

public static class NumberEntityExtensionMethods
{
    ///<summary>Sets the value of a number.</summary>
    public static void SetValue(this INumberEntityCore target, NumberSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value of a number.</summary>
    public static void SetValue(this IEnumerable<INumberEntityCore> target, NumberSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value of a number.</summary>
    ///<param name="target">The INumberEntityCore to call this service for</param>
    ///<param name="value">The target value to set. eg: 42</param>
    public static void SetValue(this INumberEntityCore target, string? value = null)
    {
        target.CallService("set_value", new NumberSetValueParameters { Value = value });
    }

    ///<summary>Sets the value of a number.</summary>
    ///<param name="target">The IEnumerable&lt;INumberEntityCore&gt; to call this service for</param>
    ///<param name="value">The target value to set. eg: 42</param>
    public static void SetValue(this IEnumerable<INumberEntityCore> target, string? value = null)
    {
        target.CallService("set_value", new NumberSetValueParameters { Value = value });
    }
}

public static class OctopusEnergyEntityExtensionMethods
{
    ///<summary>Joins a given Octoplus saving session event.</summary>
    public static void JoinOctoplusSavingSessionEvent(this EventEntity target, OctopusEnergyJoinOctoplusSavingSessionEventParameters data)
    {
        target.CallService("join_octoplus_saving_session_event", data);
    }

    ///<summary>Joins a given Octoplus saving session event.</summary>
    public static void JoinOctoplusSavingSessionEvent(this IEnumerable<EventEntity> target, OctopusEnergyJoinOctoplusSavingSessionEventParameters data)
    {
        target.CallService("join_octoplus_saving_session_event", data);
    }

    ///<summary>Joins a given Octoplus saving session event.</summary>
    ///<param name="target">The EventEntity to call this service for</param>
    ///<param name="eventCode">The code of the event that is to be joined.</param>
    public static void JoinOctoplusSavingSessionEvent(this EventEntity target, string? eventCode = null)
    {
        target.CallService("join_octoplus_saving_session_event", new OctopusEnergyJoinOctoplusSavingSessionEventParameters { EventCode = eventCode });
    }

    ///<summary>Joins a given Octoplus saving session event.</summary>
    ///<param name="target">The IEnumerable&lt;EventEntity&gt; to call this service for</param>
    ///<param name="eventCode">The code of the event that is to be joined.</param>
    public static void JoinOctoplusSavingSessionEvent(this IEnumerable<EventEntity> target, string? eventCode = null)
    {
        target.CallService("join_octoplus_saving_session_event", new OctopusEnergyJoinOctoplusSavingSessionEventParameters { EventCode = eventCode });
    }

    ///<summary>Redeems a given number of octoplus points into account credit</summary>
    public static void RedeemOctoplusPointsIntoAccountCredit(this ISensorEntityCore target, OctopusEnergyRedeemOctoplusPointsIntoAccountCreditParameters data)
    {
        target.CallService("redeem_octoplus_points_into_account_credit", data);
    }

    ///<summary>Redeems a given number of octoplus points into account credit</summary>
    public static void RedeemOctoplusPointsIntoAccountCredit(this IEnumerable<ISensorEntityCore> target, OctopusEnergyRedeemOctoplusPointsIntoAccountCreditParameters data)
    {
        target.CallService("redeem_octoplus_points_into_account_credit", data);
    }

    ///<summary>Redeems a given number of octoplus points into account credit</summary>
    ///<param name="target">The ISensorEntityCore to call this service for</param>
    ///<param name="pointsToRedeem">The number of points to redeem</param>
    public static void RedeemOctoplusPointsIntoAccountCredit(this ISensorEntityCore target, long? pointsToRedeem = null)
    {
        target.CallService("redeem_octoplus_points_into_account_credit", new OctopusEnergyRedeemOctoplusPointsIntoAccountCreditParameters { PointsToRedeem = pointsToRedeem });
    }

    ///<summary>Redeems a given number of octoplus points into account credit</summary>
    ///<param name="target">The IEnumerable&lt;ISensorEntityCore&gt; to call this service for</param>
    ///<param name="pointsToRedeem">The number of points to redeem</param>
    public static void RedeemOctoplusPointsIntoAccountCredit(this IEnumerable<ISensorEntityCore> target, long? pointsToRedeem = null)
    {
        target.CallService("redeem_octoplus_points_into_account_credit", new OctopusEnergyRedeemOctoplusPointsIntoAccountCreditParameters { PointsToRedeem = pointsToRedeem });
    }

    ///<summary>Refreshes the previous consumption data for a given entity from a given date.</summary>
    public static void RefreshPreviousConsumptionData(this ISensorEntityCore target, OctopusEnergyRefreshPreviousConsumptionDataParameters data)
    {
        target.CallService("refresh_previous_consumption_data", data);
    }

    ///<summary>Refreshes the previous consumption data for a given entity from a given date.</summary>
    public static void RefreshPreviousConsumptionData(this IEnumerable<ISensorEntityCore> target, OctopusEnergyRefreshPreviousConsumptionDataParameters data)
    {
        target.CallService("refresh_previous_consumption_data", data);
    }

    ///<summary>Refreshes the previous consumption data for a given entity from a given date.</summary>
    ///<param name="target">The ISensorEntityCore to call this service for</param>
    ///<param name="startDate">The date the data should be loaded from.</param>
    public static void RefreshPreviousConsumptionData(this ISensorEntityCore target, DateOnly startDate)
    {
        target.CallService("refresh_previous_consumption_data", new OctopusEnergyRefreshPreviousConsumptionDataParameters { StartDate = startDate });
    }

    ///<summary>Refreshes the previous consumption data for a given entity from a given date.</summary>
    ///<param name="target">The IEnumerable&lt;ISensorEntityCore&gt; to call this service for</param>
    ///<param name="startDate">The date the data should be loaded from.</param>
    public static void RefreshPreviousConsumptionData(this IEnumerable<ISensorEntityCore> target, DateOnly startDate)
    {
        target.CallService("refresh_previous_consumption_data", new OctopusEnergyRefreshPreviousConsumptionDataParameters { StartDate = startDate });
    }

    ///<summary>Spins the wheel of fortune for a given energy type</summary>
    public static void SpinWheelOfFortune(this ISensorEntityCore target, object? data = null)
    {
        target.CallService("spin_wheel_of_fortune", data);
    }

    ///<summary>Spins the wheel of fortune for a given energy type</summary>
    public static void SpinWheelOfFortune(this IEnumerable<ISensorEntityCore> target, object? data = null)
    {
        target.CallService("spin_wheel_of_fortune", data);
    }
}

public static class RemoteEntityExtensionMethods
{
    ///<summary>Deletes a command or a list of commands from the database.</summary>
    public static void DeleteCommand(this IRemoteEntityCore target, RemoteDeleteCommandParameters data)
    {
        target.CallService("delete_command", data);
    }

    ///<summary>Deletes a command or a list of commands from the database.</summary>
    public static void DeleteCommand(this IEnumerable<IRemoteEntityCore> target, RemoteDeleteCommandParameters data)
    {
        target.CallService("delete_command", data);
    }

    ///<summary>Deletes a command or a list of commands from the database.</summary>
    ///<param name="target">The IRemoteEntityCore to call this service for</param>
    ///<param name="device">Device from which commands will be deleted. eg: television</param>
    ///<param name="command">The single command or the list of commands to be deleted. eg: Mute</param>
    public static void DeleteCommand(this IRemoteEntityCore target, object command, string? device = null)
    {
        target.CallService("delete_command", new RemoteDeleteCommandParameters { Device = device, Command = command });
    }

    ///<summary>Deletes a command or a list of commands from the database.</summary>
    ///<param name="target">The IEnumerable&lt;IRemoteEntityCore&gt; to call this service for</param>
    ///<param name="device">Device from which commands will be deleted. eg: television</param>
    ///<param name="command">The single command or the list of commands to be deleted. eg: Mute</param>
    public static void DeleteCommand(this IEnumerable<IRemoteEntityCore> target, object command, string? device = null)
    {
        target.CallService("delete_command", new RemoteDeleteCommandParameters { Device = device, Command = command });
    }

    ///<summary>Learns a command or a list of commands from a device.</summary>
    public static void LearnCommand(this IRemoteEntityCore target, RemoteLearnCommandParameters data)
    {
        target.CallService("learn_command", data);
    }

    ///<summary>Learns a command or a list of commands from a device.</summary>
    public static void LearnCommand(this IEnumerable<IRemoteEntityCore> target, RemoteLearnCommandParameters data)
    {
        target.CallService("learn_command", data);
    }

    ///<summary>Learns a command or a list of commands from a device.</summary>
    ///<param name="target">The IRemoteEntityCore to call this service for</param>
    ///<param name="device">Device ID to learn command from. eg: television</param>
    ///<param name="command">A single command or a list of commands to learn. eg: Turn on</param>
    ///<param name="commandType">The type of command to be learned.</param>
    ///<param name="alternative">If code must be stored as an alternative. This is useful for discrete codes. Discrete codes are used for toggles that only perform one function. For example, a code to only turn a device on. If it is on already, sending the code won&apos;t change the state.</param>
    ///<param name="timeout">Timeout for the command to be learned.</param>
    public static void LearnCommand(this IRemoteEntityCore target, string? device = null, object? command = null, object? commandType = null, bool? alternative = null, long? timeout = null)
    {
        target.CallService("learn_command", new RemoteLearnCommandParameters { Device = device, Command = command, CommandType = commandType, Alternative = alternative, Timeout = timeout });
    }

    ///<summary>Learns a command or a list of commands from a device.</summary>
    ///<param name="target">The IEnumerable&lt;IRemoteEntityCore&gt; to call this service for</param>
    ///<param name="device">Device ID to learn command from. eg: television</param>
    ///<param name="command">A single command or a list of commands to learn. eg: Turn on</param>
    ///<param name="commandType">The type of command to be learned.</param>
    ///<param name="alternative">If code must be stored as an alternative. This is useful for discrete codes. Discrete codes are used for toggles that only perform one function. For example, a code to only turn a device on. If it is on already, sending the code won&apos;t change the state.</param>
    ///<param name="timeout">Timeout for the command to be learned.</param>
    public static void LearnCommand(this IEnumerable<IRemoteEntityCore> target, string? device = null, object? command = null, object? commandType = null, bool? alternative = null, long? timeout = null)
    {
        target.CallService("learn_command", new RemoteLearnCommandParameters { Device = device, Command = command, CommandType = commandType, Alternative = alternative, Timeout = timeout });
    }

    ///<summary>Sends a command or a list of commands to a device.</summary>
    public static void SendCommand(this IRemoteEntityCore target, RemoteSendCommandParameters data)
    {
        target.CallService("send_command", data);
    }

    ///<summary>Sends a command or a list of commands to a device.</summary>
    public static void SendCommand(this IEnumerable<IRemoteEntityCore> target, RemoteSendCommandParameters data)
    {
        target.CallService("send_command", data);
    }

    ///<summary>Sends a command or a list of commands to a device.</summary>
    ///<param name="target">The IRemoteEntityCore to call this service for</param>
    ///<param name="device">Device ID to send command to. eg: 32756745</param>
    ///<param name="command">A single command or a list of commands to send. eg: Play</param>
    ///<param name="numRepeats">The number of times you want to repeat the commands.</param>
    ///<param name="delaySecs">The time you want to wait in between repeated commands.</param>
    ///<param name="holdSecs">The time you want to have it held before the release is send.</param>
    public static void SendCommand(this IRemoteEntityCore target, object command, string? device = null, double? numRepeats = null, double? delaySecs = null, double? holdSecs = null)
    {
        target.CallService("send_command", new RemoteSendCommandParameters { Device = device, Command = command, NumRepeats = numRepeats, DelaySecs = delaySecs, HoldSecs = holdSecs });
    }

    ///<summary>Sends a command or a list of commands to a device.</summary>
    ///<param name="target">The IEnumerable&lt;IRemoteEntityCore&gt; to call this service for</param>
    ///<param name="device">Device ID to send command to. eg: 32756745</param>
    ///<param name="command">A single command or a list of commands to send. eg: Play</param>
    ///<param name="numRepeats">The number of times you want to repeat the commands.</param>
    ///<param name="delaySecs">The time you want to wait in between repeated commands.</param>
    ///<param name="holdSecs">The time you want to have it held before the release is send.</param>
    public static void SendCommand(this IEnumerable<IRemoteEntityCore> target, object command, string? device = null, double? numRepeats = null, double? delaySecs = null, double? holdSecs = null)
    {
        target.CallService("send_command", new RemoteSendCommandParameters { Device = device, Command = command, NumRepeats = numRepeats, DelaySecs = delaySecs, HoldSecs = holdSecs });
    }

    ///<summary>Toggles a device on/off.</summary>
    public static void Toggle(this IRemoteEntityCore target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggles a device on/off.</summary>
    public static void Toggle(this IEnumerable<IRemoteEntityCore> target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Turns the device off.</summary>
    public static void TurnOff(this IRemoteEntityCore target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns the device off.</summary>
    public static void TurnOff(this IEnumerable<IRemoteEntityCore> target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Sends the power on command.</summary>
    public static void TurnOn(this IRemoteEntityCore target, RemoteTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Sends the power on command.</summary>
    public static void TurnOn(this IEnumerable<IRemoteEntityCore> target, RemoteTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Sends the power on command.</summary>
    ///<param name="target">The IRemoteEntityCore to call this service for</param>
    ///<param name="activity">Activity ID or activity name to be started. eg: BedroomTV</param>
    public static void TurnOn(this IRemoteEntityCore target, string? activity = null)
    {
        target.CallService("turn_on", new RemoteTurnOnParameters { Activity = activity });
    }

    ///<summary>Sends the power on command.</summary>
    ///<param name="target">The IEnumerable&lt;IRemoteEntityCore&gt; to call this service for</param>
    ///<param name="activity">Activity ID or activity name to be started. eg: BedroomTV</param>
    public static void TurnOn(this IEnumerable<IRemoteEntityCore> target, string? activity = null)
    {
        target.CallService("turn_on", new RemoteTurnOnParameters { Activity = activity });
    }
}

public static class SceneEntityExtensionMethods
{
    ///<summary>Deletes a dynamically created scene.</summary>
    public static void Delete(this ISceneEntityCore target, object? data = null)
    {
        target.CallService("delete", data);
    }

    ///<summary>Deletes a dynamically created scene.</summary>
    public static void Delete(this IEnumerable<ISceneEntityCore> target, object? data = null)
    {
        target.CallService("delete", data);
    }

    ///<summary>Activates a scene.</summary>
    public static void TurnOn(this ISceneEntityCore target, SceneTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Activates a scene.</summary>
    public static void TurnOn(this IEnumerable<ISceneEntityCore> target, SceneTurnOnParameters data)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Activates a scene.</summary>
    ///<param name="target">The ISceneEntityCore to call this service for</param>
    ///<param name="transition">Time it takes the devices to transition into the states defined in the scene.</param>
    public static void TurnOn(this ISceneEntityCore target, double? transition = null)
    {
        target.CallService("turn_on", new SceneTurnOnParameters { Transition = transition });
    }

    ///<summary>Activates a scene.</summary>
    ///<param name="target">The IEnumerable&lt;ISceneEntityCore&gt; to call this service for</param>
    ///<param name="transition">Time it takes the devices to transition into the states defined in the scene.</param>
    public static void TurnOn(this IEnumerable<ISceneEntityCore> target, double? transition = null)
    {
        target.CallService("turn_on", new SceneTurnOnParameters { Transition = transition });
    }
}

public static class ScriptEntityExtensionMethods
{
    ///<summary>Toggle a script. Starts it, if isn&apos;t running, stops it otherwise.</summary>
    public static void Toggle(this IScriptEntityCore target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggle a script. Starts it, if isn&apos;t running, stops it otherwise.</summary>
    public static void Toggle(this IEnumerable<IScriptEntityCore> target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Stops a running script.</summary>
    public static void TurnOff(this IScriptEntityCore target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Stops a running script.</summary>
    public static void TurnOff(this IEnumerable<IScriptEntityCore> target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Runs the sequence of actions defined in a script.</summary>
    public static void TurnOn(this IScriptEntityCore target, object? data = null)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Runs the sequence of actions defined in a script.</summary>
    public static void TurnOn(this IEnumerable<IScriptEntityCore> target, object? data = null)
    {
        target.CallService("turn_on", data);
    }
}

public static class SelectEntityExtensionMethods
{
    ///<summary>Selects the first option.</summary>
    public static void SelectFirst(this ISelectEntityCore target, object? data = null)
    {
        target.CallService("select_first", data);
    }

    ///<summary>Selects the first option.</summary>
    public static void SelectFirst(this IEnumerable<ISelectEntityCore> target, object? data = null)
    {
        target.CallService("select_first", data);
    }

    ///<summary>Selects the last option.</summary>
    public static void SelectLast(this ISelectEntityCore target, object? data = null)
    {
        target.CallService("select_last", data);
    }

    ///<summary>Selects the last option.</summary>
    public static void SelectLast(this IEnumerable<ISelectEntityCore> target, object? data = null)
    {
        target.CallService("select_last", data);
    }

    ///<summary>Selects the next option.</summary>
    public static void SelectNext(this ISelectEntityCore target, SelectSelectNextParameters data)
    {
        target.CallService("select_next", data);
    }

    ///<summary>Selects the next option.</summary>
    public static void SelectNext(this IEnumerable<ISelectEntityCore> target, SelectSelectNextParameters data)
    {
        target.CallService("select_next", data);
    }

    ///<summary>Selects the next option.</summary>
    ///<param name="target">The ISelectEntityCore to call this service for</param>
    ///<param name="cycle">If the option should cycle from the last to the first.</param>
    public static void SelectNext(this ISelectEntityCore target, bool? cycle = null)
    {
        target.CallService("select_next", new SelectSelectNextParameters { Cycle = cycle });
    }

    ///<summary>Selects the next option.</summary>
    ///<param name="target">The IEnumerable&lt;ISelectEntityCore&gt; to call this service for</param>
    ///<param name="cycle">If the option should cycle from the last to the first.</param>
    public static void SelectNext(this IEnumerable<ISelectEntityCore> target, bool? cycle = null)
    {
        target.CallService("select_next", new SelectSelectNextParameters { Cycle = cycle });
    }

    ///<summary>Selects an option.</summary>
    public static void SelectOption(this ISelectEntityCore target, SelectSelectOptionParameters data)
    {
        target.CallService("select_option", data);
    }

    ///<summary>Selects an option.</summary>
    public static void SelectOption(this IEnumerable<ISelectEntityCore> target, SelectSelectOptionParameters data)
    {
        target.CallService("select_option", data);
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The ISelectEntityCore to call this service for</param>
    ///<param name="option">Option to be selected. eg: &quot;Item A&quot;</param>
    public static void SelectOption(this ISelectEntityCore target, string option)
    {
        target.CallService("select_option", new SelectSelectOptionParameters { Option = option });
    }

    ///<summary>Selects an option.</summary>
    ///<param name="target">The IEnumerable&lt;ISelectEntityCore&gt; to call this service for</param>
    ///<param name="option">Option to be selected. eg: &quot;Item A&quot;</param>
    public static void SelectOption(this IEnumerable<ISelectEntityCore> target, string option)
    {
        target.CallService("select_option", new SelectSelectOptionParameters { Option = option });
    }

    ///<summary>Selects the previous option.</summary>
    public static void SelectPrevious(this ISelectEntityCore target, SelectSelectPreviousParameters data)
    {
        target.CallService("select_previous", data);
    }

    ///<summary>Selects the previous option.</summary>
    public static void SelectPrevious(this IEnumerable<ISelectEntityCore> target, SelectSelectPreviousParameters data)
    {
        target.CallService("select_previous", data);
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The ISelectEntityCore to call this service for</param>
    ///<param name="cycle">If the option should cycle from the first to the last.</param>
    public static void SelectPrevious(this ISelectEntityCore target, bool? cycle = null)
    {
        target.CallService("select_previous", new SelectSelectPreviousParameters { Cycle = cycle });
    }

    ///<summary>Selects the previous option.</summary>
    ///<param name="target">The IEnumerable&lt;ISelectEntityCore&gt; to call this service for</param>
    ///<param name="cycle">If the option should cycle from the first to the last.</param>
    public static void SelectPrevious(this IEnumerable<ISelectEntityCore> target, bool? cycle = null)
    {
        target.CallService("select_previous", new SelectSelectPreviousParameters { Cycle = cycle });
    }
}

public static class SqueezeboxEntityExtensionMethods
{
    ///<summary>Calls a custom Squeezebox JSONRPC API.</summary>
    public static void CallMethod(this IMediaPlayerEntityCore target, SqueezeboxCallMethodParameters data)
    {
        target.CallService("call_method", data);
    }

    ///<summary>Calls a custom Squeezebox JSONRPC API.</summary>
    public static void CallMethod(this IEnumerable<IMediaPlayerEntityCore> target, SqueezeboxCallMethodParameters data)
    {
        target.CallService("call_method", data);
    }

    ///<summary>Calls a custom Squeezebox JSONRPC API.</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="command">Command to pass to Lyrion Music Server (p0 in the CLI documentation). eg: playlist</param>
    ///<param name="parameters">Array of additional parameters to pass to Lyrion Music Server (p1, ..., pN in the CLI documentation). . eg: [&quot;loadtracks&quot;, &quot;album.titlesearch=Revolver&quot;]</param>
    public static void CallMethod(this IMediaPlayerEntityCore target, string command, object? parameters = null)
    {
        target.CallService("call_method", new SqueezeboxCallMethodParameters { Command = command, Parameters = parameters });
    }

    ///<summary>Calls a custom Squeezebox JSONRPC API.</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="command">Command to pass to Lyrion Music Server (p0 in the CLI documentation). eg: playlist</param>
    ///<param name="parameters">Array of additional parameters to pass to Lyrion Music Server (p1, ..., pN in the CLI documentation). . eg: [&quot;loadtracks&quot;, &quot;album.titlesearch=Revolver&quot;]</param>
    public static void CallMethod(this IEnumerable<IMediaPlayerEntityCore> target, string command, object? parameters = null)
    {
        target.CallService("call_method", new SqueezeboxCallMethodParameters { Command = command, Parameters = parameters });
    }

    ///<summary>Calls a custom Squeezebox JSONRPC API. Result will be stored in &apos;query_result&apos; attribute of the Squeezebox entity. .</summary>
    public static void CallQuery(this IMediaPlayerEntityCore target, SqueezeboxCallQueryParameters data)
    {
        target.CallService("call_query", data);
    }

    ///<summary>Calls a custom Squeezebox JSONRPC API. Result will be stored in &apos;query_result&apos; attribute of the Squeezebox entity. .</summary>
    public static void CallQuery(this IEnumerable<IMediaPlayerEntityCore> target, SqueezeboxCallQueryParameters data)
    {
        target.CallService("call_query", data);
    }

    ///<summary>Calls a custom Squeezebox JSONRPC API. Result will be stored in &apos;query_result&apos; attribute of the Squeezebox entity. .</summary>
    ///<param name="target">The IMediaPlayerEntityCore to call this service for</param>
    ///<param name="command">Command to pass to Lyrion Music Server (p0 in the CLI documentation). eg: albums</param>
    ///<param name="parameters">Array of additional parameters to pass to Lyrion Music Server (p1, ..., pN in the CLI documentation). . eg: [&quot;0&quot;, &quot;20&quot;, &quot;search:Revolver&quot;]</param>
    public static void CallQuery(this IMediaPlayerEntityCore target, string command, object? parameters = null)
    {
        target.CallService("call_query", new SqueezeboxCallQueryParameters { Command = command, Parameters = parameters });
    }

    ///<summary>Calls a custom Squeezebox JSONRPC API. Result will be stored in &apos;query_result&apos; attribute of the Squeezebox entity. .</summary>
    ///<param name="target">The IEnumerable&lt;IMediaPlayerEntityCore&gt; to call this service for</param>
    ///<param name="command">Command to pass to Lyrion Music Server (p0 in the CLI documentation). eg: albums</param>
    ///<param name="parameters">Array of additional parameters to pass to Lyrion Music Server (p1, ..., pN in the CLI documentation). . eg: [&quot;0&quot;, &quot;20&quot;, &quot;search:Revolver&quot;]</param>
    public static void CallQuery(this IEnumerable<IMediaPlayerEntityCore> target, string command, object? parameters = null)
    {
        target.CallService("call_query", new SqueezeboxCallQueryParameters { Command = command, Parameters = parameters });
    }
}

public static class SwitchEntityExtensionMethods
{
    ///<summary>Toggles a switch on/off.</summary>
    public static void Toggle(this ISwitchEntityCore target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Toggles a switch on/off.</summary>
    public static void Toggle(this IEnumerable<ISwitchEntityCore> target, object? data = null)
    {
        target.CallService("toggle", data);
    }

    ///<summary>Turns a switch off.</summary>
    public static void TurnOff(this ISwitchEntityCore target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns a switch off.</summary>
    public static void TurnOff(this IEnumerable<ISwitchEntityCore> target, object? data = null)
    {
        target.CallService("turn_off", data);
    }

    ///<summary>Turns a switch on.</summary>
    public static void TurnOn(this ISwitchEntityCore target, object? data = null)
    {
        target.CallService("turn_on", data);
    }

    ///<summary>Turns a switch on.</summary>
    public static void TurnOn(this IEnumerable<ISwitchEntityCore> target, object? data = null)
    {
        target.CallService("turn_on", data);
    }
}

public static class TextEntityExtensionMethods
{
    ///<summary>Sets the value.</summary>
    public static void SetValue(this TextEntity target, TextSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value.</summary>
    public static void SetValue(this IEnumerable<TextEntity> target, TextSetValueParameters data)
    {
        target.CallService("set_value", data);
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The TextEntity to call this service for</param>
    ///<param name="value">Enter your text. eg: Hello world!</param>
    public static void SetValue(this TextEntity target, string value)
    {
        target.CallService("set_value", new TextSetValueParameters { Value = value });
    }

    ///<summary>Sets the value.</summary>
    ///<param name="target">The IEnumerable&lt;TextEntity&gt; to call this service for</param>
    ///<param name="value">Enter your text. eg: Hello world!</param>
    public static void SetValue(this IEnumerable<TextEntity> target, string value)
    {
        target.CallService("set_value", new TextSetValueParameters { Value = value });
    }
}

public static class TimerEntityExtensionMethods
{
    ///<summary>Cancels a timer.</summary>
    public static void Cancel(this ITimerEntityCore target, object? data = null)
    {
        target.CallService("cancel", data);
    }

    ///<summary>Cancels a timer.</summary>
    public static void Cancel(this IEnumerable<ITimerEntityCore> target, object? data = null)
    {
        target.CallService("cancel", data);
    }

    ///<summary>Changes a timer.</summary>
    public static void Change(this ITimerEntityCore target, TimerChangeParameters data)
    {
        target.CallService("change", data);
    }

    ///<summary>Changes a timer.</summary>
    public static void Change(this IEnumerable<ITimerEntityCore> target, TimerChangeParameters data)
    {
        target.CallService("change", data);
    }

    ///<summary>Changes a timer.</summary>
    ///<param name="target">The ITimerEntityCore to call this service for</param>
    ///<param name="duration">Duration to add or subtract to the running timer. eg: 00:01:00, 60 or -60</param>
    public static void Change(this ITimerEntityCore target, string duration)
    {
        target.CallService("change", new TimerChangeParameters { Duration = duration });
    }

    ///<summary>Changes a timer.</summary>
    ///<param name="target">The IEnumerable&lt;ITimerEntityCore&gt; to call this service for</param>
    ///<param name="duration">Duration to add or subtract to the running timer. eg: 00:01:00, 60 or -60</param>
    public static void Change(this IEnumerable<ITimerEntityCore> target, string duration)
    {
        target.CallService("change", new TimerChangeParameters { Duration = duration });
    }

    ///<summary>Finishes a timer.</summary>
    public static void Finish(this ITimerEntityCore target, object? data = null)
    {
        target.CallService("finish", data);
    }

    ///<summary>Finishes a timer.</summary>
    public static void Finish(this IEnumerable<ITimerEntityCore> target, object? data = null)
    {
        target.CallService("finish", data);
    }

    ///<summary>Pauses a timer.</summary>
    public static void Pause(this ITimerEntityCore target, object? data = null)
    {
        target.CallService("pause", data);
    }

    ///<summary>Pauses a timer.</summary>
    public static void Pause(this IEnumerable<ITimerEntityCore> target, object? data = null)
    {
        target.CallService("pause", data);
    }

    ///<summary>Starts a timer.</summary>
    public static void Start(this ITimerEntityCore target, TimerStartParameters data)
    {
        target.CallService("start", data);
    }

    ///<summary>Starts a timer.</summary>
    public static void Start(this IEnumerable<ITimerEntityCore> target, TimerStartParameters data)
    {
        target.CallService("start", data);
    }

    ///<summary>Starts a timer.</summary>
    ///<param name="target">The ITimerEntityCore to call this service for</param>
    ///<param name="duration">Duration the timer requires to finish. [optional]. eg: 00:01:00 or 60</param>
    public static void Start(this ITimerEntityCore target, string? duration = null)
    {
        target.CallService("start", new TimerStartParameters { Duration = duration });
    }

    ///<summary>Starts a timer.</summary>
    ///<param name="target">The IEnumerable&lt;ITimerEntityCore&gt; to call this service for</param>
    ///<param name="duration">Duration the timer requires to finish. [optional]. eg: 00:01:00 or 60</param>
    public static void Start(this IEnumerable<ITimerEntityCore> target, string? duration = null)
    {
        target.CallService("start", new TimerStartParameters { Duration = duration });
    }
}

public static class TodoEntityExtensionMethods
{
    ///<summary>Add a new to-do list item.</summary>
    public static void AddItem(this TodoEntity target, TodoAddItemParameters data)
    {
        target.CallService("add_item", data);
    }

    ///<summary>Add a new to-do list item.</summary>
    public static void AddItem(this IEnumerable<TodoEntity> target, TodoAddItemParameters data)
    {
        target.CallService("add_item", data);
    }

    ///<summary>Add a new to-do list item.</summary>
    ///<param name="target">The TodoEntity to call this service for</param>
    ///<param name="item">The name that represents the to-do item. eg: Submit income tax return</param>
    ///<param name="dueDate">The date the to-do item is expected to be completed. eg: 2023-11-17</param>
    ///<param name="dueDatetime">The date and time the to-do item is expected to be completed. eg: 2023-11-17 13:30:00</param>
    ///<param name="description">A more complete description of the to-do item than provided by the item name. eg: A more complete description of the to-do item than that provided by the summary.</param>
    public static void AddItem(this TodoEntity target, string item, DateOnly? dueDate = null, DateTime? dueDatetime = null, string? description = null)
    {
        target.CallService("add_item", new TodoAddItemParameters { Item = item, DueDate = dueDate, DueDatetime = dueDatetime, Description = description });
    }

    ///<summary>Add a new to-do list item.</summary>
    ///<param name="target">The IEnumerable&lt;TodoEntity&gt; to call this service for</param>
    ///<param name="item">The name that represents the to-do item. eg: Submit income tax return</param>
    ///<param name="dueDate">The date the to-do item is expected to be completed. eg: 2023-11-17</param>
    ///<param name="dueDatetime">The date and time the to-do item is expected to be completed. eg: 2023-11-17 13:30:00</param>
    ///<param name="description">A more complete description of the to-do item than provided by the item name. eg: A more complete description of the to-do item than that provided by the summary.</param>
    public static void AddItem(this IEnumerable<TodoEntity> target, string item, DateOnly? dueDate = null, DateTime? dueDatetime = null, string? description = null)
    {
        target.CallService("add_item", new TodoAddItemParameters { Item = item, DueDate = dueDate, DueDatetime = dueDatetime, Description = description });
    }

    ///<summary>Get items on a to-do list.</summary>
    public static Task<JsonElement?> GetItemsAsync(this TodoEntity target, TodoGetItemsParameters data)
    {
        return target.CallServiceWithResponseAsync("get_items", data);
    }

    ///<summary>Get items on a to-do list.</summary>
    ///<param name="target">The TodoEntity to call this service for</param>
    ///<param name="status">Only return to-do items with the specified statuses. Returns not completed actions by default. eg: needs_action</param>
    public static Task<JsonElement?> GetItemsAsync(this TodoEntity target, IEnumerable<object>? status = null)
    {
        return target.CallServiceWithResponseAsync("get_items", new TodoGetItemsParameters { Status = status });
    }

    ///<summary>Get items on a to-do list.</summary>
    public static void GetItems(this TodoEntity target, TodoGetItemsParameters data)
    {
        target.CallService("get_items", data);
    }

    ///<summary>Get items on a to-do list.</summary>
    public static void GetItems(this IEnumerable<TodoEntity> target, TodoGetItemsParameters data)
    {
        target.CallService("get_items", data);
    }

    ///<summary>Get items on a to-do list.</summary>
    ///<param name="target">The TodoEntity to call this service for</param>
    ///<param name="status">Only return to-do items with the specified statuses. Returns not completed actions by default. eg: needs_action</param>
    public static void GetItems(this TodoEntity target, IEnumerable<object>? status = null)
    {
        target.CallService("get_items", new TodoGetItemsParameters { Status = status });
    }

    ///<summary>Get items on a to-do list.</summary>
    ///<param name="target">The IEnumerable&lt;TodoEntity&gt; to call this service for</param>
    ///<param name="status">Only return to-do items with the specified statuses. Returns not completed actions by default. eg: needs_action</param>
    public static void GetItems(this IEnumerable<TodoEntity> target, IEnumerable<object>? status = null)
    {
        target.CallService("get_items", new TodoGetItemsParameters { Status = status });
    }

    ///<summary>Remove all to-do list items that have been completed.</summary>
    public static void RemoveCompletedItems(this TodoEntity target, object? data = null)
    {
        target.CallService("remove_completed_items", data);
    }

    ///<summary>Remove all to-do list items that have been completed.</summary>
    public static void RemoveCompletedItems(this IEnumerable<TodoEntity> target, object? data = null)
    {
        target.CallService("remove_completed_items", data);
    }

    ///<summary>Remove an existing to-do list item by its name.</summary>
    public static void RemoveItem(this TodoEntity target, TodoRemoveItemParameters data)
    {
        target.CallService("remove_item", data);
    }

    ///<summary>Remove an existing to-do list item by its name.</summary>
    public static void RemoveItem(this IEnumerable<TodoEntity> target, TodoRemoveItemParameters data)
    {
        target.CallService("remove_item", data);
    }

    ///<summary>Remove an existing to-do list item by its name.</summary>
    ///<param name="target">The TodoEntity to call this service for</param>
    ///<param name="item">The name for the to-do list items.</param>
    public static void RemoveItem(this TodoEntity target, string item)
    {
        target.CallService("remove_item", new TodoRemoveItemParameters { Item = item });
    }

    ///<summary>Remove an existing to-do list item by its name.</summary>
    ///<param name="target">The IEnumerable&lt;TodoEntity&gt; to call this service for</param>
    ///<param name="item">The name for the to-do list items.</param>
    public static void RemoveItem(this IEnumerable<TodoEntity> target, string item)
    {
        target.CallService("remove_item", new TodoRemoveItemParameters { Item = item });
    }

    ///<summary>Update an existing to-do list item based on its name.</summary>
    public static void UpdateItem(this TodoEntity target, TodoUpdateItemParameters data)
    {
        target.CallService("update_item", data);
    }

    ///<summary>Update an existing to-do list item based on its name.</summary>
    public static void UpdateItem(this IEnumerable<TodoEntity> target, TodoUpdateItemParameters data)
    {
        target.CallService("update_item", data);
    }

    ///<summary>Update an existing to-do list item based on its name.</summary>
    ///<param name="target">The TodoEntity to call this service for</param>
    ///<param name="item">The name for the to-do list item. eg: Submit income tax return</param>
    ///<param name="rename">The new name of the to-do item eg: Something else</param>
    ///<param name="status">A status or confirmation of the to-do item. eg: needs_action</param>
    ///<param name="dueDate">The date the to-do item is expected to be completed. eg: 2023-11-17</param>
    ///<param name="dueDatetime">The date and time the to-do item is expected to be completed. eg: 2023-11-17 13:30:00</param>
    ///<param name="description">A more complete description of the to-do item than provided by the item name. eg: A more complete description of the to-do item than that provided by the summary.</param>
    public static void UpdateItem(this TodoEntity target, string item, string? rename = null, object? status = null, DateOnly? dueDate = null, DateTime? dueDatetime = null, string? description = null)
    {
        target.CallService("update_item", new TodoUpdateItemParameters { Item = item, Rename = rename, Status = status, DueDate = dueDate, DueDatetime = dueDatetime, Description = description });
    }

    ///<summary>Update an existing to-do list item based on its name.</summary>
    ///<param name="target">The IEnumerable&lt;TodoEntity&gt; to call this service for</param>
    ///<param name="item">The name for the to-do list item. eg: Submit income tax return</param>
    ///<param name="rename">The new name of the to-do item eg: Something else</param>
    ///<param name="status">A status or confirmation of the to-do item. eg: needs_action</param>
    ///<param name="dueDate">The date the to-do item is expected to be completed. eg: 2023-11-17</param>
    ///<param name="dueDatetime">The date and time the to-do item is expected to be completed. eg: 2023-11-17 13:30:00</param>
    ///<param name="description">A more complete description of the to-do item than provided by the item name. eg: A more complete description of the to-do item than that provided by the summary.</param>
    public static void UpdateItem(this IEnumerable<TodoEntity> target, string item, string? rename = null, object? status = null, DateOnly? dueDate = null, DateTime? dueDatetime = null, string? description = null)
    {
        target.CallService("update_item", new TodoUpdateItemParameters { Item = item, Rename = rename, Status = status, DueDate = dueDate, DueDatetime = dueDatetime, Description = description });
    }
}

public static class TtsEntityExtensionMethods
{
    ///<summary>Speaks something using text-to-speech on a media player.</summary>
    public static void Speak(this TtsEntity target, TtsSpeakParameters data)
    {
        target.CallService("speak", data);
    }

    ///<summary>Speaks something using text-to-speech on a media player.</summary>
    public static void Speak(this IEnumerable<TtsEntity> target, TtsSpeakParameters data)
    {
        target.CallService("speak", data);
    }

    ///<summary>Speaks something using text-to-speech on a media player.</summary>
    ///<param name="target">The TtsEntity to call this service for</param>
    ///<param name="mediaPlayerEntityId">Media players to play the message.</param>
    ///<param name="message">The text you want to convert into speech so that you can listen to it on your device. eg: My name is hanna</param>
    ///<param name="cache">Stores this message locally so that when the text is requested again, the output can be produced more quickly.</param>
    ///<param name="language">Language to use for speech generation. eg: ru</param>
    ///<param name="options">A dictionary containing integration-specific options. eg: platform specific</param>
    public static void Speak(this TtsEntity target, string mediaPlayerEntityId, string message, bool? cache = null, string? language = null, object? options = null)
    {
        target.CallService("speak", new TtsSpeakParameters { MediaPlayerEntityId = mediaPlayerEntityId, Message = message, Cache = cache, Language = language, Options = options });
    }

    ///<summary>Speaks something using text-to-speech on a media player.</summary>
    ///<param name="target">The IEnumerable&lt;TtsEntity&gt; to call this service for</param>
    ///<param name="mediaPlayerEntityId">Media players to play the message.</param>
    ///<param name="message">The text you want to convert into speech so that you can listen to it on your device. eg: My name is hanna</param>
    ///<param name="cache">Stores this message locally so that when the text is requested again, the output can be produced more quickly.</param>
    ///<param name="language">Language to use for speech generation. eg: ru</param>
    ///<param name="options">A dictionary containing integration-specific options. eg: platform specific</param>
    public static void Speak(this IEnumerable<TtsEntity> target, string mediaPlayerEntityId, string message, bool? cache = null, string? language = null, object? options = null)
    {
        target.CallService("speak", new TtsSpeakParameters { MediaPlayerEntityId = mediaPlayerEntityId, Message = message, Cache = cache, Language = language, Options = options });
    }
}

public static class UpdateEntityExtensionMethods
{
    ///<summary>Removes the skipped version marker from an update.</summary>
    public static void ClearSkipped(this IUpdateEntityCore target, object? data = null)
    {
        target.CallService("clear_skipped", data);
    }

    ///<summary>Removes the skipped version marker from an update.</summary>
    public static void ClearSkipped(this IEnumerable<IUpdateEntityCore> target, object? data = null)
    {
        target.CallService("clear_skipped", data);
    }

    ///<summary>Installs an update for this device or service.</summary>
    public static void Install(this IUpdateEntityCore target, UpdateInstallParameters data)
    {
        target.CallService("install", data);
    }

    ///<summary>Installs an update for this device or service.</summary>
    public static void Install(this IEnumerable<IUpdateEntityCore> target, UpdateInstallParameters data)
    {
        target.CallService("install", data);
    }

    ///<summary>Installs an update for this device or service.</summary>
    ///<param name="target">The IUpdateEntityCore to call this service for</param>
    ///<param name="version">The version to install. If omitted, the latest version will be installed. eg: 1.0.0</param>
    ///<param name="backup">If supported by the integration, this creates a backup before starting the update .</param>
    public static void Install(this IUpdateEntityCore target, string? version = null, bool? backup = null)
    {
        target.CallService("install", new UpdateInstallParameters { Version = version, Backup = backup });
    }

    ///<summary>Installs an update for this device or service.</summary>
    ///<param name="target">The IEnumerable&lt;IUpdateEntityCore&gt; to call this service for</param>
    ///<param name="version">The version to install. If omitted, the latest version will be installed. eg: 1.0.0</param>
    ///<param name="backup">If supported by the integration, this creates a backup before starting the update .</param>
    public static void Install(this IEnumerable<IUpdateEntityCore> target, string? version = null, bool? backup = null)
    {
        target.CallService("install", new UpdateInstallParameters { Version = version, Backup = backup });
    }

    ///<summary>Marks currently available update as skipped.</summary>
    public static void Skip(this IUpdateEntityCore target, object? data = null)
    {
        target.CallService("skip", data);
    }

    ///<summary>Marks currently available update as skipped.</summary>
    public static void Skip(this IEnumerable<IUpdateEntityCore> target, object? data = null)
    {
        target.CallService("skip", data);
    }
}

public static class VacuumEntityExtensionMethods
{
    ///<summary>Tells the vacuum cleaner to do a spot clean-up.</summary>
    public static void CleanSpot(this IVacuumEntityCore target, object? data = null)
    {
        target.CallService("clean_spot", data);
    }

    ///<summary>Tells the vacuum cleaner to do a spot clean-up.</summary>
    public static void CleanSpot(this IEnumerable<IVacuumEntityCore> target, object? data = null)
    {
        target.CallService("clean_spot", data);
    }

    ///<summary>Locates the vacuum cleaner robot.</summary>
    public static void Locate(this IVacuumEntityCore target, object? data = null)
    {
        target.CallService("locate", data);
    }

    ///<summary>Locates the vacuum cleaner robot.</summary>
    public static void Locate(this IEnumerable<IVacuumEntityCore> target, object? data = null)
    {
        target.CallService("locate", data);
    }

    ///<summary>Pauses the cleaning task.</summary>
    public static void Pause(this IVacuumEntityCore target, object? data = null)
    {
        target.CallService("pause", data);
    }

    ///<summary>Pauses the cleaning task.</summary>
    public static void Pause(this IEnumerable<IVacuumEntityCore> target, object? data = null)
    {
        target.CallService("pause", data);
    }

    ///<summary>Tells the vacuum cleaner to return to its dock.</summary>
    public static void ReturnToBase(this IVacuumEntityCore target, object? data = null)
    {
        target.CallService("return_to_base", data);
    }

    ///<summary>Tells the vacuum cleaner to return to its dock.</summary>
    public static void ReturnToBase(this IEnumerable<IVacuumEntityCore> target, object? data = null)
    {
        target.CallService("return_to_base", data);
    }

    ///<summary>Sends a command to the vacuum cleaner.</summary>
    public static void SendCommand(this IVacuumEntityCore target, VacuumSendCommandParameters data)
    {
        target.CallService("send_command", data);
    }

    ///<summary>Sends a command to the vacuum cleaner.</summary>
    public static void SendCommand(this IEnumerable<IVacuumEntityCore> target, VacuumSendCommandParameters data)
    {
        target.CallService("send_command", data);
    }

    ///<summary>Sends a command to the vacuum cleaner.</summary>
    ///<param name="target">The IVacuumEntityCore to call this service for</param>
    ///<param name="command">Command to execute. The commands are integration-specific. eg: set_dnd_timer</param>
    ///<param name="params">Parameters for the command. The parameters are integration-specific. eg: { &quot;key&quot;: &quot;value&quot; }</param>
    public static void SendCommand(this IVacuumEntityCore target, string command, object? @params = null)
    {
        target.CallService("send_command", new VacuumSendCommandParameters { Command = command, Params = @params });
    }

    ///<summary>Sends a command to the vacuum cleaner.</summary>
    ///<param name="target">The IEnumerable&lt;IVacuumEntityCore&gt; to call this service for</param>
    ///<param name="command">Command to execute. The commands are integration-specific. eg: set_dnd_timer</param>
    ///<param name="params">Parameters for the command. The parameters are integration-specific. eg: { &quot;key&quot;: &quot;value&quot; }</param>
    public static void SendCommand(this IEnumerable<IVacuumEntityCore> target, string command, object? @params = null)
    {
        target.CallService("send_command", new VacuumSendCommandParameters { Command = command, Params = @params });
    }

    ///<summary>Sets the fan speed of the vacuum cleaner.</summary>
    public static void SetFanSpeed(this IVacuumEntityCore target, VacuumSetFanSpeedParameters data)
    {
        target.CallService("set_fan_speed", data);
    }

    ///<summary>Sets the fan speed of the vacuum cleaner.</summary>
    public static void SetFanSpeed(this IEnumerable<IVacuumEntityCore> target, VacuumSetFanSpeedParameters data)
    {
        target.CallService("set_fan_speed", data);
    }

    ///<summary>Sets the fan speed of the vacuum cleaner.</summary>
    ///<param name="target">The IVacuumEntityCore to call this service for</param>
    ///<param name="fanSpeed">Fan speed. The value depends on the integration. Some integrations have speed steps, like &apos;medium&apos;. Some use a percentage, between 0 and 100. eg: low</param>
    public static void SetFanSpeed(this IVacuumEntityCore target, string fanSpeed)
    {
        target.CallService("set_fan_speed", new VacuumSetFanSpeedParameters { FanSpeed = fanSpeed });
    }

    ///<summary>Sets the fan speed of the vacuum cleaner.</summary>
    ///<param name="target">The IEnumerable&lt;IVacuumEntityCore&gt; to call this service for</param>
    ///<param name="fanSpeed">Fan speed. The value depends on the integration. Some integrations have speed steps, like &apos;medium&apos;. Some use a percentage, between 0 and 100. eg: low</param>
    public static void SetFanSpeed(this IEnumerable<IVacuumEntityCore> target, string fanSpeed)
    {
        target.CallService("set_fan_speed", new VacuumSetFanSpeedParameters { FanSpeed = fanSpeed });
    }

    ///<summary>Starts or resumes the cleaning task.</summary>
    public static void Start(this IVacuumEntityCore target, object? data = null)
    {
        target.CallService("start", data);
    }

    ///<summary>Starts or resumes the cleaning task.</summary>
    public static void Start(this IEnumerable<IVacuumEntityCore> target, object? data = null)
    {
        target.CallService("start", data);
    }

    ///<summary>Stops the current cleaning task.</summary>
    public static void Stop(this IVacuumEntityCore target, object? data = null)
    {
        target.CallService("stop", data);
    }

    ///<summary>Stops the current cleaning task.</summary>
    public static void Stop(this IEnumerable<IVacuumEntityCore> target, object? data = null)
    {
        target.CallService("stop", data);
    }
}

public static class WeatherEntityExtensionMethods
{
    ///<summary>Get weather forecasts.</summary>
    public static Task<JsonElement?> GetForecastsAsync(this IWeatherEntityCore target, WeatherGetForecastsParameters data)
    {
        return target.CallServiceWithResponseAsync("get_forecasts", data);
    }

    ///<summary>Get weather forecasts.</summary>
    ///<param name="target">The IWeatherEntityCore to call this service for</param>
    ///<param name="type">Forecast type: daily, hourly or twice daily.</param>
    public static Task<JsonElement?> GetForecastsAsync(this IWeatherEntityCore target, object @type)
    {
        return target.CallServiceWithResponseAsync("get_forecasts", new WeatherGetForecastsParameters { Type = @type });
    }

    ///<summary>Get weather forecasts.</summary>
    public static void GetForecasts(this IWeatherEntityCore target, WeatherGetForecastsParameters data)
    {
        target.CallService("get_forecasts", data);
    }

    ///<summary>Get weather forecasts.</summary>
    public static void GetForecasts(this IEnumerable<IWeatherEntityCore> target, WeatherGetForecastsParameters data)
    {
        target.CallService("get_forecasts", data);
    }

    ///<summary>Get weather forecasts.</summary>
    ///<param name="target">The IWeatherEntityCore to call this service for</param>
    ///<param name="type">Forecast type: daily, hourly or twice daily.</param>
    public static void GetForecasts(this IWeatherEntityCore target, object @type)
    {
        target.CallService("get_forecasts", new WeatherGetForecastsParameters { Type = @type });
    }

    ///<summary>Get weather forecasts.</summary>
    ///<param name="target">The IEnumerable&lt;IWeatherEntityCore&gt; to call this service for</param>
    ///<param name="type">Forecast type: daily, hourly or twice daily.</param>
    public static void GetForecasts(this IEnumerable<IWeatherEntityCore> target, object @type)
    {
        target.CallService("get_forecasts", new WeatherGetForecastsParameters { Type = @type });
    }
}

public static class YeelightEntityExtensionMethods
{
    ///<summary>Turns the light on to the specified brightness and sets a timer to turn it back off after the given number of minutes. If the light is off, Set a color scene, if light is off, it will be turned on.</summary>
    public static void SetAutoDelayOffScene(this ILightEntityCore target, YeelightSetAutoDelayOffSceneParameters data)
    {
        target.CallService("set_auto_delay_off_scene", data);
    }

    ///<summary>Turns the light on to the specified brightness and sets a timer to turn it back off after the given number of minutes. If the light is off, Set a color scene, if light is off, it will be turned on.</summary>
    public static void SetAutoDelayOffScene(this IEnumerable<ILightEntityCore> target, YeelightSetAutoDelayOffSceneParameters data)
    {
        target.CallService("set_auto_delay_off_scene", data);
    }

    ///<summary>Turns the light on to the specified brightness and sets a timer to turn it back off after the given number of minutes. If the light is off, Set a color scene, if light is off, it will be turned on.</summary>
    ///<param name="target">The ILightEntityCore to call this service for</param>
    ///<param name="minutes">The time to wait before automatically turning the light off.</param>
    ///<param name="brightness">The brightness value to set.</param>
    public static void SetAutoDelayOffScene(this ILightEntityCore target, double? minutes = null, double? brightness = null)
    {
        target.CallService("set_auto_delay_off_scene", new YeelightSetAutoDelayOffSceneParameters { Minutes = minutes, Brightness = brightness });
    }

    ///<summary>Turns the light on to the specified brightness and sets a timer to turn it back off after the given number of minutes. If the light is off, Set a color scene, if light is off, it will be turned on.</summary>
    ///<param name="target">The IEnumerable&lt;ILightEntityCore&gt; to call this service for</param>
    ///<param name="minutes">The time to wait before automatically turning the light off.</param>
    ///<param name="brightness">The brightness value to set.</param>
    public static void SetAutoDelayOffScene(this IEnumerable<ILightEntityCore> target, double? minutes = null, double? brightness = null)
    {
        target.CallService("set_auto_delay_off_scene", new YeelightSetAutoDelayOffSceneParameters { Minutes = minutes, Brightness = brightness });
    }

    ///<summary>Starts a color flow. If the light is off, it will be turned on.</summary>
    public static void SetColorFlowScene(this ILightEntityCore target, YeelightSetColorFlowSceneParameters data)
    {
        target.CallService("set_color_flow_scene", data);
    }

    ///<summary>Starts a color flow. If the light is off, it will be turned on.</summary>
    public static void SetColorFlowScene(this IEnumerable<ILightEntityCore> target, YeelightSetColorFlowSceneParameters data)
    {
        target.CallService("set_color_flow_scene", data);
    }

    ///<summary>Starts a color flow. If the light is off, it will be turned on.</summary>
    ///<param name="target">The ILightEntityCore to call this service for</param>
    ///<param name="count">The number of times to run this flow (0 to run forever).</param>
    ///<param name="action">The action to take after the flow stops.</param>
    ///<param name="transitions">Array of transitions, for desired effect. Examples https://yeelight.readthedocs.io/en/stable/flow.html. eg: [{ &quot;TemperatureTransition&quot;: [1900, 1000, 80] }, { &quot;TemperatureTransition&quot;: [1900, 1000, 10] }]</param>
    public static void SetColorFlowScene(this ILightEntityCore target, double? count = null, object? action = null, object? transitions = null)
    {
        target.CallService("set_color_flow_scene", new YeelightSetColorFlowSceneParameters { Count = count, Action = action, Transitions = transitions });
    }

    ///<summary>Starts a color flow. If the light is off, it will be turned on.</summary>
    ///<param name="target">The IEnumerable&lt;ILightEntityCore&gt; to call this service for</param>
    ///<param name="count">The number of times to run this flow (0 to run forever).</param>
    ///<param name="action">The action to take after the flow stops.</param>
    ///<param name="transitions">Array of transitions, for desired effect. Examples https://yeelight.readthedocs.io/en/stable/flow.html. eg: [{ &quot;TemperatureTransition&quot;: [1900, 1000, 80] }, { &quot;TemperatureTransition&quot;: [1900, 1000, 10] }]</param>
    public static void SetColorFlowScene(this IEnumerable<ILightEntityCore> target, double? count = null, object? action = null, object? transitions = null)
    {
        target.CallService("set_color_flow_scene", new YeelightSetColorFlowSceneParameters { Count = count, Action = action, Transitions = transitions });
    }

    ///<summary>Changes the light to the specified RGB color and brightness. If the light is off, it will be turned on.</summary>
    public static void SetColorScene(this ILightEntityCore target, YeelightSetColorSceneParameters data)
    {
        target.CallService("set_color_scene", data);
    }

    ///<summary>Changes the light to the specified RGB color and brightness. If the light is off, it will be turned on.</summary>
    public static void SetColorScene(this IEnumerable<ILightEntityCore> target, YeelightSetColorSceneParameters data)
    {
        target.CallService("set_color_scene", data);
    }

    ///<summary>Changes the light to the specified RGB color and brightness. If the light is off, it will be turned on.</summary>
    ///<param name="target">The ILightEntityCore to call this service for</param>
    ///<param name="rgbColor">Color for the light in RGB-format. eg: [255, 100, 100]</param>
    ///<param name="brightness">The brightness value to set.</param>
    public static void SetColorScene(this ILightEntityCore target, IReadOnlyCollection<int>? rgbColor = null, double? brightness = null)
    {
        target.CallService("set_color_scene", new YeelightSetColorSceneParameters { RgbColor = rgbColor, Brightness = brightness });
    }

    ///<summary>Changes the light to the specified RGB color and brightness. If the light is off, it will be turned on.</summary>
    ///<param name="target">The IEnumerable&lt;ILightEntityCore&gt; to call this service for</param>
    ///<param name="rgbColor">Color for the light in RGB-format. eg: [255, 100, 100]</param>
    ///<param name="brightness">The brightness value to set.</param>
    public static void SetColorScene(this IEnumerable<ILightEntityCore> target, IReadOnlyCollection<int>? rgbColor = null, double? brightness = null)
    {
        target.CallService("set_color_scene", new YeelightSetColorSceneParameters { RgbColor = rgbColor, Brightness = brightness });
    }

    ///<summary>Changes the light to the specified color temperature. If the light is off, it will be turned on.</summary>
    public static void SetColorTempScene(this ILightEntityCore target, YeelightSetColorTempSceneParameters data)
    {
        target.CallService("set_color_temp_scene", data);
    }

    ///<summary>Changes the light to the specified color temperature. If the light is off, it will be turned on.</summary>
    public static void SetColorTempScene(this IEnumerable<ILightEntityCore> target, YeelightSetColorTempSceneParameters data)
    {
        target.CallService("set_color_temp_scene", data);
    }

    ///<summary>Changes the light to the specified color temperature. If the light is off, it will be turned on.</summary>
    ///<param name="target">The ILightEntityCore to call this service for</param>
    ///<param name="kelvin">Color temperature for the light in Kelvin.</param>
    ///<param name="brightness">The brightness value to set.</param>
    public static void SetColorTempScene(this ILightEntityCore target, long? kelvin = null, double? brightness = null)
    {
        target.CallService("set_color_temp_scene", new YeelightSetColorTempSceneParameters { Kelvin = kelvin, Brightness = brightness });
    }

    ///<summary>Changes the light to the specified color temperature. If the light is off, it will be turned on.</summary>
    ///<param name="target">The IEnumerable&lt;ILightEntityCore&gt; to call this service for</param>
    ///<param name="kelvin">Color temperature for the light in Kelvin.</param>
    ///<param name="brightness">The brightness value to set.</param>
    public static void SetColorTempScene(this IEnumerable<ILightEntityCore> target, long? kelvin = null, double? brightness = null)
    {
        target.CallService("set_color_temp_scene", new YeelightSetColorTempSceneParameters { Kelvin = kelvin, Brightness = brightness });
    }

    ///<summary>Changes the light to the specified HSV color and brightness. If the light is off, it will be turned on.</summary>
    public static void SetHsvScene(this ILightEntityCore target, YeelightSetHsvSceneParameters data)
    {
        target.CallService("set_hsv_scene", data);
    }

    ///<summary>Changes the light to the specified HSV color and brightness. If the light is off, it will be turned on.</summary>
    public static void SetHsvScene(this IEnumerable<ILightEntityCore> target, YeelightSetHsvSceneParameters data)
    {
        target.CallService("set_hsv_scene", data);
    }

    ///<summary>Changes the light to the specified HSV color and brightness. If the light is off, it will be turned on.</summary>
    ///<param name="target">The ILightEntityCore to call this service for</param>
    ///<param name="hsColor">Color for the light in hue/sat format. Hue is 0-359 and Sat is 0-100. eg: [300, 70]</param>
    ///<param name="brightness">The brightness value to set.</param>
    public static void SetHsvScene(this ILightEntityCore target, object? hsColor = null, double? brightness = null)
    {
        target.CallService("set_hsv_scene", new YeelightSetHsvSceneParameters { HsColor = hsColor, Brightness = brightness });
    }

    ///<summary>Changes the light to the specified HSV color and brightness. If the light is off, it will be turned on.</summary>
    ///<param name="target">The IEnumerable&lt;ILightEntityCore&gt; to call this service for</param>
    ///<param name="hsColor">Color for the light in hue/sat format. Hue is 0-359 and Sat is 0-100. eg: [300, 70]</param>
    ///<param name="brightness">The brightness value to set.</param>
    public static void SetHsvScene(this IEnumerable<ILightEntityCore> target, object? hsColor = null, double? brightness = null)
    {
        target.CallService("set_hsv_scene", new YeelightSetHsvSceneParameters { HsColor = hsColor, Brightness = brightness });
    }

    ///<summary>Sets a operation mode.</summary>
    public static void SetMode(this ILightEntityCore target, YeelightSetModeParameters data)
    {
        target.CallService("set_mode", data);
    }

    ///<summary>Sets a operation mode.</summary>
    public static void SetMode(this IEnumerable<ILightEntityCore> target, YeelightSetModeParameters data)
    {
        target.CallService("set_mode", data);
    }

    ///<summary>Sets a operation mode.</summary>
    ///<param name="target">The ILightEntityCore to call this service for</param>
    ///<param name="mode">Operation mode.</param>
    public static void SetMode(this ILightEntityCore target, object mode)
    {
        target.CallService("set_mode", new YeelightSetModeParameters { Mode = mode });
    }

    ///<summary>Sets a operation mode.</summary>
    ///<param name="target">The IEnumerable&lt;ILightEntityCore&gt; to call this service for</param>
    ///<param name="mode">Operation mode.</param>
    public static void SetMode(this IEnumerable<ILightEntityCore> target, object mode)
    {
        target.CallService("set_mode", new YeelightSetModeParameters { Mode = mode });
    }

    ///<summary>Enables or disables music_mode.</summary>
    public static void SetMusicMode(this ILightEntityCore target, YeelightSetMusicModeParameters data)
    {
        target.CallService("set_music_mode", data);
    }

    ///<summary>Enables or disables music_mode.</summary>
    public static void SetMusicMode(this IEnumerable<ILightEntityCore> target, YeelightSetMusicModeParameters data)
    {
        target.CallService("set_music_mode", data);
    }

    ///<summary>Enables or disables music_mode.</summary>
    ///<param name="target">The ILightEntityCore to call this service for</param>
    ///<param name="musicMode">Use true or false to enable / disable music_mode.</param>
    public static void SetMusicMode(this ILightEntityCore target, bool musicMode)
    {
        target.CallService("set_music_mode", new YeelightSetMusicModeParameters { MusicMode = musicMode });
    }

    ///<summary>Enables or disables music_mode.</summary>
    ///<param name="target">The IEnumerable&lt;ILightEntityCore&gt; to call this service for</param>
    ///<param name="musicMode">Use true or false to enable / disable music_mode.</param>
    public static void SetMusicMode(this IEnumerable<ILightEntityCore> target, bool musicMode)
    {
        target.CallService("set_music_mode", new YeelightSetMusicModeParameters { MusicMode = musicMode });
    }

    ///<summary>Start a custom flow, using transitions from https://yeelight.readthedocs.io/en/stable/yeelight.html#flow-objects.</summary>
    public static void StartFlow(this ILightEntityCore target, YeelightStartFlowParameters data)
    {
        target.CallService("start_flow", data);
    }

    ///<summary>Start a custom flow, using transitions from https://yeelight.readthedocs.io/en/stable/yeelight.html#flow-objects.</summary>
    public static void StartFlow(this IEnumerable<ILightEntityCore> target, YeelightStartFlowParameters data)
    {
        target.CallService("start_flow", data);
    }

    ///<summary>Start a custom flow, using transitions from https://yeelight.readthedocs.io/en/stable/yeelight.html#flow-objects.</summary>
    ///<param name="target">The ILightEntityCore to call this service for</param>
    ///<param name="count">The number of times to run this flow (0 to run forever).</param>
    ///<param name="action">The action to take after the flow stops.</param>
    ///<param name="transitions">Array of transitions, for desired effect. Examples https://yeelight.readthedocs.io/en/stable/flow.html. eg: [{ &quot;TemperatureTransition&quot;: [1900, 1000, 80] }, { &quot;TemperatureTransition&quot;: [1900, 1000, 10] }]</param>
    public static void StartFlow(this ILightEntityCore target, double? count = null, object? action = null, object? transitions = null)
    {
        target.CallService("start_flow", new YeelightStartFlowParameters { Count = count, Action = action, Transitions = transitions });
    }

    ///<summary>Start a custom flow, using transitions from https://yeelight.readthedocs.io/en/stable/yeelight.html#flow-objects.</summary>
    ///<param name="target">The IEnumerable&lt;ILightEntityCore&gt; to call this service for</param>
    ///<param name="count">The number of times to run this flow (0 to run forever).</param>
    ///<param name="action">The action to take after the flow stops.</param>
    ///<param name="transitions">Array of transitions, for desired effect. Examples https://yeelight.readthedocs.io/en/stable/flow.html. eg: [{ &quot;TemperatureTransition&quot;: [1900, 1000, 80] }, { &quot;TemperatureTransition&quot;: [1900, 1000, 10] }]</param>
    public static void StartFlow(this IEnumerable<ILightEntityCore> target, double? count = null, object? action = null, object? transitions = null)
    {
        target.CallService("start_flow", new YeelightStartFlowParameters { Count = count, Action = action, Transitions = transitions });
    }
}