feed_cats:
  alias: Feed Cats
  sequence:
  - service: notify.alexa_media
    data:
      target: media_player.all_speakers
      message: Rupert, Gunther it's dinner time you little beauties.
      data:
        type: announce
        method: all
      title: Cat's dinner time
  - service: number.set_value
    data:
      value: '3'
    target:
      entity_id: number.rojeco_pet_feeder_feed
  mode: single
  icon: hass:cat
notify_alexa_everywhere:
  alias: Notify Alexa Everywhere
  sequence:
  - service: notify.alexa_media
    data:
      title: '{{title}}'
      message: '{{message}}'
      target: media_player.all_speakers
      data:
        type: announce
        method: all
notify_all:
  alias: Notify All
  sequence:
  - data_template:
      title: '{{title}}'
      message: '{{message}}'
    action: script.notify_alexa_everywhere
  - device_id: 3cf9e880497a947bf86f81e62cdb9fc3
    domain: mobile_app
    type: notify
    message: '{{message}}'
    title: '{{title}}'
  mode: single
room_controller_reset:
  alias: Room Controller Reset
  sequence:
  - service: light.turn_off
    target:
      entity_id: group.{{room}}_lights
  - service: entity_controller.clear_block
    data:
      entity_id: group.{{room}}_entities
  - service: input_boolean.turn_off
    target:
      entity_id: group.{{room}}_overrides
  mode: single
new_script:
  alias: activate_alexa_actionable_notification
  description: Activates an actionable notification on a specific echo device
  mode: single
  icon: mdi:message-badge-outline
  fields:
    text:
      description: The text you would like alexa to speak.
      example: What would you like the thermostat set to?
    event_id:
      description: Correlation ID for event responses
      example: ask_for_temperature
    alexa_device:
      description: Alexa device you want to trigger
      example: media_player.bedroom_echo
  sequence:
  - service: input_text.set_value
    data:
      entity_id: input_text.alexa_actionable_notification
      value: '{"text": "{{ text }}", "event": "{{ event_id }}"}'
  - service: media_player.play_media
    data:
      entity_id: '{{ alexa_device }}'
      media_content_type: skill
      media_content_id: amzn1.ask.skill.7c6c5354-6fd2-4c4f-9a60-165e5ce9cac9
alarm_triggered:
  alias: Alarm Triggered
  sequence:
  - service: notify.alexa_media
    data:
      message: Alarm Triggered
      title: Alarm Triggered
      target: media_player.all_speakers
      data:
        type: announce
        method: all
  - service: media_player.play_media
    target:
      entity_id: media_player.all_speakers
    data:
      media_content_id: buzzers_pistols_01
      media_content_type: sound
  mode: single
  icon: mdi:shield-home
yeelight_dimmer:
  alias: Yeelight Dimmer Up
  mode: single
  icon: mdi:lightbulb-on-50
  fields:
    entitiy_id:
      name: entitiy_id
      description: The entity ID of your bulb
      example: light.your_light
      required: true
    button_state:
      name: button_state
      description: The entity ID of the input_text helper for your button state
      example: input_text.your_button_state
      required: true
  sequence:
  - variables:
      counter: 0
  - repeat:
      while:
      - condition: template
        value_template: '{{ counter < 10 and ''brightness_move_up'' in states(button_state)
          }}'
      sequence:
      - service: light.turn_on
        metadata: {}
        data:
          brightness_step_pct: 10
        target:
          entity_id: '{{ entity_id }}'
      - delay:
          seconds: 1
      - variables:
          counter: '{{ counter + 1 }}'
yeelight_dimmer_down:
  alias: Yeelight Dimmer Down
  mode: single
  icon: mdi:lightbulb-on-50
  fields:
    entitiy_id:
      name: entitiy_id
      description: The entity ID of your bulb
      example: light.your_light
      required: true
    button_state:
      name: button_state
      description: The entity ID of the input_text helper for your button state
      example: input_text.your_button_state
      required: true
  sequence:
  - variables:
      counter: 0
  - repeat:
      while:
      - condition: template
        value_template: '{{ counter < 10 and ''brightness_move_down'' in states(button_state)
          }}'
      sequence:
      - service: light.turn_on
        metadata: {}
        data:
          brightness_step_pct: -10
        target:
          entity_id: '{{ entity_id }}'
      - delay:
          seconds: 1
      - variables:
          counter: '{{ counter + 1 }}'
